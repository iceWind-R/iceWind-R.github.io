<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thorine</title>
  
  <subtitle>生活很难，但请务必坚持</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://icewind-r.github.io/"/>
  <updated>2020-05-05T02:28:34.343Z</updated>
  <id>http://icewind-r.github.io/</id>
  
  <author>
    <name>大雪初晴丶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>闺女开学有感</title>
    <link href="http://icewind-r.github.io/2020/05/05/%E9%97%BA%E5%A5%B3%E5%BC%80%E5%AD%A6%E6%9C%89%E6%84%9F/"/>
    <id>http://icewind-r.github.io/2020/05/05/%E9%97%BA%E5%A5%B3%E5%BC%80%E5%AD%A6%E6%9C%89%E6%84%9F/</id>
    <published>2020-05-05T02:15:11.000Z</published>
    <updated>2020-05-05T02:28:34.343Z</updated>
    
    <content type="html"><![CDATA[<p>如题</p><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如题&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(5.5)</title>
    <link href="http://icewind-r.github.io/2020/05/04/Reinvent-5-5/"/>
    <id>http://icewind-r.github.io/2020/05/04/Reinvent-5-5/</id>
    <published>2020-05-04T13:25:40.000Z</published>
    <updated>2020-05-05T01:20:36.735Z</updated>
    
    <content type="html"><![CDATA[<p>5.5日</p><a id="more"></a><hr><p>明天闺女就要开学了，哎，两个月时间啊。</p><p>只能剪掉我五个多月的长发寄托我的思念。</p><br><p>继续加油。</p><table><thead><tr><th>时间</th><th>内容</th><th>计划用时</th><th>实际用时</th></tr></thead><tbody><tr><td>上午</td><td>计网PPT作业完成</td><td>60min</td><td></td></tr><tr><td></td><td>数据库复习第六章</td><td>30min</td><td>40min</td></tr><tr><td></td><td>Android界面初创建</td><td>90min</td><td></td></tr><tr><td>下午</td><td>SQL server尝试使用</td><td>60min</td><td></td></tr><tr><td>晚上</td><td>matlab整理第四章</td><td>60min</td><td></td></tr><tr><td></td><td>体育活动</td><td>30min</td><td></td></tr><tr><td></td><td>Android</td><td>60min</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;5.5日&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(5.4)</title>
    <link href="http://icewind-r.github.io/2020/05/03/Reinvent-5-4/"/>
    <id>http://icewind-r.github.io/2020/05/03/Reinvent-5-4/</id>
    <published>2020-05-03T14:07:46.000Z</published>
    <updated>2020-05-04T03:54:46.522Z</updated>
    
    <content type="html"><![CDATA[<p>5.4日</p><a id="more"></a><hr><p><strong>今日计划</strong></p><p>专心一点、抗干扰。</p><table><thead><tr><th>时间</th><th>内容</th><th>计划用时</th><th>实际用时</th></tr></thead><tbody><tr><td>上午</td><td>概率论作业</td><td>60min</td><td>30min</td></tr><tr><td></td><td>数据库复习第六章</td><td>30min</td><td>40min</td></tr><tr><td></td><td>体育活动</td><td>30min</td><td>未完成</td></tr><tr><td></td><td>Android项目初创建并导入到GitHub</td><td>90min</td><td>30min</td></tr><tr><td>下午</td><td>计网PPT作业完成</td><td>60min</td><td></td></tr><tr><td></td><td>SQL server尝试使用</td><td>60min</td><td></td></tr><tr><td>晚上</td><td>matlab整理第四章</td><td>60min</td><td></td></tr><tr><td></td><td>体育活动</td><td>30min</td><td></td></tr><tr><td></td><td>Android慢慢来</td><td>60min</td><td></td></tr></tbody></table><p> <strong>总结</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;5.4日&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>电脑系统重装前的准备工作</title>
    <link href="http://icewind-r.github.io/2020/05/03/%E7%94%B5%E8%84%91%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/"/>
    <id>http://icewind-r.github.io/2020/05/03/%E7%94%B5%E8%84%91%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</id>
    <published>2020-05-03T07:12:07.000Z</published>
    <updated>2020-05-03T23:35:24.627Z</updated>
    
    <content type="html"><![CDATA[<p>总结下次电脑系统重装需要的环境软件和操作。</p><a id="more"></a><hr><h2 id="电脑初始化前的操作"><a href="#电脑初始化前的操作" class="headerlink" title="电脑初始化前的操作"></a>电脑初始化前的操作</h2><p>不能着急，需要把电脑中的资料提前保存，预计是百度网盘，记得开会员。要保存的资料有：</p><ul><li>MyBlog</li><li>每个编译器存放的代码</li><li>Wallpaper Engine下的壁纸</li><li>下载的音乐</li><li>D盘下的小工具</li><li>谷歌浏览助手</li><li>额滴小心肝</li></ul><h2 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h2><p>首先是要给系统的磁盘分好类。</p><ol><li>D盘（程序盘）：一级目录为application、download、server、MyBlog。</li><li>E盘（资料盘）：包括学习资料、我的工具，同时把桌面、document等等移到此盘下（先建一个大文件夹（我的文件），然后把每一项移动进来）。</li><li>F盘（游戏盘）：每个公司一个文件夹。Steam，Wegame，uplay等。</li></ol><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Java、PHP（php_study）</p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="学习类"><a href="#学习类" class="headerlink" title="学习类"></a>学习类</h3><h4 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h4><p>IDEA、PyCharm、PHPStorm、AS、CodeBlocks、Eclipse、VS、VSCode</p><p>（与Github绑定）</p><h4 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h4><p>HBulider、Notepad++、Sublime Text、RegexBuddy</p><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>MySQL、Redis、SQL server、Navicat For MySQL、SQLiteStudio</p><p>php_study中有MySQL，了解后使用</p><h4 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h4><p>VM、Genymotion</p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>Xftp、Xshell</p><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><p>chrome、Firefox</p><p>WPS、Everything、印象笔记、bandzip、有道翻译、</p><p>Iris（护眼）、百度网盘、迅雷、</p><p>格式工厂、PS，PR、ScreenToGif、小蝴蝶</p><h3 id="娱乐类"><a href="#娱乐类" class="headerlink" title="娱乐类"></a>娱乐类</h3><p>微信、TIM、QQ、网易云音乐、腾讯视频、</p><p>网易加速、雷神加速、Steam（Wallpaper Engine）、WeGame、暴雪战网</p><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><p>VM中建立自己的Linux系统。</p><p>tomcat、</p><p>apache、MySQL、phpMyadmin、PHP等由phpstudy提供</p><p>配置虚拟主机</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结下次电脑系统重装需要的环境软件和操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(5.3)</title>
    <link href="http://icewind-r.github.io/2020/05/02/Reinvent-5-3/"/>
    <id>http://icewind-r.github.io/2020/05/02/Reinvent-5-3/</id>
    <published>2020-05-02T13:25:08.000Z</published>
    <updated>2020-05-03T14:10:23.050Z</updated>
    
    <content type="html"><![CDATA[<p>5.3日</p><a id="more"></a><hr><p>今日计划</p><table><thead><tr><th>时间</th><th>内容</th><th>计划用时</th><th>实际用时</th></tr></thead><tbody><tr><td>上午</td><td>篮球+休息</td><td>120min</td><td>200min</td></tr><tr><td></td><td>计网3、4页PPT作业完成</td><td>60min</td><td>60min</td></tr><tr><td></td><td>概率论与数理统计复习和作业10</td><td>60min</td><td>未完成</td></tr><tr><td>下午</td><td>数据库第六章复习</td><td>30min</td><td>未完成</td></tr><tr><td></td><td>数据库第七章作业</td><td>60min</td><td>未完成</td></tr><tr><td>晚上</td><td>MATLAB考试</td><td>60min</td><td>20min</td></tr><tr><td></td><td>Android学习</td><td>30min+</td><td>未完成</td></tr></tbody></table><p>今天要抓住白天的效率，主要是纸质作业学习，静下心来学习。</p><p><strong>总结</strong></p><p>要提高抗干扰能力，尝试学习一会再玩。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;5.3日&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(5.2)</title>
    <link href="http://icewind-r.github.io/2020/05/02/Reinvent-5-2/"/>
    <id>http://icewind-r.github.io/2020/05/02/Reinvent-5-2/</id>
    <published>2020-05-01T22:11:52.000Z</published>
    <updated>2020-05-02T13:28:26.076Z</updated>
    
    <content type="html"><![CDATA[<p>5.2日</p><a id="more"></a><hr><p>昨天一天都在学习MATLAB，完成了实验二和实验三的一小部分，效率低下，归根结底，没有好好的为自己做计划。</p><p><strong>今日计划</strong></p><table><thead><tr><th>时间</th><th>内容</th><th>计划用时</th><th>实际用时</th></tr></thead><tbody><tr><td>上午</td><td>MATLAB实验三完成，理解各种命令。</td><td>90min</td><td>170min</td></tr><tr><td></td><td>计网四页PPT作业完成</td><td>120min</td><td>60min+？</td></tr><tr><td></td><td>上午的体育活动</td><td>30min</td><td>完成</td></tr><tr><td>下午</td><td>概率论与数理统计复习和作业10</td><td>90min</td><td>未完成</td></tr><tr><td></td><td>博客搜索功能改善</td><td>30min</td><td>5min</td></tr><tr><td></td><td>数据库原理第六章复习</td><td>30min</td><td>未完成</td></tr><tr><td>晚上</td><td>PHP复习</td><td>60min</td><td>30min+30min</td></tr><tr><td></td><td>晚上的体育活动</td><td>30min</td><td>未完成</td></tr></tbody></table><p>今天早上6点起来做的规划，加油。</p><p>我再坚持五分钟，下次我一定放弃。</p><p><strong>上午总结</strong></p><p>截止9：30完成matlab的实验内容，效率不高，命令不熟悉，没学过，现学，花费时间长。</p><p>第一项比计划多出一个多小时的完成时间</p><p>计网任务完成不到一半用时一个小时，预计还需要一个半小时完成。</p><p><strong>下午晚上</strong></p><p>其实脑子蛮清醒，也不是不想干，就是不知道干什么？</p><p>想做些电脑上学习的事，但是剩下的计划都是纸上书上，或者是Android这样的大项目，有点无从下手。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;5.2日&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>PHP——数据库MySQL操作</title>
    <link href="http://icewind-r.github.io/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/"/>
    <id>http://icewind-r.github.io/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/</id>
    <published>2020-04-29T13:18:52.000Z</published>
    <updated>2020-05-02T07:17:00.320Z</updated>
    
    <content type="html"><![CDATA[<p>总结PHP中操作MySQL的相关方法与命令。</p><a id="more"></a><hr><h2 id="PHP连接MySQL"><a href="#PHP连接MySQL" class="headerlink" title="PHP连接MySQL"></a>PHP连接MySQL</h2><h3 id="PHP连接MySQL服务器"><a href="#PHP连接MySQL服务器" class="headerlink" title="PHP连接MySQL服务器"></a>PHP连接MySQL服务器</h3><h4 id="mysqli-connect"><a href="#mysqli-connect" class="headerlink" title="mysqli_connect()"></a>mysqli_connect()</h4><ul><li><p>描述：连接到MySQL服务器</p></li><li><p>语法：<code>$link = mysqli_connect([host],[username],[password],[dbName],[port])</code></p></li><li><p>返回值：连接成功，则返回MySQLi连接对象。如果失败，则返回FALSE。</p></li></ul><h4 id="运算符"><a href="#运算符" class="headerlink" title="@运算符"></a>@运算符</h4><ul><li>PHP支持错误抑制运算符@。</li><li>可以把它放在<strong>变量，函数、include调用</strong>和<strong>变量</strong>等前面。</li></ul><p>在连接数据库失败的时候，往往系统给出提示信息，会暴露电脑的相关配置，可能发生信息的不安全泄露，造成隐患。我们可以使用错误抑制符@来避免数据库连接失败的错误提示。</p><p>用法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$link = @ mysqli_connect([host],[username],[password],[dbName],[port]);</span><br></pre></td></tr></table></figure><h4 id="die-和exit"><a href="#die-和exit" class="headerlink" title="die()和exit()"></a>die()和exit()</h4><ul><li>输出一个消息并且退出当前脚本，作用等同。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$db_host = <span class="string">"localhost"</span>;<span class="comment">//主机号</span></span><br><span class="line">$db_port = <span class="string">"3306"</span>;   <span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">"root"</span>;   <span class="comment">//用户名</span></span><br><span class="line">$db_password = <span class="string">"root"</span>; <span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">"mydb"</span>;   <span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">"utf8"</span>;   <span class="comment">//字符集</span></span><br><span class="line"><span class="keyword">if</span>(!$link = @ mysqli_connect($db_host.<span class="string">":"</span>.$db_port,$db_user,$db_password))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"连接失败"</span>);<span class="comment">//中止程序向下运行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mysqli-connect-error"><a href="#mysqli-connect-error" class="headerlink" title="mysqli_connect_error()"></a>mysqli_connect_error()</h4><ul><li>返回连接失败的错误信息。</li></ul><h4 id="mysqli-close"><a href="#mysqli-close" class="headerlink" title="mysqli_close()"></a>mysqli_close()</h4><ul><li>关闭先前打开的数据库连接</li><li>语法：<code>bool mysqli_close(mysqli $link);</code></li></ul><h3 id="选择当前数据库"><a href="#选择当前数据库" class="headerlink" title="选择当前数据库"></a>选择当前数据库</h3><p>一个数据库服务器包含很多的数据库，通常需要针对某个具体的数据库操作。</p><p>语法：bool mysqli_select_db(mysqli $link,string $database)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!mysqli_select_db($link,$database))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"选择数据库$&#123;db_name&#125;失败"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置客户端字符集"><a href="#设置客户端字符集" class="headerlink" title="设置客户端字符集"></a>设置客户端字符集</h3><p>设置默认字符编码</p><p>语法：<code>bool mysqli_set_charset(mysqli $link,string $ charset)</code></p><h2 id="执行SQL语句"><a href="#执行SQL语句" class="headerlink" title="执行SQL语句"></a>执行SQL语句</h2><h4 id="mysqli-query"><a href="#mysqli-query" class="headerlink" title="mysqli_query()"></a>mysqli_query()</h4><ul><li>发送一条MySQL查询</li><li>语法：<code>resource mysqli_query(mysqli $link,string $query)</code></li><li>$query是查询的sql语句字符串</li></ul><p><strong>说明：</strong>mysqli_query()仅对SELECT，SHOW 或 DESCRIBE 语句返回一个mysqli_result结果集对象，如果查询不正确返回FALSE。对于其他类型的SQL语句，成功返回TRUE，失败返回FALSE。非FALSE的返回值意味着查询是合法的并能够被服务器执行。</p><p><strong>注意</strong>：查询字符串不应以分号结束，和命令行模式下有区别。</p><p>mysqli_result结果集对象：结果已经查到，但必须用特殊的方法才能取出数据。</p><h4 id="mysqli-free-result"><a href="#mysqli-free-result" class="headerlink" title="mysqli_free_result()"></a>mysqli_free_result()</h4><ul><li>释放与结果集相关联的内存</li><li>语法：<code>void mysqli_free_result(mysqli_result $result)</code></li></ul><p><strong>注意</strong>：是结果集对象mysqli_result，而不是bool。</p><h3 id="从结果集获取数据"><a href="#从结果集获取数据" class="headerlink" title="从结果集获取数据"></a>从结果集获取数据</h3><h4 id="mysqli-fetch-row"><a href="#mysqli-fetch-row" class="headerlink" title="mysqli_fetch_row()"></a>mysqli_fetch_row()</h4><ul><li><p>从结果集中取出一行作为枚举数组（下标为整型的是枚举数组，下标为字符串的是关联数组）</p></li><li><p>array mysqli_fetch_row(mysqli_result $result)</p></li><li><p>每调用一次，取出当前行，并把指针指向下一行，下次调用便是下一行的数据。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>($arr = mysqli_fetch_row($result))&#123;</span><br><span class="line">    print_r($arr);<span class="comment">//取出所有数组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mysqli-fetch-assoc"><a href="#mysqli-fetch-assoc" class="headerlink" title="mysqli_fetch_assoc()"></a>mysqli_fetch_assoc()</h4><ul><li><p>从结果集中取出一行作为关联数组</p></li><li><p>语法：<code>array mysqli_fetch_assoc(mysqli_result $result)</code></p></li><li><p>从结果集取得的行生成的关联数组，如果没有更多行则返回FALSE。</p></li></ul><p><strong>注意</strong>：此函数返回的字段名大小写敏感。</p><h4 id="mysqli-fetch-array"><a href="#mysqli-fetch-array" class="headerlink" title="mysqli_fetch_array()"></a>mysqli_fetch_array()</h4><ul><li><p>从结果集中取出一行作为关联数组或数字数组，或二者兼有。</p></li><li><p>语法：<code>array mysqli_fetch_array(mysqli_result $result [,int $result_type = MYSQLI_BOTH])</code></p></li><li><p>$result_type是一个常量，取值：MYSQLI_BOTH （二者兼有，默认），MYSQLI_ASSOC （关联索引），MYSQLI_NUM（数字索引） </p></li><li><p>从结果集取得的行生成的数组，如果没有更多行则返回FALSE。</p></li></ul><p><strong>注意</strong>：此函数返回的字段名大小写敏感。</p><p>二者兼有<strong>举例</strong>（一份数据在数组中存两遍，一遍枚举数组，一遍关联数组）：</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/1.png" class><h4 id="mysqli-fetch-all"><a href="#mysqli-fetch-all" class="headerlink" title="mysqli_fetch_all()"></a>mysqli_fetch_all()</h4><p>从结果集中取出所有行作为关联数组、枚举数组或二者兼有。</p><p>语法：<code>mixed mysqli_fetch_all(mysqli_result $result [,int $result_type = MYSQLI_NUM])</code></p><p>与之前不同的是，默认为枚举数组；即第一维永远为数字，表示第几条记录，第二维字段可以改变，数字、字符串或二者兼有。</p><h4 id="mysqli-error"><a href="#mysqli-error" class="headerlink" title="mysqli_error()"></a>mysqli_error()</h4><ul><li><p>显示执行sql语句失败的错误信息</p></li><li><p>语法：<code>mysqli_error(mysqli $link)</code></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"insert into test(id,name,age) values(null,'李四',25)"</span>;</span><br><span class="line">$result = mysqli_query($link,$sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"2、数据插入失败:"</span>.mysqli_error($link));</span><br></pre></td></tr></table></figure><h3 id="获取记录数"><a href="#获取记录数" class="headerlink" title="获取记录数"></a>获取记录数</h3><h4 id="mysqli-num-rows"><a href="#mysqli-num-rows" class="headerlink" title="mysqli_num_rows()"></a>mysqli_num_rows()</h4><p>取得结果集中行的数目</p><p>语法：<code>int mysqli_num_rows(mysqli_result $result)</code></p><p><strong>注意：</strong>此命令仅对SELECT语句有效。</p><h4 id="mysqli-affected-rows"><a href="#mysqli-affected-rows" class="headerlink" title="mysqli_affected_rows()"></a>mysqli_affected_rows()</h4><p>取得前一次MySQL操作所影响的记录行数，包括SELECT,UPDATE,INSERT或DELETE。</p><p>语法：<code>int mysqli_affected_rows(mysqli $link)</code></p><p><strong>注意：</strong>如果最近一次查询失败，函数返回-1。当使用UPDATE查询，MySQL不会将原值和新值一样的值更新，即此条记录不代表被修改。返回值不一定就是查询条件所符合的记录，只有修改过的记录数才会被返回。</p><p><strong>案例演示注意事项</strong></p><p>1、首先是表单的提交，在php中判断是否提交表单，可以在表单中设置隐藏域，值为一个随机值，判断这个随机且唯一的值是否正确即可判断表单是否提交，该方法可避免其他人提交表单修改自己数据库的不安全情况。</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/2.png" class><p>2、然后是复选框的提交，复选框提交时会出现覆盖现象，此时在name属性后添加<code>[]</code>来表明该属性为数组属性。</p><p>PHP会把<code>name=&quot;hobby[]&quot;</code>看成添加一个数组元素，而HTML会把它看成一个字符串。</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/3.png" class><p><strong>提示：</strong>将多个爱好连成一个值，并写入到数据库某个字段中，只需要一个字段来存储爱好，用到字符串的拼接。</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/4.png" class>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结PHP中操作MySQL的相关方法与命令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(4.24)</title>
    <link href="http://icewind-r.github.io/2020/04/24/Reinvent-4-24/"/>
    <id>http://icewind-r.github.io/2020/04/24/Reinvent-4-24/</id>
    <published>2020-04-24T05:06:53.000Z</published>
    <updated>2020-04-29T13:20:23.400Z</updated>
    
    <content type="html"><![CDATA[<p>4.24日</p><a id="more"></a><hr><p>今天上午打球洗澡，概率论课没听，已经预习了，但是省出来的时间并没有做有意义的事情。</p><p>下午晚上计划，看app记账本视频，完成基本的界面布局。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;4.24日&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(4.23)</title>
    <link href="http://icewind-r.github.io/2020/04/23/Reinvent-4-23/"/>
    <id>http://icewind-r.github.io/2020/04/23/Reinvent-4-23/</id>
    <published>2020-04-23T08:47:14.000Z</published>
    <updated>2020-04-29T13:20:26.275Z</updated>
    
    <content type="html"><![CDATA[<p>总结从4.16~4.23这一个周。</p><a id="more"></a><hr><p>虽然写了十天时光荒废的总结，但还是没有真正的提高效率。</p><p>就强了一点每天的学习偶尔跟跟，作业写写抄抄。</p><p>别人的第一阶段十天冲刺都进行到第八九天了，而我还没开始。</p><p>想了想，问题可能还是每天没有目标吧。</p><p>我决定从现在开始，每天改变自己一点</p><p>下一天的目标前一天晚上想好，写下来</p><p>当天的目标认真落实，每天总结，要细致</p><p>一百天自我改造计划，从现在开始</p><p>一定要记住！！是现在，不是一会，更不是明天！</p><p>今晚目标</p><p>概率论考试完成，预习三四个超星视频</p><p>看直播少于30分钟</p><p>练习体育交叉步，平板支撑，马步</p><p>明天目标</p><p>上午，预习概率论四五个视频，上课好好听讲，不要看直播，少玩手机</p><p>中午，少玩手机，认真睡觉，无聊就看看app记账本视频。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结从4.16~4.23这一个周。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>十天时光荒废总结</title>
    <link href="http://icewind-r.github.io/2020/04/16/%E5%8D%81%E5%A4%A9%E6%97%B6%E5%85%89%E8%8D%92%E5%BA%9F%E6%80%BB%E7%BB%93/"/>
    <id>http://icewind-r.github.io/2020/04/16/%E5%8D%81%E5%A4%A9%E6%97%B6%E5%85%89%E8%8D%92%E5%BA%9F%E6%80%BB%E7%BB%93/</id>
    <published>2020-04-16T14:07:24.000Z</published>
    <updated>2020-04-17T12:22:43.253Z</updated>
    
    <content type="html"><![CDATA[<p>十天时光已然逝去，但万事有弊就有利，相信浪费的时光也有其宝贵的价值。</p><a id="more"></a><hr><p>这十天真是浑浑噩噩的十天，难以想象，现在回头看看，竟不能细想出干了些什么事，怕是每天都是重复，毫无收获吧。</p><p>十天状态：</p><p>1、课不好好上，就是不听，玩手机，心安理得，不像以前带着愧疚感玩。</p><p>2、没有上进，毫无作为，什么都不想干。</p><p>3、混吃等死？破罐子破摔？真是可怕。</p><p>4、张武？每天就是这么没的。</p><p>真的觉得世界都黑暗了，不知道该干什么，什么都干不好。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;十天时光已然逝去，但万事有弊就有利，相信浪费的时光也有其宝贵的价值。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(4.16)</title>
    <link href="http://icewind-r.github.io/2020/04/12/Reinvent-4-16/"/>
    <id>http://icewind-r.github.io/2020/04/12/Reinvent-4-16/</id>
    <published>2020-04-12T07:18:17.000Z</published>
    <updated>2020-04-16T14:01:18.051Z</updated>
    
    <content type="html"><![CDATA[<p>4.8日~4.16总结</p><a id="more"></a><hr><p><strong>4.8日~4.12日</strong></p><p>周二到周天五天</p><p>什么都没干</p><p>一直在玩游戏混，打了5天的CF，我都不敢信。</p><p>卸了卸了。</p><p>中午睡得不错，争取一下，该好好干了。</p><p><strong>4.13日~4.16日</strong></p><p>尝试进入状态 ，但效果极差。</p><p><strong>4.16晚</strong></p><p>总结原因，和闺女交流，感觉很棒。</p><p>聊天记录索引：时间：2020.4.16 第一句话：今天怎么样啊？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;4.8日~4.16总结&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(4.7)</title>
    <link href="http://icewind-r.github.io/2020/04/07/Reinvent-4-7/"/>
    <id>http://icewind-r.github.io/2020/04/07/Reinvent-4-7/</id>
    <published>2020-04-07T03:02:23.000Z</published>
    <updated>2020-04-16T13:54:29.507Z</updated>
    
    <content type="html"><![CDATA[<p>4.7日总结。</p><a id="more"></a><hr><p><strong>上午总结</strong></p><p>上课的同时做PPT，群内三人讨论，成果还可以。</p><p><strong>下午晚上总结</strong></p><p>发挥的不错进行了建民的原型展示，但是，之后的时间都废掉了，唉，不能把上完建民课就看成了万事大吉。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;4.7日总结。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(4.6)</title>
    <link href="http://icewind-r.github.io/2020/04/06/Reinvent-4-6/"/>
    <id>http://icewind-r.github.io/2020/04/06/Reinvent-4-6/</id>
    <published>2020-04-06T03:58:17.000Z</published>
    <updated>2020-04-07T03:04:20.256Z</updated>
    
    <content type="html"><![CDATA[<p>4.6日总结。</p><a id="more"></a><hr><p><strong>上午总结</strong>：7:00~12:40：打球洗澡等等。学习概率论40分钟，Android30分钟，效率不高，手机视频刷了一些。</p><p><strong>下午晚上总结</strong>：抗干扰能力真的很差，又发火了，但是我觉得是必要的，打了一晚上游戏，看直播，浑浑噩噩。</p><p>今日总结：</p><p>客观条件真的有限，希望不要真的就堕落吧，尽全力完成该完成的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;4.6日总结。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Android Jetpack架构组件（一）</title>
    <link href="http://icewind-r.github.io/2020/04/05/Android-1/"/>
    <id>http://icewind-r.github.io/2020/04/05/Android-1/</id>
    <published>2020-04-05T11:09:58.000Z</published>
    <updated>2020-04-07T04:39:58.174Z</updated>
    
    <content type="html"><![CDATA[<p>开始学习Android Jetpack相关知识。</p><a id="more"></a><hr><p>首先补充一点内容。</p><h3 id="设置app的横屏和竖屏"><a href="#设置app的横屏和竖屏" class="headerlink" title="设置app的横屏和竖屏"></a>设置app的横屏和竖屏</h3><p>设置app某个界面的横屏和竖屏的不同显示方式。</p><img src="/2020/04/05/Android-1/1.png" class><p>即可创建当前页面的一个横屏副本。</p><p>app页面的横屏和竖屏转换是一个Activity的杀死重创建的过程，即界面被刷新，如果当前界面的数据没保存，则会丢失。</p><p>如果需要临时保存当前页面的数据，使其在反转后数据不丢失，则需要以下操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先注意onCreate(Bundle savedInstanceState)的参数，为保存当前页面的临时数据，Bundle类为key:value形式。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        textView = findViewById(R.id.textView);</span><br><span class="line">        button = findViewById(R.id.button);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (savedInstanceState != <span class="keyword">null</span>)&#123;</span><br><span class="line">            String s = savedInstanceState.getString(<span class="string">"KEY"</span>);</span><br><span class="line">            textView.setText(s);</span><br><span class="line">        &#125;</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                textView.setText(R.string.button);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSaveInstanceState(outState);</span><br><span class="line">        outState.putString(<span class="string">"KEY"</span>, textView.getText().toString());<span class="comment">//存入Bundle对象，便于onCreate方法取出</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Android-Jetpack"><a href="#Android-Jetpack" class="headerlink" title="Android Jetpack"></a>Android Jetpack</h2><img src="/2020/04/05/Android-1/2.png" class><p><strong>ViewModel</strong>：对象为特定的界面组件（如 Fragment 或 Activity）提供数据，并包含数据处理业务逻辑，以与模型进行通信。例如，ViewModel 可以调用其他组件来加载数据，还可以转发用户请求来修改数据。ViewModel 不了解界面组件，因此不受配置更改（如在旋转设备时重新创建 Activity）的影响。</p><p><strong>LiveData</strong>：是一种可观察的数据存储器。应用中的其他组件可以使用此存储器监控对象的更改，而无需在它们之间创建明确且严格的依赖路径。LiveData 组件还遵循应用组件（如 Activity、Fragment 和 Service）的生命周期状态，并包括清理逻辑以防止对象泄漏和过多的内存消耗。</p><p><strong>DataBinding</strong>：声明性地将可观察数据绑定到UI元素，其目的在于是为了脱离Controller与View之间的引用联系，很类似Butterknife库，使用也比较相似。</p><p><strong>Navigation</strong>：允许用户在应用程序中浏览、进入和退出不同内容的Fragment。Navigation能够实现从简单的按钮单击到更复杂的模式，如应用程序栏和导航抽屉。导航组件还通过遵循一套既定的原则来确保一致和可预测的用户体验。</p><p><strong>Lifecycles</strong>：Lifecycles是一个生命周期感知组件，当Activity或者Fragment的生命周期发生改变的时会，Lifecycles也会做出相应的生命周期状态的改变，它保存关于组件生命周期状态的信息(比如活动或片段)，并允许其他对象观察这种状态。</p><h3 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a><strong>ViewModel</strong></h3><p>刚入门，做了一个简短的案例，通过ViewModel管理UI产生的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两个按钮，实现+1，+2操作</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="comment">//用的是ViewModelProviders，可能需要引入Gradle配置</span></span><br><span class="line">        myVideModel = ViewModelProviders.of(<span class="keyword">this</span>).get(MyVideModel<span class="class">.<span class="keyword">class</span>)</span>;<span class="comment">//创建ViewModel对象</span></span><br><span class="line">        textView = findViewById(R.id.textView);</span><br><span class="line">        textView.setText(String.valueOf(myVideModel.num));</span><br><span class="line">        button1 = findViewById(R.id.button);</span><br><span class="line">        button2 = findViewById(R.id.button2);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                myVideModel.num ++;</span><br><span class="line">                textView.setText(String.valueOf(myVideModel.num));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                myVideModel.num += <span class="number">2</span>;</span><br><span class="line">                textView.setText(String.valueOf(myVideModel.num));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//MyVideModel自定义的ViewModel类，需要继承自ViewModel类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyVideModel</span> <span class="keyword">extends</span> <span class="title">ViewModel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ViewModel的出现主要为了解决两个问题：<br>1.当Actvitiy销毁重建过程中的数据恢复问题，虽然原来可以使用<code>onSaveInstanceState()</code>来完成，但是只支持能被序列化的数据而且是小量数据，对于大量数据则显得有点无力。<br>2.UI控制器的工作繁忙，UI控制器主要用于处理显示，交互，其他的额外操作可以委托给其他类完成，将不应该分配给UI的任务分离出来是必要的。</p><h3 id="LiveData"><a href="#LiveData" class="headerlink" title="LiveData"></a>LiveData</h3><img src="/2020/04/05/Android-1/3.png" class><p>LiveData是配合ViewModel使用的</p><p><strong>案例：</strong>实现一个点赞和踩的统计功能</p><p>ViewModelWithLiveData.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.thorine.livedata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.MutableLiveData;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewModelWithLiveData</span> <span class="keyword">extends</span> <span class="title">ViewModel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> MutableLiveData&lt;Integer&gt; LikedNumber;<span class="comment">//创建LiveData的方式</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MutableLiveData&lt;Integer&gt; <span class="title">getLikedNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (LikedNumber == <span class="keyword">null</span>)&#123;</span><br><span class="line">            LikedNumber = <span class="keyword">new</span> MutableLiveData&lt;&gt;();</span><br><span class="line">            LikedNumber.setValue(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> LikedNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLikedNumber</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        LikedNumber.setValue(LikedNumber.getValue() + n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.thorine.livedata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Observer;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ViewModelWithLiveData viewModelWithLiveData;</span><br><span class="line">    TextView textView;</span><br><span class="line">    ImageButton imageButtonLike , imageButtonDislike;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        textView = findViewById(R.id.textView);</span><br><span class="line">        imageButtonLike = findViewById(R.id.imageButton);</span><br><span class="line">        imageButtonDislike = findViewById(R.id.imageButton2);</span><br><span class="line"></span><br><span class="line">        viewModelWithLiveData = <span class="keyword">new</span> ViewModelProvider(<span class="keyword">this</span>).get(ViewModelWithLiveData<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        viewModelWithLiveData.getLikedNumber().observe(<span class="keyword">this</span>, <span class="keyword">new</span> Observer&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChanged</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                textView.setText(String.valueOf(integer));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        imageButtonLike.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                viewModelWithLiveData.addLikedNumber(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        imageButtonDislike.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                viewModelWithLiveData.addLikedNumber(-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端</p><img src="/2020/04/05/Android-1/4.png" class><p>并使用了Android Studio中基本的矢量图创建方法。</p><img src="/2020/04/05/Android-1/5.png" class><h3 id="DataBinding"><a href="#DataBinding" class="headerlink" title="DataBinding"></a>DataBinding</h3><p>1、首先需要在gradle中添加DataBinding依赖，具体做法，在defaultConfig下添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataBinding &#123;</span><br><span class="line">            enabled <span class="keyword">true</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>2、在xml布局中引入DataBinding，点击首行代码的小灯泡即可。</p><p>3、在MainActivity.java中修改代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//setContentView(R.layout.activity_main);</span></span><br><span class="line">binding = DataBindingUtil.setContentView(<span class="keyword">this</span>,R.layout.activity_main);</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">binding.setData(myViewModel);</span><br><span class="line">binding.setLifecycleOwner(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><p>4、xml布局文件的<code>&lt;data&gt;</code>中添加</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;data&gt;</span><br><span class="line">&lt;variable</span><br><span class="line">name=<span class="string">"data"</span></span><br><span class="line">type=<span class="string">"com.thorine.databinding.MyViewModel"</span> /&gt;</span><br><span class="line">&lt;/data&gt;</span><br></pre></td></tr></table></figure><p>textView中获取数值：<code>android:text=&quot;@{String.valueOf(data.number)}&quot;</code></p><p>Button中绑定监听事件：<code>android:onClick=&quot;@{()-&gt;data.add()}&quot;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开始学习Android Jetpack相关知识。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://iceWind-R.github.io/categories/Android/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="Android" scheme="http://iceWind-R.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Reinvent(4.5)</title>
    <link href="http://icewind-r.github.io/2020/04/05/Reinvent-4-5/"/>
    <id>http://icewind-r.github.io/2020/04/05/Reinvent-4-5/</id>
    <published>2020-04-05T00:35:05.000Z</published>
    <updated>2020-04-05T13:18:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>4.5总结</p><a id="more"></a><hr><table><thead><tr><th align="center">时间</th><th align="center">内容</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">7:20~7:47</td><td align="center">计网</td><td align="center">IP编码（第三次演变）</td></tr><tr><td align="center">7:55~8:10</td><td align="center">计网</td><td align="center">NAT（网络地址转换）</td></tr><tr><td align="center">8:15~8:35</td><td align="center">计网</td><td align="center">哈工大视频（走神严重，效率为0）</td></tr><tr><td align="center">8:35~9.20</td><td align="center">Android</td><td align="center">更新配置新版Android Studio<br>聊天、刷手机、吃苹果</td></tr><tr><td align="center">9:20~11:00</td><td align="center">Android</td><td align="center">看了一个小时左右的视频教程（效率不高）</td></tr></tbody></table><p><strong>上午总结</strong>：容易犯困，脑袋疼，效率不高。但玩的时间不多，主要是注意力不集中。继续加油，好好干。</p><table><thead><tr><th>时间</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>11:10~1:40</td><td>吃饭午休</td><td>效率极低，大量时间浪费在玩手机上，不能边吃饭边玩手机</td></tr></tbody></table><p><strong>中午总结</strong>：没能好好休息，觉得上午干的不错就又放松了警惕。</p><table><thead><tr><th>时间</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>1:40~4:00</td><td>Android</td><td>复习UI控件的使用，效率还可以</td></tr><tr><td>7:00~9:00</td><td>Android</td><td>学习新知识，晚上，效率不大行</td></tr></tbody></table><p><strong>疑难总结</strong></p><ol><li><p>首先是strings.xml中字符串的引用，在代码中需要这样做</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String Chinese = getResources().getString(R.string.checkbox1);</span><br></pre></td></tr></table></figure><p>在theFirst工程下的ui目录，总结各种的ui控件使用和每种控件的监听器基本调用，不难，但是很杂。</p></li><li><p>ProgressBar(Horizontal)中设置indeterminate为true，可以使该水平加载条动态加载显示。</p></li><li><p>设置多语言可翻译的app，在strings.xml中添加外国语言。</p></li><li><p>设置屏幕反转，在activity标签里添加<code>&lt;activity android:screenOrientation=&quot;fullSensor&quot;&gt;</code></p></li></ol><p><strong>总学习时常</strong></p><table><thead><tr><th align="center">内容</th><th align="center">时长</th></tr></thead><tbody><tr><td align="center">计网</td><td align="center">40</td></tr><tr><td align="center">Android</td><td align="center">30+60+120+30</td></tr><tr><td align="center"><strong>总时长</strong></td><td align="center"><strong>4h40min</strong></td></tr></tbody></table><p><strong>今日总结</strong>：</p><p>还是没有做到稳扎稳打，中午很不对劲，结束的早，11：00开始就玩起手机，边玩边做饭还边想着学习，结果什么都没干好，直播不能再这么沉迷的看，结果中午午睡也没有睡好。</p><p>下午时间少，晚上效率不高，做的东西学的知识少。</p><p>还是太多分心，学习的时候好好学，玩的时候好好玩。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;4.5总结&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>自我改造计划（综述）</title>
    <link href="http://icewind-r.github.io/2020/04/04/%E8%87%AA%E6%88%91%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92%EF%BC%88%E7%BB%BC%E8%BF%B0%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/04/04/%E8%87%AA%E6%88%91%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92%EF%BC%88%E7%BB%BC%E8%BF%B0%EF%BC%89/</id>
    <published>2020-04-04T07:33:27.000Z</published>
    <updated>2020-04-04T10:25:04.485Z</updated>
    
    <content type="html"><![CDATA[<p>希望自己不再堕落，每天都有一点收获。</p><p>全文主旨：<strong>戒掉手机</strong>。</p><a id="more"></a><hr><p>每天什么都不想做，只想躺着呆着玩手机？</p><h2 id="提前透支自己的人生，体会过后的空虚"><a href="#提前透支自己的人生，体会过后的空虚" class="headerlink" title="提前透支自己的人生，体会过后的空虚"></a>提前透支自己的人生，体会过后的空虚</h2><blockquote><p>“大半的人在二十岁或三十岁上就死了。一过这个年龄，他们只变了自己的影子。以后的生命不过是用来模仿自己，把以前真正有人味儿的时代所说的，所做的，所想的，所喜欢的，一天天的重复，而且重复的方式越来越机械，越来越脱腔走板。”——《约翰·克里斯多夫》罗曼·罗兰</p></blockquote><h2 id="注意力被过度消散后的不专注"><a href="#注意力被过度消散后的不专注" class="headerlink" title="注意力被过度消散后的不专注"></a>注意力被过度消散后的不专注</h2><p>信息泛滥让人的专注度下降，但真正能够让你的大脑汲取到营养的，都是需要高度且长时间专注的事，比如读书。</p><p>一个简单的问题：<strong>你多久没有安下心来，好好的读一本书了？</strong></p><p>尝试先从简单的事情做起，比如听一听TED一些心理篇的演讲。</p><h2 id="快感刺激阈值被提高后的慵懒"><a href="#快感刺激阈值被提高后的慵懒" class="headerlink" title="快感刺激阈值被提高后的慵懒"></a>快感刺激阈值被提高后的慵懒</h2><p>我们用手机逃避自己的现状，我们也在利用玩手机来拖延、逃避眼前待解决的问题。</p><p>玩手机来饮鸠止渴，回光返照，越是Deadline，越玩的疯狂，恶性循环。</p><h2 id="耐心点去感受不同阶段的人生体会"><a href="#耐心点去感受不同阶段的人生体会" class="headerlink" title="耐心点去感受不同阶段的人生体会"></a>耐心点去感受不同阶段的人生体会</h2><p>短暂地关闭外界感知通道，离开手机，反而有助于你的思维变得更清晰，更透彻。</p><p>​    而且啊，其实你即使不去关注那些，也没什么影响的。</p><p>​    就算你每隔五秒打开一次微信，没事找你的人还是不会找你。</p><p>​    就算你每天都能刷出瀑布般的信息流，和你无关的事还是和你无关。</p><img src="/2020/04/04/%E8%87%AA%E6%88%91%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92%EF%BC%88%E7%BB%BC%E8%BF%B0%EF%BC%89/1.jpg" class><h2 id="直面空虚和抑郁，借助它们反思"><a href="#直面空虚和抑郁，借助它们反思" class="headerlink" title="直面空虚和抑郁，借助它们反思"></a>直面空虚和抑郁，借助它们反思</h2><blockquote><p>为什么别人能做好的事情我做不好？</p><p>为什么别人跟着建民慢慢成长，我却连队伍都跟不上？</p></blockquote><p>人只有在抑郁的时候，才愿意思考。</p><p>是真的，先借助负面情绪，才能摆脱掉负面情绪。</p><h2 id="逼自己去做点慢节奏的事"><a href="#逼自己去做点慢节奏的事" class="headerlink" title="逼自己去做点慢节奏的事"></a>逼自己去做点慢节奏的事</h2><p>不要觉得发呆是浪费时间，也不要觉得停下来就是不思进取。</p><p>很多时候，停下来，等一等，看看四周，反思下过往，思考下未来，你会有很多错过的新发现。</p><p>一个小时也没看进去两页书，这没啥不好意思的。相比起自暴自弃刷手机，往大脑里塞一个小时的抖音神曲和情绪垃圾，对着书页放空大脑都要好很多。允许自己慢慢来，你迟早可以一个小时看五页、十页、二十页……</p><p>关键在于，屏蔽掉外界的信息，好好感受自己思维和注意力的游荡。前期你可以不过多干涉，就让自己静静的观察，并重新审视那些不断黏着你注意力的事物，再问问自己：“它配吗？”</p><p><strong>找回注意力，就是找回对时间的掌控感。</strong></p><p><strong>把步调调慢后，其实生活中那种“疲于奔命”的感觉也消失了。</strong></p><p>因为只有停下来，时间的流动才变得格外明显。只有慢慢来，时间的报答才有空酝酿成熟。</p><p>毕竟，很多名人的slogan都是：“做时间的朋友。”</p><p><strong>从今天起，每天做好属于自己的事情，总结记录，每天反思，望坚持。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;希望自己不再堕落，每天都有一点收获。&lt;/p&gt;
&lt;p&gt;全文主旨：&lt;strong&gt;戒掉手机&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>清明</title>
    <link href="http://icewind-r.github.io/2020/04/04/%E6%B8%85%E6%98%8E/"/>
    <id>http://icewind-r.github.io/2020/04/04/%E6%B8%85%E6%98%8E/</id>
    <published>2020-04-04T02:00:32.000Z</published>
    <updated>2020-04-04T08:02:35.541Z</updated>
    
    <content type="html"><![CDATA[<p>记录已经过完的四分之一个2020年。</p><a id="more"></a><hr><p>又是一个清明时节，但这次显然多了一层不一样的含义</p><p>宅家三月，似乎还没有做些什么，2020年就过了四分之一</p><p>但这更是与死神抢人的三个月，国内疫情稍稍好转，国外疫情却大行其道</p><p>我想过见证历史，但没想到，我会见证这样的历史</p><p>全国默哀，举国悼念</p><p>数不清的天使为我们保驾护航</p><p>那有什么英雄，不过只是在死神手里抢人的一个个普通人罢了</p><br><p>窗外狂风怒号</p><p>号笛拉响</p><p>天地动容</p><br><p>人类的赞歌是勇气的赞歌</p><p>人类的伟大是勇气的伟大</p><br><blockquote><p>愿逝者安息</p><p>愿生者奋发</p><p>愿祖国昌盛</p></blockquote><br><p>消逝的星星，你们永远在我心中</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录已经过完的四分之一个2020年。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础知识（五）</title>
    <link href="http://icewind-r.github.io/2020/03/30/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/30/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%94%EF%BC%89/</id>
    <published>2020-03-30T07:41:21.000Z</published>
    <updated>2020-03-31T14:07:52.055Z</updated>
    
    <content type="html"><![CDATA[<p>总结展开PHP中文件加载和错误处理的具体操作。</p><a id="more"></a><hr><h2 id="一、文件加载"><a href="#一、文件加载" class="headerlink" title="一、文件加载"></a>一、文件加载</h2><h3 id="1、文件加载的含义"><a href="#1、文件加载的含义" class="headerlink" title="1、文件加载的含义"></a>1、文件加载的含义</h3><p>将一个别的文件包含到当前文件中，成为当前文件运行过程中的一部分。通常，一些公共的代码，在多个页面都需要用到的时候，会做成一个独立的文件。然后在不同的页面需要用到的时候，直接载入进来就可以了。</p><h3 id="2、文件加载的四种方式"><a href="#2、文件加载的四种方式" class="headerlink" title="2、文件加载的四种方式"></a>2、文件加载的四种方式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">''</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">''</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">''</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">''</span>;</span><br><span class="line"><span class="comment">#其中的参数都是加载文件的路径（相对路径或绝对路径）</span></span><br></pre></td></tr></table></figure><p>获取物理路径（绝对路径）的方式：</p><p><code>__DIR__</code>：表示当前文件所在路径，由它可以构建出绝对路径。</p><p><code>getcwd()</code>：表示当前正访问的网页路径（当前工作目录），由它也可以构建绝对路径。</p><p><strong>四种载入方式</strong>：一般来说，如果被载入的文件内容，是后续代码运行的必备前提，则应该使用require载入；如果被载入的文件内容，只需要（或只允许）出现一次，则应该使用“xxx_once”载入。include错误级别低，不会阻止代码运行。</p><h2 id="二、错误处理"><a href="#二、错误处理" class="headerlink" title="二、错误处理"></a>二、错误处理</h2><h3 id="错误分类"><a href="#错误分类" class="headerlink" title="错误分类"></a>错误分类</h3><p>语法错误：运行前出错。</p><p>运行时错误：语法没错，执行过程中出错。</p><p>逻辑错误：运行结果出错。</p><h3 id="常见的错误代号"><a href="#常见的错误代号" class="headerlink" title="常见的错误代号"></a>常见的错误代号</h3><p>E_NOTICE: 提示性错误，轻微，继续执行后面程序。</p><p>E_WARNING:警告，稍微严重，后面的程序继续执行。</p><p>E_ERROR:严重错误/致命错误，后面程序不继续执行。</p><p>E_PARSE:语法错误，直接不运行程序。</p><p>E_USER_NOTICE，E_USER_WARNING，E_USER_ERROR:用户自定义的提示、警告和严重错误。</p><p>E_ALL：它是一个代表“所有”错误的代号。</p><p>这些代号都是系统常量。</p><h3 id="错误触发"><a href="#错误触发" class="headerlink" title="错误触发"></a>错误触发</h3><p>程序本身有错时，运行时会报错提示，但如果程序没错，而不符合预期结果，就可以主动触发一个错误，也就是说主动创建一个错误，E_USER_NOTICE，E_USER_WARNING，E_USER_ERROR等，那么如何触法用户错误呢？</p><p>自定义错误触发语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trigger_error(<span class="string">"自定义错误提示内容"</span>,自定义错误的代号);</span><br></pre></td></tr></table></figure><p><strong>案例演示</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reg_user</span><span class="params">($age)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($age &gt; <span class="number">120</span> || $age &lt;<span class="number">0</span>)&#123;</span><br><span class="line">        trigger_error(<span class="string">"年龄不符合规范"</span>,E_USER_NOTICE);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"用户资料审核通过！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">reg_user(<span class="number">150</span>);</span><br></pre></td></tr></table></figure><h3 id="错误显示"><a href="#错误显示" class="headerlink" title="错误显示"></a>错误显示</h3><p>如果有错误发生（触发了错误），默认情况下会被显示在页面（即输出的结果页面）。</p><ol><li><p>设置display_errors以决定是否显示错误</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'display_errors'</span>,<span class="number">1</span>或<span class="number">0</span>);<span class="comment">//1表示显示</span></span><br></pre></td></tr></table></figure></li><li><p>设置error_reporting以决定显示那些错误（错误代号：E_NOTICE…）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'error_reporting'</span>，错误代号<span class="number">1</span> | 错误代号<span class="number">2</span> ...)</span><br></pre></td></tr></table></figure></li></ol><h3 id="自定义错误处理"><a href="#自定义错误处理" class="headerlink" title="自定义错误处理"></a>自定义错误处理</h3><p>具体做法，分两步：</p><ol><li>声明错误发生时，由我们自己来处理——设定一个错误处理的函数名。</li><li>定义该函数，在函数中详细设定错误的处理情况：怎么显示，显示什么，怎么记录，记录什么。</li></ol><p><strong>注意：</strong>自定义错误只能处理“非致命错误”。</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义错误</span></span><br><span class="line"><span class="comment">//set_error_handler("自定义的处理错误的函数的名字");</span></span><br><span class="line">set_error_handler(<span class="string">"my_error_handler"</span>);</span><br><span class="line"><span class="comment">//定义该函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_error_handler</span><span class="params">($errCode,$errMsg,$errFile,$errLine)</span></span>&#123;</span><br><span class="line">    <span class="comment">//参数解释：errCode:错误代码，errMsg：错误信息，errFile：错误文件，errLine：错误行号</span></span><br><span class="line">    <span class="comment">//此形参顺序固定，而且是由系统自动调用并传入参数</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误代码：'</span>.$errCode.<span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误信息：'</span>.$errMsg.<span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误文件：'</span>.$errFile.<span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误行号：'</span>.$errLine.<span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"v1 = $v1"</span>;<span class="comment">//未定义的变量</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'./no-this-file.php'</span>;<span class="comment">//打开不存在的文件</span></span><br><span class="line">l1();<span class="comment">//调用未定义的函数</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结展开PHP中文件加载和错误处理的具体操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB课程总结（四）</title>
    <link href="http://icewind-r.github.io/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-03-27T08:23:58.000Z</published>
    <updated>2020-03-27T11:16:44.581Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章总结MATLAB程序设计，主要涉及代码文件方面。</p><a id="more"></a><hr><h2 id="程序的三个结构"><a href="#程序的三个结构" class="headerlink" title="程序的三个结构"></a>程序的三个结构</h2><p>顺序选择循环。</p><h3 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h3><h4 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span></span><br><span class="line">语句组 <span class="number">1</span></span><br><span class="line"><span class="keyword">elseif</span> 条件<span class="number">2</span></span><br><span class="line">语句组 <span class="number">2</span> …</span><br><span class="line"><span class="keyword">elseif</span> 条件m</span><br><span class="line">语句组 m</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句组n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> 表达式</span><br><span class="line"><span class="keyword">case</span> 表达式<span class="number">1</span></span><br><span class="line">语句组<span class="number">1</span></span><br><span class="line"><span class="keyword">case</span> 表达式<span class="number">2</span></span><br><span class="line">语句组<span class="number">2</span> …</span><br><span class="line"><span class="keyword">case</span> 表达式m</span><br><span class="line">语句组m</span><br><span class="line"><span class="keyword">otherwise</span></span><br><span class="line">语句组 n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="try"><a href="#try" class="headerlink" title="try"></a>try</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">语句组<span class="number">1</span></span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">语句组<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>try语句先试探性执行语句组1，如果在执行过程中出现错误，则将错误信息赋给保留的lasterr变量，并转去执行语句组2。</p><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 循环变量 =表达式<span class="number">1</span>：表达式<span class="number">2</span>：表达式<span class="number">3</span></span><br><span class="line">循环体语句</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>条件</span><br><span class="line">循环体语句</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="break语句和continue语句"><a href="#break语句和continue语句" class="headerlink" title="break语句和continue语句"></a>break语句和continue语句</h4><p>它们一般与if语句配合使用。<br>break语句用于终止循环的执行。<br>当在循环体内执行到该语句时，程序将跳出循环，继续执行循环语句的下一语句。<br>continue语句控制跳过循环体中的某些语句。<br>当在循环体内执行到该语句时，程序将跳过循环体中所有剩下的语句，继续下一次循环。</p><h2 id="M文件的分类"><a href="#M文件的分类" class="headerlink" title="M文件的分类"></a>M文件的分类</h2><p>除了在命令窗口直接操作，我们可以创建文件（M文件）来进行调用，使程序结构简单，编程效率高。</p><p>用Matlab语言编写的程序，称为M文件。</p><p>是由若干Matlab命令组合在一起构成的，它可以完成某些操作，也可以实现某种算法。</p><p>◼ M文件根据调用方式的不同分为两类：</p><p>​    命令文件（Script File）</p><p>​    函数文件（Function File） </p><p>◼ 它们的扩展名都是.m</p><h3 id="命令文件和函数文件的区别"><a href="#命令文件和函数文件的区别" class="headerlink" title="命令文件和函数文件的区别"></a><strong>命令文件和函数文件的区别</strong></h3><p>命令文件没有输入参数，也不返回输出参数；函数文件可以带输入参数，也可以返回输出参数。</p><p>◼ 命令文件对工作空间中的变量进行操作，文件中所有命令的执行结果也返回工作空间中；函数文件中定义的变</p><p>​    量为局部变量，当函数文件执行完毕时，这些变量也被清除。</p><p>◼ 命令文件可以直接运行；函数文件不能直接运行，要以函数调用的方式来调用它。</p><h3 id="函数文件"><a href="#函数文件" class="headerlink" title="函数文件"></a>函数文件</h3><p>函数文件是另一种形式的M文件，每一个函数文件都定义一个函数。Matlab提供的标准函数大部分是由函数文件定义的。</p><h4 id="函数文件的基本结构"><a href="#函数文件的基本结构" class="headerlink" title="函数文件的基本结构"></a><strong>函数文件的基本结构</strong></h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 输出形参表 = 函数名（输入形参表）</span></span><br><span class="line">注释说明部分</span><br><span class="line">函数体语句</span><br></pre></td></tr></table></figure><p>其中，以function开头的一行为引导行，表示该M文件是一个函数文件。当输出形参多于一个时，应该用<strong>方括号</strong>括起来。</p><p><strong>注意：</strong></p><ol><li>关于函数文件名<br>函数文件名通常由函数名再加上扩展名.m组成。<br>当函数文件名与函数名不同时，Matlab将忽略函数名而确认文件名，因此调用时使用函数文件名。</li><li>关于注释说明部分<br>注释说明包括3部分：<br>① 紧随引导行之后以%开头的第一注释行。<br>这一行一般包括大写的函数文件名和函数功能简要描述，供lookfor关键词查询和help在线帮助时使用。<br>② 第一注释行及之后连续的注释行。<br>通常包括函数输入/输出参数的含义及调用格式说明等信息，构成全部在线帮<br>③ 与在线帮助文本相隔一空行的注释行。包括函数文件编写和修改的信息，如作者和版本等。<br>3、关于return语句<br>如果在函数文件中插入了return语句，则执行到该语句就结束函数的执行，流程转至调用该函数的位置。通常也不使用return语句。</li></ol><h4 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h4><p>函数调用的一般格式是：<br>[输出实参表] = 函数名(输入实参表）<br>注意：函数调用时，各实参出现的顺序、个数，应与函数定义时相同。</p><h4 id="函数参数的可调性"><a href="#函数参数的可调性" class="headerlink" title="函数参数的可调性"></a>函数参数的可调性</h4><p>Matlab在函数调用上有一个与一般高级语言不同之处：<br>函数所传递参数数目的可调性，即参数的数量可以改变。<br>在调用函数时，Matlab用两个预定义变量nargin和nargout分别记录调用该函数时的输入实参和输出实参的个数。</p><p><strong>例子</strong></p><img src="/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/1.png" class><h4 id="全局变量与局部变量"><a href="#全局变量与局部变量" class="headerlink" title="全局变量与局部变量"></a><strong>全局变量与局部变量</strong></h4><p>Matlab中，函数文件中的变量是局部变量。</p><p>全局变量的作用域是整个Matlab的工作空间，所有函数都可以对它进行存取和修改。</p><p>全局变量用global命令定义，格式为：</p><p><code>global 变量名</code></p><img src="/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/1.png" class>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章总结MATLAB程序设计，主要涉及代码文件方面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/categories/MATLAB/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础知识（四）</title>
    <link href="http://icewind-r.github.io/2020/03/27/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/27/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-03-26T22:42:02.000Z</published>
    <updated>2020-04-08T01:54:43.875Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章总结php代码嵌套到html中所需的<strong>标签语法</strong>，还有php中<strong>函数</strong>的定义和使用。</p><a id="more"></a><hr><h2 id="标签语法"><a href="#标签语法" class="headerlink" title="标签语法"></a>标签语法</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><strong>标签语法</strong>，指当PHP代码嵌入到HTML中时，为了让PHP代码的结构更加符合HTML的规范而设定的语法结构。</p><ul><li><p>PHP标签语法不是所有的结构都存在。</p></li><li><p>PHP标签语法只提供了两种针对<code>{}</code>的解决方案。</p><ul><li>分支标签：即当分支语法出现时，可以使用标签语法代替。</li><li>循环标签：即当循环语法出现时，可以使用标签语法代替。</li></ul></li><li><p>标签语法规则</p><ul><li>当分支或循环的<code>{</code>出现时，使用冒号<code>:</code>代替。</li><li>当分支或循环的<code>}</code>出现时，使用相应的<code>end + 标记内容;</code>代替。</li></ul></li><li><p>PHP提供的标记语法</p><ul><li>IF分支</li><li>switch分支</li><li>while循环</li><li>for循环</li><li>foreach循环</li><li>语法格式：<ul><li>起始标记（if为例）：<code>if(条件表达式):</code></li><li>结束标记（if为例）：<code>endif;</code></li></ul></li></ul></li></ul><h3 id="案例（九九乘法表）"><a href="#案例（九九乘法表）" class="headerlink" title="案例（九九乘法表）"></a><strong>案例（九九乘法表）</strong></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;九九乘法表&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">for</span> ($i=<span class="number">1</span>; $i &lt;= <span class="number">9</span>; $i++):<span class="meta">?&gt;</span></span><br><span class="line">&lt;tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">for</span> ($j = <span class="number">1</span>; $j &lt; $i; $j++):<span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"$j * $i = "</span>.$j * $i;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endfor</span>;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endfor</span>;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>定义方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">(参数)</span></span>&#123;</span><br><span class="line">    函数体(代码块);</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法：<code>函数名()</code>，即可。</p><p>return可以返回任何类型的数据。</p><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><p>如果实际传入的参数没有提供，则会使用默认值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">($num1 = <span class="number">0</span>,$num2 = <span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量的引用传递"><a href="#变量的引用传递" class="headerlink" title="变量的引用传递"></a>变量的引用传递</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">($n1,&amp;$n2)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>函数允许使用时实参对于形参，只是不用而已，但实参不能少于形参。</p><p>下面介绍函数的一些高级用法。</p><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><h4 id="局部作用域（局部变量）"><a href="#局部作用域（局部变量）" class="headerlink" title="局部作用域（局部变量）"></a>局部作用域（局部变量）</h4><p>在其他结构（函数）内部定义的作用域。</p><h4 id="全局作用域（全局变量）"><a href="#全局作用域（全局变量）" class="headerlink" title="全局作用域（全局变量）"></a>全局作用域（全局变量）</h4><p>未在其他结构（函数）内部定义的作用域。</p><h4 id="超全局作用域（超全局变量）"><a href="#超全局作用域（超全局变量）" class="headerlink" title="超全局作用域（超全局变量）"></a>超全局作用域（超全局变量）</h4><p>即在脚本中的任意位置。</p><p>超全局变量：系统定义的预定义变量。</p><p>全局变量会自动吸纳到超全局``$GLOBALS`，可以利用超全局变量来保存数据，让数据不受作用域限制。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此时是给超全局变量增加一个var元素，相当于定义了一个全局变量。</span></span><br><span class="line">$GLOBALS[<span class="string">'var'</span>] = <span class="string">'hello world'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$v1 = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//echo $v1;报错</span></span><br><span class="line">    <span class="keyword">echo</span> $GLOBALS[<span class="string">'v1'</span>];<span class="comment">//在函数体内使用超全局变量</span></span><br><span class="line">&#125;</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p>$GLOBALS会自动包含全局变量，同时还有以下超全局变量。</p><ul><li>$_GET：自动接收GET提交的数据</li><li>$_POST：自动接收POST提交的数据</li><li>$_COOKIE：自动接收cookie数据</li><li>$_FILES：自动接收文件上传的数据</li><li>$GLOBALS：自己包含自己</li></ul><h4 id="一个特殊的关键字global"><a href="#一个特殊的关键字global" class="headerlink" title="一个特殊的关键字global"></a>一个特殊的关键字global</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$v1 = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $v1;</span><br><span class="line">    <span class="keyword">echo</span> $v1;</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p>其含义是在函数内定义一个局部变量，并且与全局变量同名，处于“引用关系”，可以直接使用。</p><p><strong>总结</strong>：$GLOBALS数组（变量）和global关键字都能实现：在局部作用域使用全局变量。</p><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>概念：在函数内部定义，可以在函数多次调用时共用的局部变量</p><ul><li>使用static关键字修饰</li><li>是在函数内部定义的局部变量</li><li>在函数加载时初始化（只初始化一次）</li><li>可以在同一个函数多次调用时共享数据的变化</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">#记录函数被调用了多少次</span></span><br><span class="line">    $count1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> $count2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">echo</span> ++$count1,++$count2,<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">display();<span class="comment">#11</span></span><br><span class="line">display();<span class="comment">#12</span></span><br></pre></td></tr></table></figure><p><strong>使用场景</strong></p><ul><li>数据需要函数多次共享</li><li>递归存储数据的时候</li></ul><h3 id="强制类型"><a href="#强制类型" class="headerlink" title="强制类型"></a>强制类型</h3><p>PHP可以利用强类型来规范函数的输入（参数）和输出（返回值）</p><ul><li>强类型参数</li><li>强类型返回值</li></ul><h4 id="强类型参数"><a href="#强类型参数" class="headerlink" title="强类型参数"></a>强类型参数</h4><p>在定义函数时给形参设定类型</p><ul><li><p>类型规范是PHP的8种类型</p></li><li><p>强类型的作用</p><ul><li>实参必须是形参规定类型</li><li>保护函数内部运行逻辑正确</li><li>省区函数内部判定逻辑</li><li>提升解析效率</li></ul></li><li><p>强类型语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">(类型 变量名)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(float $a,float $b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $a + $b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>强类型的选择</p><ul><li>PHP是弱类型语言，会自动转换类型，一般可以不用。    </li><li>不想在内部进行过多的逻辑判断，可以适用强类型参数进行限定。</li></ul></li></ul><h4 id="强类型返回值"><a href="#强类型返回值" class="headerlink" title="强类型返回值"></a>强类型返回值</h4><p>指在函数定义时就规定好函数的返回值类型</p><ul><li><p>强类型是PHP的8种类型</p></li><li><p>强类型规定后，函数内部的返回值必须是指定类型</p></li><li><p>想让强类型完全生效，需要提前声明</p><ul><li>declare(strict_types = 1)</li></ul></li><li><p>强类型返回值语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">()</span>:返回值类型</span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_int</span><span class="params">($n)</span>:<span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_integer($n))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><p>PHP提供了一种对于参数不固定的处理方式</p><ul><li>PHP在5.6以后提供了一种主动获取多余的实参的方式</li><li>可以使用<code>...</code>符号实现数组数据的拆分</li></ul><p><strong>实例：求两个（或多个）数的和</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义函数：多余的形参使用...$args保存</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_sum</span><span class="params">($a,$b,...$args)</span></span>&#123;</span><br><span class="line">    <span class="comment">#2、$args会接受多出的参数（$a和$b为固定参数）</span></span><br><span class="line">    <span class="comment">#3、在函数内部可以使用$args访问多出的实参</span></span><br><span class="line">    $sum = $a + $b;</span><br><span class="line">    <span class="keyword">foreach</span>($args <span class="keyword">as</span> $v)&#123;</span><br><span class="line">        $sum += $v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以将实参数组拆分构成多个数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_sub</span><span class="params">($a,$b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $a = $b;</span><br><span class="line">&#125;</span><br><span class="line">$arr = [<span class="number">10</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">echo</span> my_sub(...$arr);<span class="comment">#输出6</span></span><br></pre></td></tr></table></figure><p>获取所有参数的和</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $num = func_get_args();<span class="comment">//获取参数，是一个数组变量，保存在num中</span></span><br><span class="line">    $count = count($num);<span class="comment">//计算数组个数，即参数个数</span></span><br><span class="line">    <span class="comment">//$count = func_num_args();获取参数个数</span></span><br><span class="line">    $sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>;$i&lt;$count;$i++) &#123;</span><br><span class="line">        $sum+=$num[$i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $sum;</span><br><span class="line">&#125;</span><br><span class="line">$sum = sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'可变参数和：'</span>.$sum;</span><br></pre></td></tr></table></figure><h3 id="可变函数"><a href="#可变函数" class="headerlink" title="可变函数"></a>可变函数</h3><p>即一个变量所保存的值刚好是另外一个函数的名字，那么可以通过变量直接访问函数</p><ul><li>变量的值是一个函数名（字符串）</li><li>变量+()就可以当作函数名访问函数</li></ul><p><strong>示例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'hello world!'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$var = <span class="string">'display'</span>;<span class="comment">#变量名为一个函数的名字</span></span><br><span class="line"></span><br><span class="line">$var();<span class="comment">#即调用display()函数</span></span><br></pre></td></tr></table></figure><p>实际运用：通常我们是将自定义的函数作为系统函数或者其他位置的回调函数（callback）使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#取得一个数的绝对值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jdz</span><span class="params">($n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $n &lt; <span class="number">0</span> ? -$n : $n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#求两个数的绝对值的和</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum_jdz</span><span class="params">($a,$b,$func)</span></span>&#123;</span><br><span class="line">    <span class="comment">#利用外部的$func函数(回调函数)来实现$a和$b的绝对值求和</span></span><br><span class="line">    <span class="keyword">return</span> $func($a) + $func($b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> sum_jdz(<span class="number">-1</span>,<span class="number">-1</span>,<span class="string">'jdz'</span>);<span class="comment">#输出2</span></span><br></pre></td></tr></table></figure><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><ul><li>简单匿名函数</li><li>回调匿名函数</li><li>匿名函数闭包</li></ul><h4 id="简单匿名函数"><a href="#简单匿名函数" class="headerlink" title="简单匿名函数"></a>简单匿名函数</h4><p>即函数没有名字，使用变量保存函数的内存地址</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">变量 = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    函数体</span><br><span class="line">    <span class="keyword">return</span> 返回值</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line">变量();</span><br></pre></td></tr></table></figure><h4 id="回调匿名函数"><a href="#回调匿名函数" class="headerlink" title="回调匿名函数"></a>回调匿名函数</h4><p>指直接将匿名函数定义在函数的实参中，当作一个实参传递给形参</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#求数组元素的所有立方</span></span><br><span class="line">$arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="comment">#定义一个函数：能够取得数组的所有立方</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_cube</span><span class="params">($arr,$cube)</span></span>&#123;</span><br><span class="line">    $list = [];<span class="comment">#存储结果</span></span><br><span class="line">    <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $value)&#123;</span><br><span class="line">        $list[] = $cube($value);<span class="comment">#调用计算立方的函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $list;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#直接传一个匿名函数</span></span><br><span class="line">$res = my_cube($arr,<span class="function"><span class="keyword">function</span><span class="params">($num)</span></span>&#123;<span class="keyword">return</span> $num ** <span class="number">3</span>;&#125;);</span><br><span class="line">print_r($res);</span><br></pre></td></tr></table></figure><h4 id="匿名函数闭包"><a href="#匿名函数闭包" class="headerlink" title="匿名函数闭包"></a>匿名函数闭包</h4><p><strong>概念</strong></p><p>闭包是一个定义在函数内，能都读取其他函数内部变量的函数（闭包函数）</p><ul><li>函数定义在某个函数内部</li><li>内部函数是匿名函数</li><li>内部函数访问外部函数的局部变量<ul><li>不能直接访问，访问需要使用use关键字</li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $inner = <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $str;</span><br><span class="line">    &#125;;</span><br><span class="line">    $inner();</span><br><span class="line">&#125;</span><br><span class="line">outer(<span class="string">'hello world!'</span>);<span class="comment">#输出hello world!</span></span><br></pre></td></tr></table></figure><p>闭包函数可以返回给外部函数调用，这样可以使得闭包所占用的外部函数资源不被释放</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $inner = <span class="function"><span class="keyword">function</span><span class="params">($s)</span> <span class="title">use</span> <span class="params">($str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $str.$s;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> $inner;</span><br><span class="line">&#125;</span><br><span class="line">$res = outer(<span class="string">'hello'</span>);</span><br><span class="line">$res(<span class="string">'world'</span>);<span class="comment">#输出helloworld</span></span><br></pre></td></tr></table></figure><p><strong>原理</strong></p><ul><li>函数outer调用结束，没有释放内存</li><li>outer返回了一个内部闭包函数的引用，所以函数不会释放</li><li>$inner内部闭包函数引用了一个外部函数的局部变量，所以outer也不能释放$str</li><li>$res(‘world’)找到函数执行，并且应用了之前函数的局部变量$str，所以组合输出helloworld。</li></ul><h2 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h2><p><strong>常用的系统函数列表</strong></p><h3 id="1、常见输出类"><a href="#1、常见输出类" class="headerlink" title="1、常见输出类"></a>1、常见输出类</h3><ul><li>echo：不需要使用括号</li><li>print_r：输出变量的结构</li><li>var_dump：详细打印变量的结构和数据</li><li>exit/die：输出消息并终止脚本执行</li></ul><h3 id="2、常见日期类"><a href="#2、常见日期类" class="headerlink" title="2、常见日期类"></a>2、常见日期类</h3><ul><li><p>time：获取当前时间的时间戳（从格林威治时间1970年1月1日），精确到秒（一个整数）</p></li><li><p>date：按照指定格式输出时间，可以是当前时间也可以是指定时间戳</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> date(<span class="string">"当前时间：Y-m-d H:i:s"</span>);</span><br></pre></td></tr></table></figure></li><li><p>strtotime：将任何英文文本日期时间描述转换成时间戳</p></li><li><p>micotime：获取时间戳和微秒数（精度高），两个用法：</p><ul><li>micotime(true)：获取秒数，浮点型。</li><li>micotime(false)：获取秒数，字符串型。默认不写参数为false。</li></ul></li></ul><h3 id="3、数学类"><a href="#3、数学类" class="headerlink" title="3、数学类"></a>3、数学类</h3><ul><li>max：获取多个数中最大值（可以实数组）</li><li>min：最小值</li><li>floor：舍去法取整（向下取整），获取不大于当前数值的最大整数</li><li>cell：进一取整（向上取整），获取不小于当前数值的最小整数</li><li>mt_rand：获取指定区间或者0到最大数之间的一个随机整数</li><li>round：根据指定小数位进行四舍五入</li><li>abs：绝对值</li><li>sqrt：开方</li><li>pow：幂次方的运算</li><li>rand、mt_rand：获取两个数之间的随机整数</li></ul><h3 id="4、字符串类"><a href="#4、字符串类" class="headerlink" title="4、字符串类"></a>4、字符串类</h3><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>print：输出一个字符串</p><p>print_r：输出较为详细的信息</p><p>var_dump：输出完整信息</p><h4 id="字符串去除与填充"><a href="#字符串去除与填充" class="headerlink" title="字符串去除与填充"></a>字符串去除与填充</h4><p>trim：消除字符串两端的空白字符或指定字符</p><p>ltrim：左边</p><p>rtrim：右边</p><p>str_pad：将一个字符串使用指定的字符填充到指定的长度</p><h4 id="字符串连接与分割"><a href="#字符串连接与分割" class="headerlink" title="字符串连接与分割"></a>字符串连接与分割</h4><p>implode：将一个数组的值连接起来组成一个字符串，可以指定连接的符号</p><p>join：同上</p><p>explode：将一个字符串使用指定的字符分割为一个数组</p><p>str_split：将一个字符串按指定的长度分割为一个数组</p><h4 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h4><p>substr：获取一个字符串指定位置开始的指定长度的子串</p><p>strstr：获取一个字符串中某个指定字符首次出现的位置起，到最后结尾处的字符</p><p>strrchr：获取一个字符串中某个指定字符最后出现的位置起，到最后结尾处的字符</p><h4 id="字符串替换"><a href="#字符串替换" class="headerlink" title="字符串替换"></a>字符串替换</h4><p>str_replace：将一个字符串中的指定字符替换为新字符。</p><p>substr_replace：将一个字符串中指定位置开始的指定个数的字符，替换为给定的新字符。</p><h4 id="字符串长度与位置"><a href="#字符串长度与位置" class="headerlink" title="字符串长度与位置"></a>字符串长度与位置</h4><p>strlen：获取字符串的字节长度。</p><p>strpos：获取一个字符串中某个子串首次出现的位置。</p><p>strrpos：获取一个字符串中某个子串最后一次出现的位置。</p><h4 id="字符转换"><a href="#字符转换" class="headerlink" title="字符转换"></a>字符转换</h4><p>strtolower:转换为小写</p><p>strtoupper:转换为大写</p><p>lcfirst:首字母小写</p><p>ucfirst:首字母大写</p><p>ucwords:所有单词的首字母大写</p><h4 id="特殊字符处理"><a href="#特殊字符处理" class="headerlink" title="特殊字符处理"></a>特殊字符处理</h4><p>nl2br：将换行符转换为“&lt;br /&gt;”标签字符</p><p>addslashes：将一个字符串中的特数字符进行反斜杠转义。</p><p>htmlspecialchars：将html中的特殊字符转换为html实体字符。</p><p>htmlsecialchars_decode：将实体字符转换为原本的字符。</p><h3 id="5、数组类"><a href="#5、数组类" class="headerlink" title="5、数组类"></a>5、数组类</h3><p>max：获取数组中的最大值。</p><p>min：获取数组中的最笑值。</p><p>count：获取数组的元素个数。</p><p>in_array：判断以恶数据是否在指定数组中。<code>$b = in_array(数组,数据);</code>结果为布尔。</p><p>range：生成某个范围的连续数组。例如range(3,6)得到数组array(3,4,5,6);</p><p>array_keys：取出所有键并放到一个索引数组中。</p><p>array_values：取出所有值并放到一个索引数组中。</p><p>array_push：将一个或多个数据放入一个数组的末端。</p><p>array_pop：将数组的最后一个单元删除，并返回该单元的值。</p><p>array_reverse：将数组反转。</p><h4 id="数组的排序"><a href="#数组的排序" class="headerlink" title="数组的排序"></a>数组的排序</h4><p>sort：由低到高、rsort：由高到低、asort、arsort等。</p><h4 id="数组的查找"><a href="#数组的查找" class="headerlink" title="数组的查找"></a>数组的查找</h4><p>in_array()：在一个数组中找是否存在某个数据。</p><p>array_search()：在数组中搜索给定的值，如果成功则返回相应的键名。</p><p>array_key_exists()：检查给定的键名或索引是否存在于数组中。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章总结php代码嵌套到html中所需的&lt;strong&gt;标签语法&lt;/strong&gt;，还有php中&lt;strong&gt;函数&lt;/strong&gt;的定义和使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
</feed>
