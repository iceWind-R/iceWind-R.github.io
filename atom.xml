<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thorine</title>
  
  <subtitle>College Time</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://icewind-r.github.io/"/>
  <updated>2020-03-20T13:40:00.805Z</updated>
  <id>http://icewind-r.github.io/</id>
  
  <author>
    <name>大雪初晴丶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MATLAB课程总结（三）</title>
    <link href="http://icewind-r.github.io/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-03-20T12:39:11.000Z</published>
    <updated>2020-03-20T13:40:00.805Z</updated>
    
    <content type="html"><![CDATA[<p>本篇基于上篇文章基础，谈谈Matlab的<strong>数值运算</strong>。</p><a id="more"></a><p>在Matlab中，一切数据均以矩阵的形式出现。相比其他语言，MATLAB在矩阵运算方面具有强大的功能，它提供了多种运算和函数对矩阵进行操作。MATLAB的数值运算包括两种：一种是针对整个矩阵的数学运算，称之为<strong>矩阵运算</strong>；另一种是针对矩阵的每一个元素进行运算的函数，称之为<strong>矩阵元素的运算</strong>。</p><hr><h2 id="一、基本运算功能"><a href="#一、基本运算功能" class="headerlink" title="一、基本运算功能"></a>一、基本运算功能</h2><h3 id="1、算术运算"><a href="#1、算术运算" class="headerlink" title="1、算术运算"></a>1、算术运算</h3><ul><li><p>MATLAB数组支持线性代数中所有的矩阵运算。</p></li><li><p>建立特有的数组运算符，如：“.*”、“./”等。</p></li></ul><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/1.png" class><h3 id="2、逻辑运算"><a href="#2、逻辑运算" class="headerlink" title="2、逻辑运算"></a>2、逻辑运算</h3><p> Matlab提供了3种逻辑运算符：&amp;（与）、|（或）、~（非）。</p><p><strong>逻辑运算符的运算法则：</strong></p><ol><li><p>在逻辑运算中，确认非零元素为真（1），零元素为假（0）。  </p></li><li><p>当两个维数相等的矩阵进行比较时，其相应位置的元素按标量关系进行比较，并给出结果，形成一个维数与原来相同的0、1矩阵；</p></li><li><p>当一个标量与一个矩阵比较时，该标量与矩阵的各元素进行比较，结果形成一个与矩阵维数相等的0、1矩阵；</p></li><li><p>算术运算优先级最高，逻辑运算优先级最低。</p></li></ol><h3 id="3、关系运算"><a href="#3、关系运算" class="headerlink" title="3、关系运算"></a>3、关系运算</h3><p>Matlab提供了6种关系运算符：&lt;、&gt;、&lt;=、&gt;=、==、~=（不等于）。</p><p><strong>关系运算符的运算法则：</strong></p><ol><li><p>当两个标量进行比较时，直接比较两数大小。若关系成立，结果为1，否则为0。</p></li><li><p>当两个维数相等的矩阵进行比较时，其相应位置的元素按标量关系进行比较，并给出结果，形成一个维数与原来相同的0、1矩阵。</p></li><li><p>当一个标量与一个矩阵比较时，该标量与矩阵的各元素进行比较，结果形成一个与矩阵维数相等的0、1矩阵。</p></li></ol><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/2.png" class><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/3.png" class><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/4.png" class><h2 id="二、向量与矩阵处理相关函数"><a href="#二、向量与矩阵处理相关函数" class="headerlink" title="二、向量与矩阵处理相关函数"></a>二、向量与矩阵处理相关函数</h2><h3 id="1、矩阵变换函数"><a href="#1、矩阵变换函数" class="headerlink" title="1、矩阵变换函数"></a>1、矩阵变换函数</h3><p>包括矩阵重排、矩阵抽取以及矩阵转向等。</p><ol><li><p>矩阵重排函数：<br>reshape(A,m,n)：把矩阵A中所有元素重新排列为m*n的矩阵，矩阵总元素数必须相等。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line">&gt;&gt; <span class="built_in">reshape</span>(a,<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">8</span></span><br></pre></td></tr></table></figure></li><li><p>矩阵抽取函数：<br>diag(A, k)：A为矩阵时，抽取矩阵A的第k条对角线。k可以为正整数也可以为负整数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ; <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>; <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">A =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; <span class="built_in">diag</span>(A)        <span class="comment">% 提取A的主对角线元素</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">     <span class="number">9</span></span><br></pre></td></tr></table></figure></li><li><p>矩阵转向函数：<br>transpose(A)：求矩阵A的转置。可以用单引号（’）直接代替transpose函数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>; <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>; <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">A =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; transpose(A)        <span class="comment">% 求A的转置</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="2、矩阵求值函数"><a href="#2、矩阵求值函数" class="headerlink" title="2、矩阵求值函数"></a>2、矩阵求值函数</h3><ul><li>inv(A)：求可逆矩阵A的逆。</li><li>det(A)：求方阵A所对应的行列式的值。</li><li>rank(A)：求矩阵A的秩。</li><li>trace(A)：求矩阵A的迹。</li><li>eig(A)：求矩阵A的特征值和特征向量。</li></ul><h3 id="3、数据统计与分析中的矩阵函数："><a href="#3、数据统计与分析中的矩阵函数：" class="headerlink" title="3、数据统计与分析中的矩阵函数："></a><strong>3、数据统计与分析中的矩阵函数</strong>：</h3><h4 id="1）最大值和最小值"><a href="#1）最大值和最小值" class="headerlink" title="1）最大值和最小值"></a>1）最大值和最小值</h4><p>​      MATLAB提供的求数据序列的最大值和最小值的函数分别为max和min，两个函数的调用格式和操作过程类似。</p><p><strong>1、求向量的最大值和最小值</strong></p><p>求一个向量X的最大值的函数有两种调用格式，分别是：</p><p>(1) y=max(X)：返回向量X的最大值存入y，如果X中包含复数元素，则按模取最大值；</p><p>(2)[y,I]=max(X)：返回向量X的最大值存入y，最大值的序号存入I，如果X中包含复数元素，则按模取最大值。</p><p>求向量X的最小值的函数是min(X)，用法和max(X)完全相同。</p><pre><code><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;x=[<span class="number">-43</span>,<span class="number">72</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">23</span>,<span class="number">47</span>];</span><br><span class="line">&gt;&gt;y=<span class="built_in">max</span>(x)     <span class="comment">%求向量x中的最大值</span></span><br><span class="line">y =</span><br><span class="line">     <span class="number">72</span></span><br><span class="line">&gt;&gt;[y,l]=<span class="built_in">max</span>(x) <span class="comment">%求向量x中的最大值及其该元素的位置</span></span><br><span class="line">y =</span><br><span class="line">    <span class="number">72</span></span><br><span class="line">l =</span><br><span class="line">    <span class="number">2</span></span><br></pre></td></tr></table></figure></code></pre><p><strong>2、求矩阵的最大值和最小值</strong></p><p>求矩阵A的最大值的函数有3种调用格式，分别是：</p><p>(1) max(A)：返回一个行向量，向量的第i个元素是矩阵A的第i列上的最大值；</p><p>(2) [Y,U]=max(A)：返回行向量Y和U，Y向量记录A的每列的最大值，U向量记录每列最大值的行号；</p><p>(3) max(A,[],dim)：dim取1或2。dim取1时，该函数和max(A)完全相同；dim取2时，该函数返回一个列向量，其</p><p>第i个元素是A矩阵的第i行上的最大值。</p><p>求最小值的函数是min，其用法和max完全相同。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;x=[<span class="number">-43</span>,<span class="number">72</span>,<span class="number">9</span>; <span class="number">16</span>,<span class="number">23</span>,<span class="number">47</span>];</span><br><span class="line">&gt;&gt;y=<span class="built_in">max</span>(x)     <span class="comment">%求矩阵x中每列的最大值</span></span><br><span class="line">y =</span><br><span class="line">     <span class="number">16</span>  <span class="number">72</span>  <span class="number">47</span></span><br><span class="line">&gt;&gt;[y,l]=<span class="built_in">max</span>(x) <span class="comment">%求矩阵x中每列的最大值及其该元素的位置</span></span><br><span class="line">y =</span><br><span class="line">    <span class="number">16</span>  <span class="number">72</span>  <span class="number">47</span></span><br><span class="line">l =</span><br><span class="line">     <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span></span><br><span class="line">&gt;&gt;<span class="built_in">max</span>(x, [],<span class="number">1</span>), <span class="built_in">max</span>(x, [],<span class="number">2</span>) <span class="comment">%求矩阵中每行的最大值</span></span><br></pre></td></tr></table></figure><h4 id="2）求和与求积"><a href="#2）求和与求积" class="headerlink" title="2）求和与求积"></a>2）求和与求积</h4><ul><li><p>sum(X)：返回向量X各元素的和。</p></li><li><p>prod(X)：返回向量X各元素的乘积。</p></li><li><p>sum(A)：返回一个行向量，其第i个元素是A的第i列的元素和。</p></li><li><p>prod(A)：返回一个行向量，其第i个元素是A的第i列的元素乘积。</p></li><li><p>sum(A,dim)：当dim为1时，该函数等同于sum(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行</p><p>的各元素之和。</p></li><li><p>prod(A,dim)：当dim为1时，该函数等同于prod(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行的各元素乘积。</p></li></ul><h4 id="3）平均值与中值"><a href="#3）平均值与中值" class="headerlink" title="3）平均值与中值"></a>3）平均值与中值</h4><p>求数据序列平均值的函数是mean，求数据序列中值的函数是median。两个函数的调用格式为：</p><ul><li>mean(X)：返回向量X的算术平均值。</li><li>median(X)：返回向量X的中值。</li><li>mean(A)：返回一个行向量，其第i个元素是A的第i列的算术平均值。</li><li>median(A)：返回一个行向量，其第i个元素是A的第i列的中值。</li><li>mean(A,dim)：当dim为1时，该函数等同于mean(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行的算术平均值。</li><li>median(A,dim)：当dim为1时，该函数等同于median(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行的中值。</li></ul><h3 id="4、元素排序"><a href="#4、元素排序" class="headerlink" title="4、元素排序"></a>4、元素排序</h3><p>命令如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">-8</span>,<span class="number">5</span>;<span class="number">4</span>,<span class="number">12</span>,<span class="number">6</span>;<span class="number">13</span>,<span class="number">7</span>,<span class="number">-13</span>];</span><br><span class="line"> <span class="built_in">sort</span>(A)</span><br><span class="line"> <span class="built_in">ans</span> =</span><br><span class="line"> <span class="number">1</span>    <span class="number">-8</span>   <span class="number">-13</span></span><br><span class="line"> <span class="number">4</span>     <span class="number">7</span>     <span class="number">5</span></span><br><span class="line"><span class="number">13</span>    <span class="number">12</span>     <span class="number">6</span></span><br><span class="line">-<span class="built_in">sort</span>(-A,<span class="number">2</span>)  <span class="comment">%对A的每行按降序排列</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">5</span>       <span class="number">1</span>    <span class="number">-8</span></span><br><span class="line"><span class="number">12</span>     <span class="number">6</span>     <span class="number">4</span></span><br><span class="line"><span class="number">13</span>     <span class="number">7</span>   <span class="number">-13</span></span><br></pre></td></tr></table></figure><h2 id="三、多项式"><a href="#三、多项式" class="headerlink" title="三、多项式"></a>三、多项式</h2><p><strong>1、多项式的MATLAB表达</strong></p><p>多项式由一个行向量表示：</p><ul><li>该向量元素是该多项式的系数</li><li>且按降幂次序排列  </li></ul><p>如：多项式x4－12x3＋25x＋116由行向量：</p><p>​      <code>p=[1  -12  0  25  116]</code>表示。</p><p><strong>注意，必须包括具有零系数的项。</strong></p><p><strong>2、求解多项式的根？</strong><br>roots指令。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;p=[<span class="number">1</span>  <span class="number">-12</span>  <span class="number">0</span>  <span class="number">25</span>  <span class="number">116</span>]</span><br><span class="line">p =</span><br><span class="line">     <span class="number">1</span>   <span class="number">-12</span>     <span class="number">0</span>    <span class="number">25</span>   <span class="number">116</span></span><br><span class="line">&gt;&gt;r=roots(p)</span><br><span class="line">r =</span><br><span class="line">  <span class="number">11.7473</span>          </span><br><span class="line">   <span class="number">2.7028</span>          </span><br><span class="line">  <span class="number">-1.2251</span> + <span class="number">1.4672</span><span class="built_in">i</span></span><br><span class="line">  <span class="number">-1.2251</span> - <span class="number">1.4672</span><span class="built_in">i</span></span><br></pre></td></tr></table></figure><p>MATLAB按惯例规定，多项式是行向量，根是列向量。</p><p><strong>3、已知多项式的根，求解多项式 ？</strong></p><p>使用ploy指令。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; pp=poly(r)</span><br><span class="line">pp =</span><br><span class="line">    <span class="number">1.0000</span>  <span class="number">-12.0000</span>   <span class="number">-0.0000</span>   <span class="number">25.0000</span>  <span class="number">116.0000</span></span><br></pre></td></tr></table></figure><p>即：x4－12x3＋25x＋116。</p><p><strong>4、多项式的乘法(conv指令)</strong> </p><p>举例：多项式 a(x)=x3＋2x2＋3x＋4 和 b(x)= x3＋4x2＋9x＋16 的乘积。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>] ;  b=[<span class="number">1</span>  <span class="number">4</span>  <span class="number">9</span>  <span class="number">16</span>];</span><br><span class="line">c=conv(a, b)</span><br><span class="line">c =</span><br><span class="line">     <span class="number">1</span>     <span class="number">6</span>    <span class="number">20</span>    <span class="number">50</span>    <span class="number">75</span>    <span class="number">84</span>    <span class="number">64</span></span><br></pre></td></tr></table></figure><p>两个以上的多项式的乘法需要重复使用conv. </p><p><strong>5、多项式加法</strong></p><p>MATLAB没有提供进行加法运算的函数。</p><p>1）如果两个多项式向量大小相同，标准的数组加法有效。把多项式a(x)与上面给出的b(x)相加。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; d=a+b</span><br><span class="line">d =</span><br><span class="line">     <span class="number">2</span>     <span class="number">6</span>    <span class="number">12</span>    <span class="number">20</span></span><br></pre></td></tr></table></figure><p>结果: d(x)= 2x3＋6x2＋12x＋20<br>2）当两个多项式阶次不同，低阶的多项式必须用首零填补，使其与高阶多项式有同样的阶次。<br>考虑上面多项式c和d相加：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;  e=c+[<span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  d]</span><br><span class="line">e =</span><br><span class="line">     <span class="number">1</span>     <span class="number">6</span>    <span class="number">20</span>    <span class="number">52</span>    <span class="number">81</span>    <span class="number">96</span>    <span class="number">84</span></span><br></pre></td></tr></table></figure><p>结果: e(x)= x6+6x5+20x4+52x3+81x2+96x+84</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇基于上篇文章基础，谈谈Matlab的&lt;strong&gt;数值运算&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/categories/MATLAB/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB课程总结（二）</title>
    <link href="http://icewind-r.github.io/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-03-20T12:21:24.000Z</published>
    <updated>2020-03-20T12:40:31.156Z</updated>
    
    <content type="html"><![CDATA[<p>第二次总结，基于上次的课堂总结。</p><a id="more"></a><hr><h2 id="一、字符串"><a href="#一、字符串" class="headerlink" title="一、字符串"></a>一、字符串</h2><h3 id="1、基本命令"><a href="#1、基本命令" class="headerlink" title="1、基本命令"></a>1、基本命令</h3><ul><li><p>Matlab 用「单引号」来界定一个字符串。</p></li><li><p>可以使用方括号“[ ]”直接连接多个字符串变量，得到一个新字符串变量。</p></li><li><p>如要输入的字符串中有单引号，则由两个连续的单引号来表示。</p></li><li><p>若要计算字符串变量的长度（即组成字符串的个数），可用 length 指令。</p></li><li><p>double 指令: 查看字符串变量的存储內容（即 ASCII 内码）</p></li><li><p>char 指令: 将 ASCII 內码转换为字符串形式 </p></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">str1 = ‘I like MATLAB,’;    <span class="comment">% 建立字串变量 str1</span></span><br><span class="line">str2 = <span class="string">' JavaScript, and Perl!'</span>;    <span class="comment">% 建立字串变量str2</span></span><br><span class="line">str3 = [str1 str2]        <span class="comment">% 直接连接str1及str2，以建立str3</span></span><br><span class="line">str3 =I like MATLAB, JavaScript, and Perl!</span><br><span class="line"></span><br><span class="line">sentence = <span class="string">'I''ve got a date!'</span>;</span><br><span class="line"><span class="built_in">length</span>(sentence)<span class="comment">% 计算字字符串sentence的长度</span></span><br><span class="line"><span class="built_in">ans</span> =     <span class="number">16</span></span><br><span class="line"></span><br><span class="line">sentence = <span class="string">'I''ve got a date!'</span>;</span><br><span class="line">sentenceAscii = double(sentence)   <span class="comment">%查看 sentence 的 ASCII 码</span></span><br><span class="line">sentence2 = char(sentenceAscii)     <span class="comment">% 将 ASCII 码恢复成字符串形式</span></span><br><span class="line">sentenceAscii =<span class="number">73</span>   <span class="number">39</span>   <span class="number">118</span>   <span class="number">101</span>   <span class="number">32</span>   <span class="number">103</span>   <span class="number">111</span>   <span class="number">116</span>   <span class="number">32</span>   <span class="number">97</span>  <span class="number">32</span>   <span class="number">100</span>  <span class="number">97</span>   <span class="number">116</span>   <span class="number">101</span>    <span class="number">33</span> </span><br><span class="line">sentence2 =I've got a date!</span><br></pre></td></tr></table></figure><h3 id="2、字符串的判断"><a href="#2、字符串的判断" class="headerlink" title="2、字符串的判断"></a>2、字符串的判断</h3><ul><li><p>class 或 ischar 指令: 可以用来判断一个变量的类型或它是否为字符串变量。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chinese = ‘今日事，今日毕<span class="string">';</span></span><br><span class="line"><span class="string">out1 = class(chinese)      % out1 的值是 “char”</span></span><br><span class="line"><span class="string">x = chinese+1;</span></span><br><span class="line"><span class="string">out2 = ischar(x)           % out2 的值是 0，代表 x 不是字符串变量</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3、一个字符数组变量存储多行字符串"><a href="#3、一个字符数组变量存储多行字符串" class="headerlink" title="3、一个字符数组变量存储多行字符串"></a>3、一个字符数组变量存储多行字符串</h3><h4 id="1、使用二维字符数组"><a href="#1、使用二维字符数组" class="headerlink" title="1、使用二维字符数组"></a>1、使用二维字符数组</h4><p><strong>注意</strong>：必须先确认每个字符串（即每一行）的长度一样，否则就必须在短字符串结尾补齐空格。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">departments = [‘ee  ’; ‘cs  ’; ‘econ’]<span class="comment">%注意语句中空格字符的使用。</span></span><br><span class="line">departments =</span><br><span class="line">ee  </span><br><span class="line">cs   </span><br><span class="line">econ</span><br></pre></td></tr></table></figure><h4 id="2、用char-指令存储多字符串"><a href="#2、用char-指令存储多字符串" class="headerlink" title="2、用char 指令存储多字符串"></a>2、用char 指令存储多字符串</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">departments = char(‘ee’, ‘cs’, ‘econ’)      <span class="comment">% 注意空格及「,」的使用</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>从二维字符数组访问字符串时，切记要使用 deblank 指令来清除字符串尾部的空格字符。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">departments = char(<span class="string">'ee'</span>, <span class="string">'cs'</span>, <span class="string">'econ'</span>);</span><br><span class="line">dept1 = departments(<span class="number">1</span>,:);<span class="comment">% (1,:)代表第一行的全部元素  </span></span><br><span class="line">dept2 = deblank(dept1);            <span class="comment">% 使用 deblank 指令清除尾部的空格字符   </span></span><br><span class="line">len1 = <span class="built_in">length</span>(dept1)<span class="comment">% 显示变量 dept1 的长度=4</span></span><br><span class="line">len2 = <span class="built_in">length</span>(dept2)<span class="comment">% 显示变量 dept2 的长度=2</span></span><br></pre></td></tr></table></figure><h3 id="4、字符串比较"><a href="#4、字符串比较" class="headerlink" title="4、字符串比较"></a>4、字符串比较</h3><p>strcmp 指令: 用于比较字符串的內容的异同 。不相等返回0,相等返回1。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'today'</span>;  </span><br><span class="line">str2 = <span class="string">'tomorrow'</span>;  </span><br><span class="line">str3 = <span class="string">'today'</span>;  </span><br><span class="line">out1 = strcmp(str1, str2)   <span class="comment">% 比较字符串 str1 和 str2 </span></span><br><span class="line">out1 = <span class="number">0</span>                       <span class="comment">%表示字符串 str1 和 str2不同</span></span><br><span class="line">out2 = strcmp(str1, str3)   <span class="comment">% 比较字符串 str1 和 str3</span></span><br><span class="line">out2 = <span class="number">1</span>                       <span class="comment">%表示字符串 str1 和 str2相同</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第二次总结，基于上次的课堂总结。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/categories/MATLAB/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>Python入门小结（二）</title>
    <link href="http://icewind-r.github.io/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%B0%8F%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%B0%8F%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-03-17T02:48:24.000Z</published>
    <updated>2020-03-17T05:55:05.189Z</updated>
    
    <content type="html"><![CDATA[<p>基于上篇博客介绍了一些很基本的Python语法，如数据类型，输入输出，运算符等等，此篇博客继续总结。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;基于上篇博客介绍了一些很基本的Python语法，如数据类型，输入输出，运算符等等，此篇博客继续总结。&lt;/p&gt;
&lt;hr&gt;

      
    
    </summary>
    
    
      <category term="Python" scheme="http://iceWind-R.github.io/categories/Python/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="Python" scheme="http://iceWind-R.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB课程总结(一)</title>
    <link href="http://icewind-r.github.io/2020/03/13/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/13/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-03-13T08:23:56.000Z</published>
    <updated>2020-03-20T12:22:16.875Z</updated>
    
    <content type="html"><![CDATA[<p>MATLAB的课堂总结，一周一次课，东西又多，不总结的话怕是学了就忘，这篇文章的目的也主要用于记录总结各种命令的使用方法。</p><a id="more"></a><h3 id="一、MATLAB注意事项"><a href="#一、MATLAB注意事项" class="headerlink" title="一、MATLAB注意事项"></a>一、MATLAB注意事项</h3><p>1、 MATLAB对字母的大小写是敏感的。</p><p>2、按照MATLAB的变量定义规则，将所有变量都定义为数组。标量被看作（1×1）的数组，向量认为是（1×n）或（m×1）的数组,矩阵认为是（m×n）的数组。</p><h3 id="二、常见的通用命令"><a href="#二、常见的通用命令" class="headerlink" title="二、常见的通用命令"></a>二、常见的通用命令</h3><p>1、<code>clc</code>清除清除窗口显示内容。</p><p>2、<code>who</code>、<code>whos</code>命令显示工作空间的变量，<code>clear</code>清除工作空间的变量。</p><p>3、<code>dir</code>命令显示当前工作目录的文件和子目录清单。</p><p>4、<code>cd</code>命令显示或设置当前工作目录。</p><p>5、<code>type</code>命令显示指定m文件的内容。</p><p>6、<code>help</code>或doc命令获取在线帮助。</p><h3 id="三、命令行窗口"><a href="#三、命令行窗口" class="headerlink" title="三、命令行窗口"></a>三、命令行窗口</h3><p>1、<code>sin</code>命令</p><p>MATLAB中正弦函数sin就是常见的正弦函数。</p><p>它的参数值是以“弧度”为单位的。</p><p>pi也是Matalb的预定义变量。</p><p>pi=3.14159…</p><p>MATLAB对字母大小写是敏感的。</p><p>2、开方<code>sqrt(x)</code>，指数函数<code>exp(x)</code>。</p><p>3、数组的输入有两种方式：</p><ul><li>直接输入数组时，数组元素之间用空格或逗号分隔，数组行之间用分号分隔，整个数组放在方括号”[]”里。</li><li>也可以分行输入，用回车“Enter”区分行。</li></ul><p>4、指令的多行输入：在本行命令的末尾加上三个及以上的点<code>...</code>即可。</p><h3 id="四、数值表示、变量及表达式"><a href="#四、数值表示、变量及表达式" class="headerlink" title="四、数值表示、变量及表达式"></a>四、数值表示、变量及表达式</h3><p>1、MATLAB只采用十进制表示数值。</p><p>2、Matlab预定义的变量</p><table><thead><tr><th><strong>变量名</strong></th><th><strong>意义</strong></th></tr></thead><tbody><tr><td><strong>ans</strong></td><td><strong>最近的计算结果的变量名</strong></td></tr><tr><td><strong>eps</strong></td><td><strong>MATLAB定义的正的极小值=2.2204e-16</strong></td></tr><tr><td><strong>pi</strong></td><td><strong>圆周率π</strong></td></tr><tr><td><strong>inf</strong></td><td><strong>∞值，无限大</strong></td></tr><tr><td><strong>i或j</strong></td><td><strong>虚数单元，sqrt(-1)</strong></td></tr><tr><td><strong>NaN</strong></td><td><strong>非数，0/0、∞/</strong> <strong>∞</strong></td></tr></tbody></table><p><strong>说明</strong>：</p><ul><li><p>每当MATLAB启动完成，这些变量就被产生。</p></li><li><p>MATLAB中，被0除不会引起程序中断，给出报警的同时用inf或NaN给出结果。</p></li><li><p>用户只能临时覆盖这些预定义变量的值，Clear或重启MATLAB可恢复其值。</p></li></ul><p>3、运算符和表达式</p><table><thead><tr><th><strong>运算</strong></th><th><strong>数学表达式</strong></th><th><strong>MATLAB运算符</strong></th><th><strong>MATLAB表达式</strong></th></tr></thead><tbody><tr><td><strong>加</strong></td><td><strong>a+b</strong></td><td><strong>+</strong></td><td><strong>a+b</strong></td></tr><tr><td><strong>减</strong></td><td><strong>a-b</strong></td><td><strong>-</strong></td><td><strong>a-b</strong></td></tr><tr><td><strong>乘</strong></td><td><strong>axb</strong></td><td>*</td><td><strong>a*b</strong></td></tr><tr><td><strong>除</strong></td><td><strong>a/b或a\b</strong></td><td><strong>/或\</strong></td><td><strong>a/b或a\b</strong></td></tr><tr><td><strong>幂</strong></td><td>a^b</td><td><strong>^</strong></td><td><strong>a^b</strong></td></tr></tbody></table><p><strong>说明</strong>：</p><ul><li><p>Matlab用“\”和”/”分别表示“左除”和“右除”。对标量而言，两者没有区别。对矩阵产生不同影响。</p></li><li><p>MATLAB表达式的书写规则与“手写方式”几乎完全相同。</p></li><li><p>表达式按与常规相同的优先级自左至右执行运算。</p></li><li><p>优先级：指数运算级别最高，乘除次之，加减最低。</p></li><li><p>括号改变运算的次序。</p></li></ul><p>4、复数及其运算</p><ul><li><p>MATLAB中复数的表达：z=a+bi，其中a、b为实数。</p></li><li><p>MATLAB把复数作为一个整体，像计算实数一样计算复数。</p></li></ul><h3 id="五、数组与矩阵"><a href="#五、数组与矩阵" class="headerlink" title="五、数组与矩阵"></a>五、数组与矩阵</h3><h4 id="1、分类"><a href="#1、分类" class="headerlink" title="1、分类"></a>1、分类</h4><ul><li><p>一维数组，也称为向量(vector) 。行向量(row vector)、列向量(column vector)。</p></li><li><p>二维数组(矩阵matrix)。</p></li><li><p>多维数组。</p></li></ul><p><strong>注意</strong>：有效矩阵：每行元素的个数必须相同，每列元素的个数也必须相同。</p><h4 id="2、创建一维数组"><a href="#2、创建一维数组" class="headerlink" title="2、创建一维数组"></a>2、创建一维数组</h4><p><strong>① 行向量的创建</strong></p><ol><li><p>第一种方法：使用方括号“[ ]”操作符</p><p>例如：创建数组(行向量)a=[1 3 pi 3+5i] </p><p><code>&gt;&gt;a=[1 3 pi 3+5*i]  %or a=[1, 3, pi, 3+5*i]</code> </p><p>结果：a= 1.0000      3.0000      3.1416       3.0000 + 5.0000i</p></li><li><p>第二种方法：使用冒号“:”操作符</p><p>利用冒号“:”操作符创建行向量的基本语法格式：</p><ul><li><p>x=Start:Increment:End</p></li><li><p>Start表示新向量x的第一个元素；</p></li><li><p>新向量x的最后一个元素不能大于End ；</p></li><li><p>Increment可正可负，若负，则必须Start&gt;End；若正，则必须Start&lt;End，否则创建的为空向量。</p></li><li><p>若Increment=1,则可简写为：x=Start:End。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;b=<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">b=<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">&gt;&gt; c=<span class="number">1</span>:<span class="number">2</span>:<span class="number">10</span></span><br><span class="line">c=<span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></span><br><span class="line">&gt;&gt;d=<span class="number">1</span>:<span class="number">2</span>:<span class="number">9</span></span><br><span class="line">d= <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>第三种方法：利用函数linspace。</p><p><code>x= linspace(x1, x2, n)</code></p><ul><li>该函数生成一个由n个元素组成的行向量；</li><li>x1为其第一个元素；</li><li>x2为其最后一个元素；</li><li>x1、x2之间元素的间隔=(x2-x1)/(n-1)。</li><li>如果忽略参数n，则系统默认生成100个元素的行向量。</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;<span class="built_in">linspace</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>)</span><br><span class="line">x=<span class="number">1.0000</span>    <span class="number">1.2500</span>    <span class="number">1.5000</span>    <span class="number">1.7500</span>    <span class="number">2.0000</span></span><br></pre></td></tr></table></figure></li><li><p>第四种方法：利用函数logspace</p><p><code>x= logspace(x1, x2, n)</code></p><ul><li>该函数生成一个由n个元素组成的行向量；</li><li>x1为其第一个元素，是以10为底的幂；</li><li>x2为其最后一个元素，是以10为底的幂；</li><li>n是向量中元素的个数；</li><li>如果忽略参数n，则系统默认生成50个元素的行向量</li></ul></li></ol><p><strong>② 列向量的创建</strong></p><ol><li><p>使用方括号“[ ]”操作符，使用分号“;”分割行。</p></li><li><p>使用冒号操作符，最后加上单引号<code>&#39;</code>，表示矩阵的转置。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;x=(<span class="number">1</span>:<span class="number">3</span>)'</span><br><span class="line">x= <span class="number">1</span></span><br><span class="line">   <span class="number">2</span></span><br><span class="line">   <span class="number">3</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="3、创建数组变量"><a href="#3、创建数组变量" class="headerlink" title="3、创建数组变量"></a>3、创建数组变量</h4><p>创建变量的赋值语句的一般格式: <code>var=expression</code></p><ul><li><p>var为变量名</p></li><li><p>expression为MATLAB合法表达式</p><ul><li><p>可以是单独的常数值或数值数组；</p></li><li><p>也可以由常数值、其他变量（部分或全部）、数值数组和运算符（+、-等）构成。</p><p>例如：<code>a=[0 1+6]; b=[a 6 7]; c=[6 a 7]; d=[6 a 7 a];</code></p></li><li><p>一旦被创建，变量就被存储在工作空间，可以通过“Workspace”窗口或在“Command Window”执行“whos”命令察看。</p></li></ul></li></ul><h4 id="4、创建数组变量"><a href="#4、创建数组变量" class="headerlink" title="4、创建数组变量"></a>4、创建数组变量</h4><ol><li><p>第一种方法：使用方括号“[ ]”操作符</p><p>使用规则</p><ul><li>数组元素必须在“[ ]”内键入；</li><li>行与行之间须用分号“;” 间隔，也可以在分行处用回车键间隔；</li><li>行内元素用空格或逗号“,”间隔。</li></ul><p>同时可由一维数组构成二维数组。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;a=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]; b=[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]; </span><br><span class="line">&gt;&gt;c=[a;b];</span><br><span class="line">&gt;&gt;d=[a b];</span><br><span class="line">c=</span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span></span><br><span class="line"><span class="number">2</span><span class="number">3</span><span class="number">4</span></span><br><span class="line">d=</span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">2</span><span class="number">3</span><span class="number">4</span></span><br></pre></td></tr></table></figure></li><li><p>第二种方法：函数方法</p><blockquote><p>函数ones(生成全1矩阵)、zeros (生成全0矩阵) 、eye（生成单位矩阵）、rand（以0~1均匀分布的矩阵）、randn（均值为0，方差为1的高斯分布矩阵）、magic（魔方矩阵，每行、列和对角线元素和相等）、reshape（重新排列矩阵）。</p><p>“help elmat”获得基本的矩阵生成和操作函数列表</p></blockquote><p><strong>reshape</strong>的使用演示：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;a=<span class="number">-4</span>:<span class="number">4</span></span><br><span class="line">a=</span><br><span class="line">   <span class="number">-4</span> <span class="number">-3</span> <span class="number">-2</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">&gt;&gt;b=<span class="built_in">reshape</span>(a, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">b=</span><br><span class="line"><span class="number">-4</span>  <span class="number">-1</span>  <span class="number">2</span></span><br><span class="line"><span class="number">-3</span>   <span class="number">0</span>  <span class="number">3</span></span><br><span class="line"><span class="number">-2</span>   <span class="number">1</span>  <span class="number">4</span></span><br></pre></td></tr></table></figure><p>该函数注意：</p><ul><li>数组元素的排列顺序，从上到下按列排列，先排第一列，然后第二列，…</li><li>要求数组的元素总数不变。</li></ul></li></ol><h4 id="5、数组元素的标识与寻访"><a href="#5、数组元素的标识与寻访" class="headerlink" title="5、数组元素的标识与寻访"></a>5、数组元素的标识与寻访</h4><ol><li><p>“全下标（index）”标识</p><p>经典数学教科书采用“全下标”标识法：每一维对应一个下标。</p><ul><li>如对于二维数组，用“行下标和列下标”标识数组的元素，a(2,3)就表示二维数组a的“第2行第3列”的元素。</li><li>对于一维数组，用一个下标即可，b(2)表示一维数组b的第2个元素，无论b是行向量还是列向量。</li></ul></li><li><p>“单下标”（linear index）标识</p><p>所谓“单下标”标识就是用一个下标来表明元素在数组的位置。</p><ul><li>对于二维数组， “单下标”编号：设想把二维数组的所有列，按先后顺序首尾相接排成“一维长列”，然后自上往下对元素位置执行编号。</li></ul></li></ol><p>几种表示法：</p><ul><li>a(:,n)表示矩阵a所有的行和第n列，即提取矩阵a第n列元素；</li><li>a([m,n],[i,j])表示矩阵的第m行与第n行的第i列和第j列，即提取矩阵a第m行与第n行的第i列和第j列元素；</li><li>a(m:n,i:j)表示第m行到第n行的第i列到第j列，即提取第m行到第n行的第i列到第j列的所有元素</li><li>a(m:end,i)表示第m行到最末行的第i列，即提取第m行到最末行的第i列的元素</li></ul><h4 id="6、例子"><a href="#6、例子" class="headerlink" title="6、例子"></a>6、例子</h4><ol><li><p>单下标的使用</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;a=<span class="built_in">zeros</span>(<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">&gt;&gt;a(:)=<span class="number">-4</span>:<span class="number">5</span></span><br><span class="line">a =</span><br><span class="line">    <span class="number">-4</span>    <span class="number">-2</span>     <span class="number">0</span>     <span class="number">2</span>     <span class="number">4</span></span><br><span class="line">    <span class="number">-3</span>    <span class="number">-1</span>     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span></span><br></pre></td></tr></table></figure><p>注意数组的排列顺序。</p></li><li><p>一维数组元素与子数组的寻访与赋值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;a=<span class="built_in">linspace</span>(<span class="number">1</span>,<span class="number">10</span>,<span class="number">5</span>)</span><br><span class="line">a =</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">3.2500</span>    <span class="number">5.5000</span>    <span class="number">7.7500</span>   <span class="number">10.0000</span></span><br><span class="line">&gt;&gt;a(<span class="number">3</span>)       <span class="comment">%寻访a的第3个元素</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">5.5000</span></span><br><span class="line">&gt;&gt;a([<span class="number">1</span> <span class="number">2</span> <span class="number">5</span>])   <span class="comment">%寻访a的第1、2、5个元素组成的子数组</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">3.2500</span>   <span class="number">10.0000</span></span><br><span class="line">&gt;&gt;a(<span class="number">1</span>:<span class="number">3</span>)   <span class="comment">%寻访前3个元素组成的子数组</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">3.2500</span>    <span class="number">5.5000</span></span><br><span class="line">&gt;&gt;a(<span class="number">3</span>:<span class="number">-1</span>:<span class="number">1</span>)  <span class="comment">%由前3个元素倒序构成的子数组</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">5.5000</span>    <span class="number">3.2500</span>    <span class="number">1.0000</span></span><br><span class="line">&gt;&gt;a(<span class="number">3</span>:<span class="keyword">end</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">5.5000</span>    <span class="number">7.7500</span>   <span class="number">10.0000</span></span><br><span class="line">&gt;&gt;a(<span class="number">3</span>:<span class="keyword">end</span><span class="number">-1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">5.5000</span>    <span class="number">7.7500</span></span><br><span class="line">&gt;&gt;a([<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">5</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span>])  <span class="comment">% 数组元素可以被任意重复访问，构成长度大于原数组的新数组。</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">3.2500</span>    <span class="number">5.5000</span>   <span class="number">10.0000</span>   <span class="number">10.0000</span>    <span class="number">5.5000</span>    <span class="number">3.2500</span>    <span class="number">1.0000</span></span><br><span class="line">&gt;&gt;a(<span class="number">3</span>)=<span class="number">0</span>           <span class="comment">%修改数组a的第3元素值为0</span></span><br><span class="line">a =</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">3.2500</span>    <span class="number">0</span>    <span class="number">7.7500</span>   <span class="number">10.0000</span></span><br><span class="line">&gt;&gt;a([<span class="number">2</span> <span class="number">5</span>])=[<span class="number">1</span> <span class="number">1</span>]</span><br><span class="line">a =</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">1.0000</span>    <span class="number">0</span>    <span class="number">7.7500</span>   <span class="number">1.0000</span></span><br><span class="line">&gt;&gt;a([<span class="number">2</span> <span class="number">5</span>])=[]</span><br><span class="line">a =</span><br><span class="line">  <span class="number">1.0000</span>  <span class="number">0</span>    <span class="number">7.7500</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>可以修改指定数组元素的值</li><li>一次可以修改多个数组元素的值</li><li>要修改的数组元素的个数应与送入数组的元素个数相同</li><li>利用方括号（[]）删除矩阵的某行列</li></ul></li><li><p>二维数组元素与子数组的寻访与赋值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;a_2=<span class="built_in">zeros</span>(<span class="number">2</span>, <span class="number">4</span>) <span class="comment">%创建2x4的全0数组</span></span><br><span class="line">a_2 =</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">&gt;&gt;a_2(:)=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">a_2 =</span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span>     <span class="number">6</span>     <span class="number">8</span>            </span><br><span class="line">&gt;&gt;a_2([<span class="number">2</span> <span class="number">5</span> <span class="number">8</span>])    <span class="comment">%单下标方式寻访多个元素</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">8</span></span><br><span class="line">&gt;&gt; a_2([<span class="number">2</span> <span class="number">5</span> <span class="number">8</span>]) =[<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>]</span><br><span class="line">a_2 =</span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>    <span class="number">20</span>     <span class="number">7</span></span><br><span class="line">    <span class="number">10</span>     <span class="number">4</span>     <span class="number">6</span>    <span class="number">30</span></span><br><span class="line">&gt;&gt;a_2(:,[<span class="number">2</span> <span class="number">3</span>])=<span class="built_in">ones</span>(<span class="number">2</span>)  <span class="comment">%双下标方式寻访并修改</span></span><br><span class="line">a_2 =</span><br><span class="line">     <span class="number">1</span>      <span class="number">1</span>     <span class="number">1</span>    <span class="number">7</span></span><br><span class="line">    <span class="number">10</span>     <span class="number">1</span>     <span class="number">1</span>    <span class="number">30</span></span><br></pre></td></tr></table></figure><ul><li>二维数组可以“单下标”方式或“全下标”方式访问、赋值；</li><li>“单下标”方式赋值时，等号两边涉及的元素个数必须相等；</li><li>“全下标”方式赋值时，等号右边数组的大小必须等于原数组中涉及元素构成的子数组的大小。</li></ul></li><li><p>size、length函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;a=<span class="built_in">ones</span>(<span class="number">4</span>,<span class="number">6</span>)*<span class="number">6</span></span><br><span class="line">&gt;&gt;m=<span class="built_in">size</span>(a)</span><br><span class="line">&gt;&gt;len=<span class="built_in">length</span>(a)</span><br><span class="line">&gt;&gt;b=<span class="number">1</span>:<span class="number">5</span>;</span><br><span class="line">&gt;&gt;<span class="built_in">length</span>(b)</span><br><span class="line">&gt;&gt;c=b’</span><br><span class="line">&gt;&gt;<span class="built_in">length</span>(c)</span><br></pre></td></tr></table></figure><ul><li>size函数返回变量的大小，即变量数组的行列数。</li><li>length函数返回变量数组的最大维数。</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MATLAB的课堂总结，一周一次课，东西又多，不总结的话怕是学了就忘，这篇文章的目的也主要用于记录总结各种命令的使用方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/categories/MATLAB/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>Python入门小结（一）</title>
    <link href="http://icewind-r.github.io/2020/03/12/Python%E5%85%A5%E9%97%A8%E5%B0%8F%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/12/Python%E5%85%A5%E9%97%A8%E5%B0%8F%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-03-12T00:49:55.000Z</published>
    <updated>2020-03-17T05:46:27.301Z</updated>
    
    <content type="html"><![CDATA[<p>老师突如其来的爬虫测试让人心里倍生无助感，最后虽说用Java勉强完成了测试，但也乱入进了python领域。算了，python现在这么火，早晚得入门，不如就现在吧。</p><a id="more"></a><p>主要介绍刚刚入门的一些基础的语法知识，至于前期的环境搭建和IDE的下载，网上教程很多且大多切实可用，这里不再赘述，下面开始介绍基本的，与其他语言不一样的语法基础。</p><hr><h3 id="一、注释"><a href="#一、注释" class="headerlink" title="一、注释"></a>一、注释</h3><ul><li><p>单行注释（用 ‘#’ ）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注释内容</span></span><br></pre></td></tr></table></figure></li><li><p>多行注释（三个双引号或单引号包围）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="二、变量"><a href="#二、变量" class="headerlink" title="二、变量"></a>二、变量</h3><p>定义变量，变量名自定义，满足标识符命名规则。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 变量名 = 值</span></span><br><span class="line">myData = <span class="string">'Tom'</span></span><br><span class="line">print(myData)</span><br></pre></td></tr></table></figure><h3 id="三、数据类型"><a href="#三、数据类型" class="headerlink" title="三、数据类型"></a>三、数据类型</h3><img src="/2020/03/12/Python%E5%85%A5%E9%97%A8%E5%B0%8F%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/1.png" class><p>举例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">num1 = <span class="number">1</span> <span class="comment"># 整数型</span></span><br><span class="line">num2 = <span class="number">1.1</span> <span class="comment"># 浮点型</span></span><br><span class="line">str = <span class="string">'hello world'</span> <span class="comment"># 字符串型</span></span><br><span class="line">flag = <span class="literal">True</span> <span class="comment"># 布尔型</span></span><br><span class="line">lis = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>] <span class="comment"># list列表</span></span><br><span class="line">tup = (<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>) <span class="comment"># tuple元组</span></span><br><span class="line">s = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125; <span class="comment"># set集合</span></span><br><span class="line">dic = &#123;<span class="string">'name'</span>:<span class="string">'Tom'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125; <span class="comment"># dict字典</span></span><br></pre></td></tr></table></figure><h3 id="四、输出"><a href="#四、输出" class="headerlink" title="四、输出"></a>四、输出</h3><h4 id="1、格式化输出"><a href="#1、格式化输出" class="headerlink" title="1、格式化输出"></a>1、格式化输出</h4><table><thead><tr><th>转换说明符</th><th>解释</th></tr></thead><tbody><tr><td><strong>%d</strong>、%i</td><td>转换为带符号的十进制整数</td></tr><tr><td>%o</td><td>转换为带符号的八进制整数</td></tr><tr><td>%x、%X</td><td>转换为带符号的十六进制整数</td></tr><tr><td>%e</td><td>转化为科学计数法表示的浮点数（e 小写）</td></tr><tr><td>%E</td><td>转化为科学计数法表示的浮点数（E 大写）</td></tr><tr><td><strong>%f</strong>、%F</td><td>转化为十进制浮点数</td></tr><tr><td>%g</td><td>智能选择使用 %f 或 %e 格式</td></tr><tr><td>%G</td><td>智能选择使用 %F 或 %E 格式</td></tr><tr><td>%c</td><td>格式化字符及其 ASCII 码</td></tr><tr><td>%r</td><td>使用 repr() 函数将表达式转换为字符串</td></tr><tr><td><strong>%s</strong></td><td>使用 str() 函数将表达式转换为字符串</td></tr></tbody></table><p>%s，%d，%f较为常用。</p><p><strong>技巧</strong>：</p><ol><li><p>%03d：表示输出的整数显示3位数，不足以0不全，超出当前位数则原样输出。</p></li><li><p>%.2f：表示小数点后显示2位。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">18</span></span><br><span class="line">name = <span class="string">'Tom'</span></span><br><span class="line">weight = <span class="number">65.5</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'今年我的年龄是%03d岁'</span> % age) <span class="comment"># %03d</span></span><br><span class="line">print(<span class="string">'我的名字是%s'</span> % name)</span><br><span class="line">print(<span class="string">'我的体重是%.3f公斤'</span> % weight)<span class="comment"># %.3f</span></span><br><span class="line">print(<span class="string">'我叫%s,今年%d岁。'</span> % (name , age))<span class="comment"># 输出多个</span></span><br><span class="line">print(<span class="string">'我叫%s,今年%s岁。'</span> % (name , age)) <span class="comment"># %s可以输出整型，浮点型</span></span><br></pre></td></tr></table></figure><p>格式化字符串除了%s，还可以写为<code>f&#39;{表达式}&#39;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">f'我的名字是<span class="subst">&#123;name&#125;</span>,今年<span class="subst">&#123;age&#125;</span>岁了'</span>) <span class="comment"># 结果：我的名字是Tom,今年18岁了</span></span><br></pre></td></tr></table></figure><p>f-格式化字符串是Python3.6中新增的格式化方法，该方法更简单易读。</p></li></ol><h4 id="2、转义字符"><a href="#2、转义字符" class="headerlink" title="2、转义字符"></a>2、转义字符</h4><ul><li><code>\n</code>：换行。</li><li><code>\t</code>：制表符，一个TAB键（4个空格）的举例。</li></ul><h4 id="3、结束符"><a href="#3、结束符" class="headerlink" title="3、结束符"></a>3、结束符</h4><p><code>print(&#39;输出的内容&#39;,end=&quot;\n&quot;)</code></p><blockquote><p>在Python中，print()，默认自带<code>end=&quot;\n&quot;</code>这个换行结束符，用户可按需求更改结束符（包括转义字符，或者自定义的字符串等等）。</p></blockquote><h3 id="五、输入"><a href="#五、输入" class="headerlink" title="五、输入"></a>五、输入</h3><h4 id="1、语法"><a href="#1、语法" class="headerlink" title="1、语法"></a>1、语法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var = input(<span class="string">"提示信息"</span>)</span><br></pre></td></tr></table></figure><p>在Python中，<code>input</code>会把接收到的数据都当作字符串处理，并用变量接收。</p><h4 id="2、数据类型转换"><a href="#2、数据类型转换" class="headerlink" title="2、数据类型转换"></a>2、数据类型转换</h4><table><thead><tr><th>函 数</th><th>作 用</th></tr></thead><tbody><tr><td>int(x)</td><td>将 x 转换成整数类型</td></tr><tr><td>float(x)</td><td>将 x 转换成浮点数类型</td></tr><tr><td>complex(real，[,imag])</td><td>创建一个复数，real为实部，imag为虚部</td></tr><tr><td>str(x)</td><td>将 x 转换为字符串</td></tr><tr><td>repr(x)</td><td>将 x 转换为表达式字符串</td></tr><tr><td>eval(str)</td><td>计算在字符串中的有效 Python 表达式，并返回一个对象</td></tr><tr><td>chr(x)</td><td>将整数 x 转换为一个字符</td></tr><tr><td>ord(x)</td><td>将一个字符 x 转换为它对应的整数值</td></tr><tr><td>hex(x)</td><td>将一个整数 x 转换为一个十六进制字符串</td></tr><tr><td>oct(x)</td><td>将一个整数 x 转换为一个八进制的字符串</td></tr></tbody></table><h3 id="六、运算符"><a href="#六、运算符" class="headerlink" title="六、运算符"></a>六、运算符</h3><h4 id="1、算数运算符"><a href="#1、算数运算符" class="headerlink" title="1、算数运算符"></a>1、算数运算符</h4><table><thead><tr><th>运算符</th><th>说明</th><th>实例</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>12.45 + 15</td><td>27.45</td></tr><tr><td>-</td><td>减</td><td>4.56 - 0.26</td><td>4.3</td></tr><tr><td>*</td><td>乘</td><td>5 * 3.6</td><td>18.0</td></tr><tr><td>/</td><td>除法（和数学中的规则一样）</td><td>7 / 2</td><td>3.5</td></tr><tr><td>//</td><td>整除（只保留商的整数部分）</td><td>7 // 2</td><td>3</td></tr><tr><td>%</td><td>取余，即返回除法的余数</td><td>7 % 2</td><td>1</td></tr><tr><td>**</td><td>幂运算/次方运算，即返回 x 的 y 次方</td><td>2 ** 4</td><td>16，即 24</td></tr></tbody></table><h4 id="2、赋值运算符"><a href="#2、赋值运算符" class="headerlink" title="2、赋值运算符"></a>2、赋值运算符</h4><table><thead><tr><th>运算符</th><th>说 明</th><th>用法举例</th><th>等价形式</th></tr></thead><tbody><tr><td>=</td><td>最基本的赋值运算</td><td>x = y</td><td>x = y</td></tr><tr><td>+=</td><td>加赋值</td><td>x += y</td><td>x = x + y</td></tr><tr><td>-=</td><td>减赋值</td><td>x -= y</td><td>x = x - y</td></tr><tr><td>*=</td><td>乘赋值</td><td>x *= y</td><td>x = x * y</td></tr><tr><td>/=</td><td>除赋值</td><td>x /= y</td><td>x = x / y</td></tr><tr><td>%=</td><td>取余数赋值</td><td>x %= y</td><td>x = x % y</td></tr><tr><td>**=</td><td>幂赋值</td><td>x **= y</td><td>x = x ** y</td></tr><tr><td>//=</td><td>取整数赋值</td><td>x //= y</td><td>x = x // y</td></tr><tr><td>&amp;=</td><td>按位与赋值</td><td>x &amp;= y</td><td>x = x &amp; y</td></tr><tr><td>|=</td><td>按位或赋值</td><td>x |= y</td><td>x = x | y</td></tr><tr><td>^=</td><td>按位异或赋值</td><td>x ^= y</td><td>x = x ^ y</td></tr><tr><td>&lt;&lt;=</td><td>左移赋值</td><td>x &lt;&lt;= y</td><td>x = x &lt;&lt; y，这里的 y 指的是左移的位数</td></tr><tr><td>&gt;&gt;=</td><td>右移赋值</td><td>x &gt;&gt;= y</td><td>x = x &gt;&gt; y，这里的 y 指的是右移的位数</td></tr></tbody></table><h4 id="3、位运算符"><a href="#3、位运算符" class="headerlink" title="3、位运算符"></a>3、位运算符</h4><table><thead><tr><th>位运算符</th><th>说明</th><th>使用形式</th><th>举 例</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td><td>a &amp; b</td><td>4 &amp; 5</td></tr><tr><td>|</td><td>按位或</td><td>a | b</td><td>4 | 5</td></tr><tr><td>^</td><td>按位异或</td><td>a ^ b</td><td>4 ^ 5</td></tr><tr><td>~</td><td>按位取反</td><td>~a</td><td>~4</td></tr><tr><td>&lt;&lt;</td><td>按位左移</td><td>a &lt;&lt; b</td><td>4 &lt;&lt; 2，表示整数 4 按位左移 2 位</td></tr><tr><td>&gt;&gt;</td><td>按位右移</td><td>a &gt;&gt; b</td><td>4 &gt;&gt; 2，表示整数 4 按位右移 2 位</td></tr></tbody></table><h4 id="4、比较运算符"><a href="#4、比较运算符" class="headerlink" title="4、比较运算符"></a>4、比较运算符</h4><table><thead><tr><th>比较运算符</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td>大于，如果<code>&gt;</code>前面的值大于后面的值，则返回 True，否则返回 False。</td></tr><tr><td>&lt;</td><td>小于，如果<code>&lt;</code>前面的值小于后面的值，则返回 True，否则返回 False。</td></tr><tr><td>==</td><td>等于，如果<code>==</code>两边的值相等，则返回 True，否则返回 False。</td></tr><tr><td>&gt;=</td><td>大于等于（等价于数学中的 ≥），如果<code>&gt;=</code>前面的值大于或者等于后面的值，则返回 True，否则返回 False。</td></tr><tr><td>&lt;=</td><td>小于等于（等价于数学中的 ≤），如果<code>&lt;=</code>前面的值小于或者等于后面的值，则返回 True，否则返回 False。</td></tr><tr><td>!=</td><td>不等于（等价于数学中的 ≠），如果<code>!=</code>两边的值不相等，则返回 True，否则返回 False。</td></tr><tr><td>is</td><td>判断两个变量所引用的对象是否相同，如果相同则返回 True，否则返回 False。</td></tr><tr><td>is not</td><td>判断两个变量所引用的对象是否不相同，如果不相同则返回 True，否则返回 False。</td></tr></tbody></table><h4 id="5、逻辑运算符"><a href="#5、逻辑运算符" class="headerlink" title="5、逻辑运算符"></a>5、逻辑运算符</h4><table><thead><tr><th>逻辑运算符</th><th>含义</th><th>基本格式</th><th>说明</th></tr></thead><tbody><tr><td>and</td><td>逻辑与运算，等价于数学中的“且”</td><td>a and b</td><td>当 a 和 b 两个表达式都为真时，a and b 的结果才为真，否则为假。</td></tr><tr><td>or</td><td>逻辑或运算，等价于数学中的“或”</td><td>a or b</td><td>当 a 和 b 两个表达式都为假时，a or b 的结果才是假，否则为真。</td></tr><tr><td>not</td><td>逻辑非运算，等价于数学中的“非”</td><td>not a</td><td>如果 a 为真，那么 not a 的结果为假；如果 a 为假，那么 not a 的结果为真。相当于对 a 取反。</td></tr></tbody></table><h4 id="6、三目运算符"><a href="#6、三目运算符" class="headerlink" title="6、三目运算符"></a>6、三目运算符</h4><p>Python利用if else语句提供三目运算符的运算，形式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exp1 <span class="keyword">if</span> contion <span class="keyword">else</span> exp2</span><br></pre></td></tr></table></figure><blockquote><p><strong>解释</strong>：condition 是判断条件，exp1 和 exp2 是两个表达式。如果 condition 成立（结果为真），就执行 exp1，并把 exp1 的结果作为整个表达式的结果；如果 condition 不成立（结果为假），就执行 exp2，并把 exp2 的结果作为整个表达式的结果。</p></blockquote><p>例如：<code>max = a if a&gt;b else b</code>，表示取a，b的最大值，并赋给max。</p><p><strong>三目运算符的嵌套</strong></p><p>Python 三目运算符支持嵌套，如此可以构成更加复杂的表达式。在嵌套时需要注意 if 和 else 的配对，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a <span class="keyword">if</span> a&gt;b <span class="keyword">else</span> c <span class="keyword">if</span> c&gt;d <span class="keyword">else</span> d</span><br></pre></td></tr></table></figure><p>应该理解为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a <span class="keyword">if</span> a&gt;b <span class="keyword">else</span> ( c <span class="keyword">if</span> c&gt;d <span class="keyword">else</span> d )</span><br></pre></td></tr></table></figure><hr><p>第一部分总结。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;老师突如其来的爬虫测试让人心里倍生无助感，最后虽说用Java勉强完成了测试，但也乱入进了python领域。算了，python现在这么火，早晚得入门，不如就现在吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://iceWind-R.github.io/categories/Python/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="Python" scheme="http://iceWind-R.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础知识（二）</title>
    <link href="http://icewind-r.github.io/2020/03/04/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/04/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-03-04T00:05:15.000Z</published>
    <updated>2020-03-17T05:46:03.402Z</updated>
    
    <content type="html"><![CDATA[<p>继续之前的PHP基础，这次为第二次基础的总结，涉及各种数据类型的介绍等。</p><a id="more"></a><h2 id="一、数据类型介绍"><a href="#一、数据类型介绍" class="headerlink" title="一、数据类型介绍"></a>一、数据类型介绍</h2><h3 id="1-1、整型"><a href="#1-1、整型" class="headerlink" title="1.1、整型"></a>1.1、整型</h3><p><strong>概念</strong>：数据是整数，但根据进制方式不同，有不同的数据格式。</p><ul><li>十进制：默认格式。</li><li>八进制：起始用0作为标识。</li><li>十六进制：起始用0x作为标记。</li><li>二进制起始使用0b作为标记。</li></ul><p>虽说有多种进制表示，但PHP<strong>默认</strong>最终输出都以十进制的标准输出。</p><p>如果想要保证原来的进制输出，就需要使用printf()函数，和C类似，但不会输出前面的进制标志。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$int1 = <span class="number">123</span>;</span><br><span class="line">$int2 = <span class="number">0123</span>;</span><br><span class="line">$int3 = <span class="number">0x123</span>;</span><br><span class="line">$int4 = <span class="number">0b101</span>;</span><br><span class="line">printf(<span class="string">'123的十进制是：%d,83的八进制是：%o,291的十六进制是：%x,5的二进制是：%b'</span>,$int1,$int2,$int3,$int4);</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：整型最大的保存PHP_INT_SIZE,(即8个字节)，最大值为PHP_INT_MAX，最小值-PHP_INT_MAX-1</p><h3 id="2-2、浮点型"><a href="#2-2、浮点型" class="headerlink" title="2.2、浮点型"></a>2.2、浮点型</h3><p>PHP中浮点数的精度是13~14位，PHP7中浮点数的最大值表示：1.8e308</p><p>浮点数采用8个字节存储，存储原理为：符号位+54个数值位+9个指数位</p><p><strong>注意</strong>：0.3与8.1/2.7比较，计算器不会算出相等的结果。</p><h3 id="2-3-布尔类型"><a href="#2-3-布尔类型" class="headerlink" title="2.3 布尔类型"></a>2.3 布尔类型</h3><p><code>$res = true;</code></p><p><code>$res = FALSE</code>  不区分大小写</p><h3 id="2-4-字符串型"><a href="#2-4-字符串型" class="headerlink" title="2.4 字符串型"></a>2.4 字符串型</h3><p><strong>定义方法</strong>：</p><ul><li><p>单引号<code>&#39;&#39;</code>包裹字符</p></li><li><p>双引号<code>&quot;&quot;</code>包裹字符</p></li><li><p>定界符包裹：使用PHP中的定界符&lt;&lt;&lt;标识符+标识符结尾形式包裹(多行字符串的一种形式)</p><ul><li><p>heredoc结构：双引号的一种多行字符串形式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#EOT并非固定，自己取名即可</span></span><br><span class="line">$str = &lt;&lt;&lt;EOT </span><br><span class="line">这里都是字符串</span><br><span class="line">EOT;</span><br></pre></td></tr></table></figure></li><li><p>nowdoc结构：单引号的一种多行字符串形式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#EOT并非固定，自己取名即可</span></span><br><span class="line">$str = &lt;&lt;&lt;<span class="string">'EOT'</span> </span><br><span class="line">这里都是字符串</span><br><span class="line">EOT;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>区别</strong>：</p><ol><li>单引号是简单的字符串，可以解析少量转义字符：单引号(\‘)，反斜杠(\\)。</li><li>双引号功能较多：<ul><li>里面能解释较多转义符：$符号:(\$)，双引号:(\“)，反斜杠:(\\)，回车换行符:(\r\n)，TAB符:(\t)</li><li>里面如果有PHP变量，也可以被解析</li></ul></li><li>定界符中heredoc与双引号效果一致，nowdoc与单引号效果一致，唯一区别：定界符会自动保留格式：即字符串内部有换行符等自动保留。</li></ol><p><strong>注意</strong>：</p><ol><li>双引号解析变量时，系统是有规矩匹配变量的。<ul><li>变量名不要与其他字符或者数字保留在一起：”$abc”系统会自动识别为$abc，而不是$a。<ul><li>解决方案1：让变量与后面的内容之间有空格，如”$a bc”，系统则会识别为$a，但是多了一个空格。</li><li>解决方案2：使用{}将变量独立包裹起来，如${a}bc，建议使用。</li></ul></li></ul></li><li>使用定界符定义多行字符串时的规矩：<ul><li>定界符内的所有内容（包括注释）都是字符串的内容。</li><li>定界符的起始符号之后，结束符号之后不能有任何信息（包括空格，注释）。</li><li>结束符必须顶格。</li></ul></li></ol><h3 id="6-6-数组类型"><a href="#6-6-数组类型" class="headerlink" title="6.6 数组类型"></a>6.6 数组类型</h3><h4 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h4><p>数组是多个元素的序列集合</p><ul><li>数组由元素组成</li><li>数组由下标key和Value组成（键值对）<ul><li>如果元素下标都是数字：索引数组</li><li>如果元素下标都是字符串：关联数组</li><li>既有数字又有字符串：混合数组</li></ul></li><li>数组元素访问通过下标实现</li><li>数组通常用来保存一组相关的数据，而不是随意搭配</li></ul><h4 id="二、使用步骤"><a href="#二、使用步骤" class="headerlink" title="二、使用步骤"></a>二、使用步骤</h4><p><strong>1、定义数组</strong></p><ul><li>空数组：值为array()或者[]</li><li>非空多元素数组：[‘张三’,’男’,30]</li><li>指定下标数组：[‘name’=&gt;’张三’,’gender’=&gt;’男’,’age’=&gt;30]</li></ul><p><strong>2、添加元素</strong></p><ul><li>使用保存数组的变量后加上[]，表示一个系统自动指定下标，然后等于某个值。</li><li>指定下标[index]，可以是字符串。</li></ul><p><strong>3、访问元素</strong></p><ul><li>指定元素下标</li><li>直接使用，表示访问整个数组，但不能用echo输出，数组结构复杂。</li></ul><p><strong>4、修改元素</strong></p><ul><li>通过下标修改即可。</li></ul><p><strong>5、删除元素</strong></p><ul><li>使用unset()，然后指定数组变量加上[1]，删除指定下标；或删除整个数组。</li></ul><h4 id="三、注意"><a href="#三、注意" class="headerlink" title="三、注意"></a>三、注意</h4><p>1、索引数组（纯数字下标）添加元素，默认以当前元素的最大下标开始自动加1.</p><p>2、索引数组通常都不会刻意指定下标（从0开始自增长）</p><p>3、PHP数组特点</p><ul><li>数组元素没有数量限制，数组不限定长度</li><li>数组可以动态增加元素</li><li>元素的值可以是任何数据类型</li></ul><h4 id="四、二维数组"><a href="#四、二维数组" class="headerlink" title="四、二维数组"></a>四、二维数组</h4><p><strong>概念</strong>：数组中的元素本身也是一个数组。</p><ul><li>二维数组的元素都是一个一维数组。</li><li>二维数组的第一维下标通常是索引，第二维是关联。</li></ul><p><strong>定义步骤</strong>：</p><p>1、定义一维数组，保存到变量。</p><p>2、定义一个新数组，将原来的数组保存到新数组元素中。</p><p>3、数组访问先通过一维下标找到对应的元素，然后通过二维下标找到更深的元素。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义一维数组</span></span><br><span class="line">$p1 = <span class="keyword">array</span>(<span class="string">'name'</span> =&gt; <span class="string">'鸣人'</span>,<span class="string">'skill'</span> =&gt; <span class="string">'影分身'</span>);</span><br><span class="line">$p2 = <span class="keyword">array</span>(<span class="string">'name'</span> =&gt; <span class="string">'佐助'</span>,<span class="string">'skill'</span> =&gt; <span class="string">'千鸟'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义二维数组</span></span><br><span class="line">$p = <span class="keyword">array</span>($p1,$p2);</span><br><span class="line"></span><br><span class="line"><span class="comment">#访问元素：通常是访问二维元素</span></span><br><span class="line"><span class="comment">#获取第一元素的名字</span></span><br><span class="line"><span class="keyword">echo</span> $p[<span class="number">0</span>][<span class="string">'name'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">#追加一个数组元素</span></span><br><span class="line">$p[] = <span class="keyword">array</span>(<span class="string">'name'</span> =&gt; <span class="string">'小樱'</span>,<span class="string">'skill'</span> =&gt; <span class="string">'治疗术'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续之前的PHP基础，这次为第二次基础的总结，涉及各种数据类型的介绍等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>We Are All Fighters</title>
    <link href="http://icewind-r.github.io/2020/03/03/We-Are-All-Fighters/"/>
    <id>http://icewind-r.github.io/2020/03/03/We-Are-All-Fighters/</id>
    <published>2020-03-03T01:16:31.000Z</published>
    <updated>2020-03-03T05:38:19.811Z</updated>
    
    <content type="html"><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=90376384&cid=154346256&page=1" width="100%" height="450" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>​          <p align="right"> <b>  ————To the battle we are fighting</b></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe src=&quot;//player.bilibili.com/player.html?aid=90376384&amp;cid=154346256&amp;page=1&quot; width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameb
      
    
    </summary>
    
    
      <category term="video" scheme="http://iceWind-R.github.io/categories/video/"/>
    
    
      <category term="epidemic" scheme="http://iceWind-R.github.io/tags/epidemic/"/>
    
  </entry>
  
  <entry>
    <title>云服务器Ubuntu的搭建</title>
    <link href="http://icewind-r.github.io/2020/03/01/web%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://icewind-r.github.io/2020/03/01/web%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-03-01T09:22:28.000Z</published>
    <updated>2020-03-17T05:46:54.583Z</updated>
    
    <content type="html"><![CDATA[<p>主要是总结这次搭建云服务器时的配置操作。</p><a id="more"></a><p>执行下列命令：</p><p>1、<code>sudo apt-get update</code></p><p>2、<code>apt-get install openssh-server</code></p><p>3、<code>apt-get install default-jre</code></p><p>4、<code>apt-get install default-jdk</code></p><p>5、<code>cd /usr/local</code>该目录下一般装一些自己的软件</p><p>6、<code>wget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.31/bin/apache-tomcat-9.0.31.tar.gz</code>   wget一般用于下载一些网络地址的资源（此处资源为Tomcat9）</p><p>7、<code>ll -s</code>  查看当前文件夹的内容</p><img src="/2020/03/01/web%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class><p>如图，蓝色代表文件夹，红色表示压缩包，浅蓝色代表快捷方式。</p><p>8、<code>tar -zxvf apache-tomcat-9.0.31.tar.gz</code> 进行解压缩</p><p>9、进入到apache的bin目录下，利用命令<code>./startup.sh</code> 启动。</p><p>10、<code>./shutdown.sh</code> 停止服务。</p><p>11、<code>cd ..   cd conf</code>进入conf目录，然后``vi server.xml<code>，使用</code>i` 命令进行编辑。</p><p>将端口改为80，保存退出。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要是总结这次搭建云服务器时的配置操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="云服务器" scheme="http://iceWind-R.github.io/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="http://iceWind-R.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础知识（一）</title>
    <link href="http://icewind-r.github.io/2020/02/29/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/02/29/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-02-29T06:30:25.000Z</published>
    <updated>2020-03-17T05:46:15.608Z</updated>
    
    <content type="html"><![CDATA[<p>PHP的入门总结，主要是PHP的基础方面。非常基础，适合入门学习。</p><a id="more"></a><h2 id="一、PHP语法规则"><a href="#一、PHP语法规则" class="headerlink" title="一、PHP语法规则"></a>一、PHP语法规则</h2><h3 id="1、PHP标记"><a href="#1、PHP标记" class="headerlink" title="1、PHP标记"></a>1、PHP标记</h3><p>PHP标记是用来帮助PHP引擎识别PHP代码的，PHP标记分为两个部分。</p><ul><li>标记开始：&lt;?php</li><li>标记结束：?&gt;</li></ul><p>在两个标记中间添加php代码，如果该文件是php文件，则建议不写结束标记  ?&gt; 。</p><h3 id="2、PHP注释"><a href="#2、PHP注释" class="headerlink" title="2、PHP注释"></a>2、PHP注释</h3><p>行注释：#或//</p><p>块注释：/*   */</p><h3 id="3、语句结束符"><a href="#3、语句结束符" class="headerlink" title="3、语句结束符"></a>3、语句结束符</h3><p>每个语句以英文分号 ; 作为结束标志。</p><h2 id="二、PHP基础知识"><a href="#二、PHP基础知识" class="headerlink" title="二、PHP基础知识"></a>二、PHP基础知识</h2><h3 id="1、变量"><a href="#1、变量" class="headerlink" title="1、变量"></a>1、变量</h3><p><strong>PHP变量</strong>：一种能够存储数据的符号，值可以改变。</p><ul><li>所有变量都是以<code>$</code>符号开始。</li><li>变量所保存的数据都可以随意改变。</li><li>变量必须先定义才能使用，否则报错。</li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">$num = <span class="number">10</span>;</span><br><span class="line"><span class="comment"># 修改变量</span></span><br><span class="line">$num = <span class="string">"hello world!"</span>;</span><br><span class="line"><span class="comment"># 打印变量</span></span><br><span class="line"><span class="keyword">echo</span> $sum;</span><br><span class="line"><span class="comment"># 删除变量</span></span><br><span class="line"><span class="keyword">unset</span>($num);</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>变量名区分大小写。</p></li><li><p>先定义再访问。</p></li><li><p>PHP是一种弱类型语音，可以存储任何数据。</p></li></ul><h3 id="2、预定义变量"><a href="#2、预定义变量" class="headerlink" title="2、预定义变量"></a>2、预定义变量</h3><p><strong>概念</strong>：PHP系统内部定义的变量，也是PHP系统自动收集的结果。</p><ul><li><p>预定义变量也是变量，符合变量规则</p></li><li><p>预定义变量都是数组</p></li><li><p>系统提供了九个预定义变量，每个变量都有自己特定的数据。</p><ul><li>$_GET：用户通过get方式提交的数据。</li><li>$_POST：用户通过post方式提交的数据。</li><li>$_REQUEST：用户通过get和post方式提交的数据。</li><li>$_SERVER：用户和服务器的基本信息数据（数据的名字不由开发者控制，系统定义好）</li><li>$_FILES：用户提交的文件数据，(文件上传 )。</li><li>$_SESSION： session数据。</li><li>$_COOKIE： cookie数据。</li><li>$GLOBALS：所有全局变量，也是唯一一个不是以下划线开始的预定义变量。</li><li>$_ENV：环境数据。</li></ul><p>举例：打印 $_SERVER 预定义变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预定义变量</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;<span class="comment">//&lt;pre&gt; HTML标签</span></span><br><span class="line">print_r($_SERVER);<span class="comment">//打印的有一定规则</span></span><br></pre></td></tr></table></figure><p>可以查看该常量下的一些内容：</p><p>如果要获取预定义变量中某个键值，可以 <code>$变量名[&#39;键名&#39;]</code>，以$_SERVER为例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印$_SERVER的REMOTE_ADDR属性</span></span><br><span class="line"><span class="keyword">echo</span> $_SERVER[<span class="string">'REMOTE_ADDR'</span>]</span><br></pre></td></tr></table></figure></li></ul><p><strong>小结</strong>：</p><ol><li>预定义变量是PHP系统保存的一些常用变量，方便开发者使用</li><li>预定义变量都是数组，需要以数组方式使用</li></ol><h3 id="3、变量传值"><a href="#3、变量传值" class="headerlink" title="3、变量传值"></a>3、变量传值</h3><p>分为两种，值传递和引用传递（和C类似）。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#值传递</span></span><br><span class="line">$a = <span class="number">10</span>;</span><br><span class="line">$b = $a;<span class="comment">//将$a的值10取出后赋给$b</span></span><br><span class="line"><span class="comment">#引用传递</span></span><br><span class="line">$c = <span class="number">5</span>;</span><br><span class="line">$d = &amp;$c;<span class="comment">//将$c的值的内存地址取出，赋值给$d，也为5</span></span><br></pre></td></tr></table></figure><h3 id="4、常量"><a href="#4、常量" class="headerlink" title="4、常量"></a>4、常量</h3><p><strong>概念</strong>：一种能够存储数据的符号，值不可以改变。</p><p><strong>定义变量</strong></p><ul><li>使用函数：define(‘常量名’,常量值);</li><li>使用关键字：const 常量名 = 常量值；</li></ul><p><strong>访问常量</strong></p><ul><li>直接访问：常量名</li><li>使用函数：constant(“常量名”);</li></ul><p><strong>示例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义</span></span><br><span class="line">define(<span class="string">'VERSION'</span>,<span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">const</span> PI = <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">#访问</span></span><br><span class="line"><span class="keyword">echo</span> PI;</span><br><span class="line"><span class="keyword">echo</span> constant(<span class="string">'VERSION'</span>);</span><br></pre></td></tr></table></figure><p><strong>扩展</strong></p><p>PHP7以后允许定义数组常量（一次性定义多个常量），访问时使用数组下标访问。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MATH = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'PI'</span> =&gt;<span class="number">3.14</span>,</span><br><span class="line">    <span class="string">'E'</span> =&gt;<span class="number">2.72</span></span><br><span class="line">);<span class="comment">//定义</span></span><br><span class="line"><span class="keyword">echo</span> MATH[<span class="string">'PI'</span>];<span class="comment">//访问</span></span><br></pre></td></tr></table></figure><h3 id="5、系统常量"><a href="#5、系统常量" class="headerlink" title="5、系统常量"></a>5、系统常量</h3><p><strong>概念</strong>：系统内部定义的常量，用户可以直接访问，也只能访问。</p><ul><li>固定系统常量：值是固定的</li><li>魔术常量：值可以改变（性质确定，可以改变指的是改值在不同的情况场景下又不同的值）</li></ul><p><strong>固定系统常量</strong></p><ul><li>PHP_VERSION：PHP版本号</li><li>PHP_INT_SIZE：PHP中整数所占用的字符数。</li><li>PHP_INT_MAX：PHP中整数能表示的最大值。</li></ul><p><strong>魔术常量</strong></p><p>以双下划线开始，双下划线结束</p><ul><li>__DIR__：当前运行文件所在的绝对路径。</li><li>__FILE__：当前运行文件的绝对路径。</li><li>__LINE__：当前代码所在的行号。</li><li>__FUCTION__：函数内部使用，表示当前函数的名字。</li><li>__CLASS__：类的内部方法里使用，表示当前类名。</li><li>__METHOD__：类内部方法里使用，表示当前方法的名字（带类名）。</li><li>__NAMESPACE__：当前所属的命名空间。</li></ul><h3 id="6、数据类型"><a href="#6、数据类型" class="headerlink" title="6、数据类型"></a>6、数据类型</h3><ul><li><p>基本数据类型：整型（int/integer），浮点型（float），布尔型（bool/boolean），字符串型（string）。</p></li><li><p>复合数据类型：数组型（array），对象型（object）。</p></li><li><p>特殊数据类型：资源型（resource，数据库资源/文件资源），空型（null）。</p></li></ul><p><strong>提示</strong>：可用var_dump()查看变量的详细情况</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP的入门总结，主要是PHP的基础方面。非常基础，适合入门学习。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>A little idea</title>
    <link href="http://icewind-r.github.io/2020/02/28/A-little-idea/"/>
    <id>http://icewind-r.github.io/2020/02/28/A-little-idea/</id>
    <published>2020-02-28T13:33:16.000Z</published>
    <updated>2020-03-02T12:02:41.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020-1-31"><a href="#2020-1-31" class="headerlink" title="2020.1.31"></a>2020.1.31</h2><a id="more"></a><p>转眼间2020已过去一个月的时间，这一个月显然并不平静，国外各种不和谐的事件发生，我们的篮球偶像科比逝世，当然，还有形势日趋严重的新型冠状病毒疫情。希望一切都能再回到正常的轨道上去吧。</p><blockquote><p>愿安好。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2020-1-31&quot;&gt;&lt;a href=&quot;#2020-1-31&quot; class=&quot;headerlink&quot; title=&quot;2020.1.31&quot;&gt;&lt;/a&gt;2020.1.31&lt;/h2&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>最爱的BGM</title>
    <link href="http://icewind-r.github.io/2020/02/28/%E6%9C%80%E7%88%B1%E7%9A%84BGM/"/>
    <id>http://icewind-r.github.io/2020/02/28/%E6%9C%80%E7%88%B1%E7%9A%84BGM/</id>
    <published>2020-02-28T13:31:53.000Z</published>
    <updated>2020-02-29T07:40:25.913Z</updated>
    
    <content type="html"><![CDATA[<p>44首BGM，请君欣赏。</p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="//music.163.com/outchain/player?type=0&id=3222803102&auto=1&height=430"></iframe>[网易云歌单链接]: https://music.163.com/#/playlist?id=3222803102&amp;userid=42466756]]></content>
    
    <summary type="html">
    
      &lt;p&gt;44首BGM，请君欣赏。&lt;/p&gt;
    
    </summary>
    
    
      <category term="娱乐" scheme="http://iceWind-R.github.io/categories/%E5%A8%B1%E4%B9%90/"/>
    
    
      <category term="music" scheme="http://iceWind-R.github.io/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>Android_UI</title>
    <link href="http://icewind-r.github.io/2020/02/28/Android-UI/"/>
    <id>http://icewind-r.github.io/2020/02/28/Android-UI/</id>
    <published>2020-02-28T13:30:04.000Z</published>
    <updated>2020-03-17T05:44:00.752Z</updated>
    
    <content type="html"><![CDATA[<p>Android UI的知识点总结，初入Android，做些总结。</p><a id="more"></a><p>现在学习主要是跟着视频教程边看边学，现将学习到的零星知识点总结如下：</p><p>Android 系统中的所有 UI 类都是建立在 View 和 ViewGroup 两个类的基础之上的，所有 View 的子类称为 Widget，所有 ViewGroup 的子类称为 Layout。其中 ViewGroup 是 View 的子类。</p><p>View 是所有 UI 组件的基类，基本上所有的高级 UI 组件都是继承 View 类实现的，如 TextView（文本框）、Button、List、EditText（编辑框）、Checkbox 等。一个 View 在屏幕占据一块矩形区域，负责渲染这块矩形区域，也可以处理这块矩形区域发生的事件，并可以设置该区域是否可见以及获取焦点等。</p><p>ViewGroup 是容纳这些组件的容器，其本身也是从 View 中派生出来的，它继承于 Android.view.View，功能就是装载和管理下一层的 View 对象或 ViewGroup 对象，也就是说它是一个容纳其他元素的容器，负责对添加进来的 View 和 ViewGroup 进行管理和布局。</p><p><strong>Android常用的UI组件：<a href="https://blog.csdn.net/m0_37597069/article/details/70196271" target="_blank" rel="noopener">参见链接</a></strong></p><p>首先有一些属性是通用的：</p><p>id=”@+id/name”创建一个id 引用时：”@id/name”</p><p>orientation  水平方向或垂直方向</p><p>margin：外边距</p><p>padding：内边距</p><p>gravity：位置管理</p><h3 id="一、布局管理"><a href="#一、布局管理" class="headerlink" title="一、布局管理"></a>一、布局管理</h3><p>Android SDK 定义了多种布局方式以方便用户设计 UI。各种布局方式均为 ViewGroup 类的子类。</p><img src="/2020/02/28/Android-UI/0.png" class><p>主要学习的是两种最常用的布局，是线性布局（LinearLayout）和相对布局（RelativeLayout）。</p><p><strong>1、线性布局（LinearLayout）</strong></p><p>LinearLayout 又称线性布局，该布局应该是 Android 视图设计中最经常使用的布局。该布局可以使放入其中的组件以水平方式或者垂直方式整齐排列，通过 android:orientation 属性指定具体的排列方式，通过 weight 属性设置每个组件在布局中所占的比重。</p><p>其中weight属性需要特别注意：weight代表的是权值，但此权值的分配是指剩余的空间（未被元素使用的空间按照权值比例分配），需要理解掌握。</p><p><strong>2、相对布局（RelativeLayout）</strong></p><p>RelativeLayout 又称相对布局。从名称上可以看出，这种布局方式是以一种让组件以相对于容器或者相对于容器中的另一个组件的相对位置进行放置的布局方式。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>android:layout_above=”@id/xxx”</td><td>将控件置于给定 ID 控件之上</td></tr><tr><td>android:layout_below=”@id/xxx”</td><td>将控件置于给定 ID 控件之下</td></tr><tr><td>android:layout_toLeftOf=”@id/xxx”</td><td>将控件的右边缘和给定 ID 控件的左边缘对齐</td></tr><tr><td>android:layout_toRightOf=”@id/xxx”</td><td>将控件的左边缘和给定 ID 控件的右边缘对齐</td></tr><tr><td>android:layout_alignBaseline=”@id/xxx”</td><td>将控件的 baseline 与给定 ID 的 baseline 对齐</td></tr><tr><td>android:layout_alignTop=”@id/xxx”</td><td>将控件的上边缘和给定 ID 控件的上边缘对齐</td></tr><tr><td>android:layout_alignBottom=”@id/xxx”</td><td>将控件的底边缘和给定 ID 控件的底边缘对齐</td></tr><tr><td>android:layout_alignLeft=”@id/xxx”</td><td>将控件的左边缘和给定 ID 控件的左边缘对齐</td></tr><tr><td>android:layout_alignRight=”@id/xxx”</td><td>将控件的右边缘和给定 ID 控件的右边缘对齐</td></tr><tr><td>android:layout_alignParentLeft=”true”</td><td>将控件的左边缘和父控件的左边缘对齐</td></tr><tr><td>android:layout_alignParentTop=”true”</td><td>将控件的上边缘和父控件的上边缘对齐</td></tr><tr><td>android:layout_alignParentRight=”true”</td><td>将控件的右边缘和父控件的右边缘对齐</td></tr><tr><td>android:layout_alignParentBottom=”true”</td><td>将控件的底边缘和父控件的底边缘对齐</td></tr><tr><td>android:layout_centerInParent=”true”</td><td>将控件置于父控件的中心位置</td></tr><tr><td>android:layout_centerHorizontal=”true”</td><td>将控件置于水平方向的中心位置</td></tr><tr><td>android:layout_centerVertical=”true”</td><td>将控件置于垂直方向的中心位置</td></tr></tbody></table><h3 id="二、TextView（文本框）"><a href="#二、TextView（文本框）" class="headerlink" title="二、TextView（文本框）"></a>二、TextView（文本框）</h3><p>设置文本框的最大行数（当然还有其他设置最大）：android:maxLines=”1”<br>设置文本显示方式：<br>end表示显示不完省略号：android:ellipsize=”end”<br>marquee表示显示不完播放：android:ellipsize=”marquee”<br>再加上这样几行可以循环播放<br>android:marqueeRepeatLimit=”marquee_forever”<br>android:focusable=”true”<br>android:focusableInTouchMode=”true”<br>添加图片，调整图片边距等<br>android:drawableRight=”@drawable/name”//表示在文本右边添加图片<br>android:drawablePadding=”5dp”</p><h3 id="三、Button（按钮）"><a href="#三、Button（按钮）" class="headerlink" title="三、Button（按钮）"></a>三、Button（按钮）</h3><p>按钮学习的重点在改变按钮的样式和添加点击事件。</p><p>改变样式主要是将按钮改为圆角，更加美观。</p><p>可在drawable目录下新建xml文件修改。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"#FF9900"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"5dp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再在要设置的按钮添加背景属性，设置为此xml文件即可。</p><p>同样可以设置很多效果，比如未点击和点击的不同颜色区分。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#CC7A00"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dp"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#FF9900"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dp"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再就是添加点击事件，为普通按钮添加单击事件监听器。两种方式：</p><p>1、匿名内部类作为单击事件监听器，这里添加内容为显示被点击的按钮内容。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按钮3的点击事件</span></span><br><span class="line">mBtn3.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(ButtonActivity.<span class="keyword">this</span>,<span class="string">"btn3我被点击了"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2、通过onClick属性实现</p><p>① 在Activity中编写一个包含View类型参数的方法。　　public void myClick(View view){}</p><p>② 将android:onClick属性指定为 ① 内的方法名。　　　android:onClick=”myClick”</p><p><strong>扩展 ：ImageButton图片按钮</strong></p><p>通过src属性指定</p><h3 id="四、EditText（编辑框）"><a href="#四、EditText（编辑框）" class="headerlink" title="四、EditText（编辑框）"></a>四、EditText（编辑框）</h3><p><strong>属性</strong></p><p>android:hint=”请输入用户名”  ：输入框提示信息</p><p>android:inputType=”number”：规定输入格式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">android:inputType=<span class="string">"none"</span><span class="comment">//输入普通字符</span></span><br><span class="line">android:inputType=<span class="string">"text"</span><span class="comment">//输入普通字符</span></span><br><span class="line">android:inputType=<span class="string">"textCapCharacters"</span><span class="comment">//输入普通字符</span></span><br><span class="line">android:inputType=<span class="string">"textCapWords"</span><span class="comment">//单词首字母大小</span></span><br><span class="line">android:inputType=<span class="string">"textCapSentences"</span><span class="comment">//仅第一个字母大小</span></span><br><span class="line">android:inputType=<span class="string">"textAutoCorrect"</span><span class="comment">//前两个自动完成</span></span><br><span class="line">android:inputType=<span class="string">"textAutoComplete"</span><span class="comment">//前两个自动完成</span></span><br><span class="line">android:inputType=<span class="string">"textMultiLine"</span><span class="comment">//多行输入</span></span><br><span class="line">android:inputType=<span class="string">"textImeMultiLine"</span><span class="comment">//输入法多行（不一定支持）</span></span><br><span class="line">android:inputType=<span class="string">"textNoSuggestions"</span><span class="comment">//不提示</span></span><br><span class="line">android:inputType=<span class="string">"textUri"</span><span class="comment">//URI格式</span></span><br><span class="line">android:inputType=<span class="string">"textEmailAddress"</span><span class="comment">//电子邮件地址格式</span></span><br><span class="line">android:inputType=<span class="string">"textEmailSubject"</span><span class="comment">//邮件主题格式</span></span><br><span class="line">android:inputType=<span class="string">"textShortMessage"</span><span class="comment">//短消息格式</span></span><br><span class="line">android:inputType=<span class="string">"textLongMessage"</span><span class="comment">//长消息格式</span></span><br><span class="line">android:inputType=<span class="string">"textPersonName"</span><span class="comment">//人名格式</span></span><br><span class="line">android:inputType=<span class="string">"textPostalAddress"</span><span class="comment">//邮政格式</span></span><br><span class="line">android:inputType=<span class="string">"textPassword"</span><span class="comment">//密码格式</span></span><br><span class="line">android:inputType=<span class="string">"textVisiblePassword"</span><span class="comment">//密码可见格式</span></span><br><span class="line">android:inputType=<span class="string">"textWebEditText"</span><span class="comment">//作为网页表单的文本格式</span></span><br><span class="line">android:inputType=<span class="string">"textFilter"</span><span class="comment">//文本筛选格式</span></span><br><span class="line">android:inputType=<span class="string">"textPhonetic"</span><span class="comment">//拼音输入格式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数值类型</span></span><br><span class="line">android:inputType=<span class="string">"number"</span><span class="comment">//数字格式</span></span><br><span class="line">android:inputType=<span class="string">"numberSigned"</span><span class="comment">//有符号数字格式</span></span><br><span class="line">android:inputType=<span class="string">"numberDecimal"</span><span class="comment">//可以带小数点的浮点格式</span></span><br><span class="line">android:inputType=<span class="string">"phone"</span><span class="comment">//拨号键盘</span></span><br><span class="line">android:inputType=<span class="string">"datetime"</span><span class="comment">//日期+时间格式</span></span><br><span class="line">android:inputType=<span class="string">"date"</span><span class="comment">//日期键盘</span></span><br><span class="line">android:inputType=<span class="string">"time"</span><span class="comment">//时间键盘</span></span><br><span class="line">转自CSDN：原文链接：https:<span class="comment">//blog.csdn.net/zhangphil/article/details/79970667</span></span><br></pre></td></tr></table></figure><p>同样也可在编辑框里添加图片等操作，android:drawableLeft=”@drawable/name”  。（与android:drawableStart相同）</p><p>同理：android:drawableBottom,android:drawableRight(android:drawableEnd)</p><p>android:drawablePadding:内边距</p><p>android:lines：限制行数，超出时向上滚动。</p><p>getText():获取编辑框内容</p><h3 id="五、RadioButton（单选框）"><a href="#五、RadioButton（单选框）" class="headerlink" title="五、RadioButton（单选框）"></a>五、RadioButton（单选框）</h3><p>RadioGroup 为单项选择按钮组，其中可以包含多个 RadioButton，即单选按钮，它们共同为用户提供一种多选一的选择方式。在多个 RadioButton 被同一个 RadioGroup 包含的情况下，多个 RadioButton 之间自动形成互斥关系，仅有一个可以被选择。</p><p>基本格式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">RadioButton</span>/&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">RadioButton</span>/&gt;</span></span><br><span class="line">　　.....</span><br><span class="line"><span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br></pre></td></tr></table></figure><p>RadioGroup中也有orientation属性，即选择水平或竖直方向排列RadioButton。</p><p>RadioButton中的属性：</p><p>按钮名称：android:text=”name”</p><p>表示被默认选中的选项：android:checked=”true”<br>设置按钮形状：android:button=”@null”（表示不设置）</p><p><strong>可以自定义按钮选中时的样式：</strong></p><p>同样在drawable目录下新建xml文件修改。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_checked</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#CC7A00"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dp"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_checked</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:width</span>=<span class="string">"1dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:color</span>=<span class="string">"#CC7A00"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dp"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中state_checked表示是否选中的状态</p><p> 效果：</p><img src="/2020/02/28/Android-UI/1.png" class><p>这种效果时通过背景实现不同的状态表示。</p><h4 id="添加选中事件获取选中的内容。"><a href="#添加选中事件获取选中的内容。" class="headerlink" title="添加选中事件获取选中的内容。"></a>添加选中事件获取选中的内容。</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取单选按钮组RadioGroup mRg1，设置选中监听事件</span></span><br><span class="line">mRg1.setOnCheckedChangeListener(<span class="keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup group, <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//根据选中的checkedId值获取内容</span></span><br><span class="line">        RadioButton radioButton = group.findViewById(checkedId);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        Toast.makeText(RadioButtonActivity.<span class="keyword">this</span>,radioButton.getText(),Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="六、CheckBox（多选框）"><a href="#六、CheckBox（多选框）" class="headerlink" title="六、CheckBox（多选框）"></a>六、CheckBox（多选框）</h3><p>大致与单选相同，介绍另一种通过自定义改变按钮形状实现按钮样式。</p><p>这里将  android:button=”@drawable/bg_checkbox” 设置为自定义的。bg_checkbox同样新建的xml文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:state_checked</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawable</span>=<span class="string">"@drawable/face"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:state_checked</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawable</span>=<span class="string">"@drawable/selection"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="七、ImageView（图片视图）"><a href="#七、ImageView（图片视图）" class="headerlink" title="七、ImageView（图片视图）"></a>七、ImageView（图片视图）</h3><p><strong>1、介绍属性</strong></p><p>background为背景，src为内容。</p><p>scaleType：覆盖方式，常见属性值有：</p><p>　　fixXY：撑满控件，宽高比可能发生改变。</p><p>　　fitCenter：保持宽高比缩放，直至能够完全显示。</p><p>　　centerCrop：保持宽高比缩放，直至能够完全覆盖控件，剪裁显示。</p><p><strong>2、加载网络图片</strong></p><p>首先使用第三方的库，这里选择的是Github上的glide库</p><p> <a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">https://github.com/bumptech/glide</a></p><img src="/2020/02/28/Android-UI/2.png" class><p>将其添加到Android Studio中的build.gradle目录下。</p><img src="/2020/02/28/Android-UI/3.png" class><p> 同步好后在activity的Java代码部分添加代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_image_view);</span><br><span class="line">    mIv2 = findViewById(R.id.iv_2);</span><br><span class="line">    <span class="comment">//加载一张网络图片</span></span><br><span class="line">    Glide.with(<span class="keyword">this</span>).load(<span class="string">"http://i1.sinaimg.cn/ent/d/2008-06-04/U105P28T3D2048907F326DT20080604225106.jpg"</span>).into(mIv2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时需要在AndroidManifest.xml中声明使用网络权限。</p><p>添加一行代码： <uses-permission android:name="android.permission.INTERNET"> 即可。</uses-permission></p><h3 id="八、日期选择器，时间选择器，计时器"><a href="#八、日期选择器，时间选择器，计时器" class="headerlink" title="八、日期选择器，时间选择器，计时器"></a>八、日期选择器，时间选择器，计时器</h3><h4 id="1、DatePicker（日期选择器）"><a href="#1、DatePicker（日期选择器）" class="headerlink" title="1、DatePicker（日期选择器）"></a>1、DatePicker（日期选择器）</h4><p>即可显示日期，可以添加事件接收选择的日期。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> year,month,day;</span><br><span class="line">DatePicker datePicker;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_date_pcker);</span><br><span class="line">    <span class="comment">//日期选择器的id为datepicker</span></span><br><span class="line">    datePicker = findViewById(R.id.datepicker);</span><br><span class="line">    Calendar calendar = Calendar.getInstance();</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    year = calendar.get(calendar.YEAR);</span><br><span class="line">    month = calendar.get(calendar.MONTH);</span><br><span class="line">    day = calendar.get(calendar.DAY_OF_MONTH);</span><br><span class="line">    <span class="comment">//添加选择事件</span></span><br><span class="line">    datePicker.init(year, month, day, <span class="keyword">new</span> DatePicker.OnDateChangedListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDateChanged</span><span class="params">(DatePicker view, <span class="keyword">int</span> year, <span class="keyword">int</span> monthOfYear, <span class="keyword">int</span> dayOfMonth)</span> </span>&#123;</span><br><span class="line">            DatePickerActivity.<span class="keyword">this</span>.year = year;</span><br><span class="line">            DatePickerActivity.<span class="keyword">this</span>.month = monthOfYear;</span><br><span class="line">            DatePickerActivity.<span class="keyword">this</span>.day = dayOfMonth;</span><br><span class="line">            show(year,month,day);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> month,<span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">    String str = year+<span class="string">"年"</span>+(month+<span class="number">1</span>)+<span class="string">"月"</span>+day+<span class="string">"日"</span>;</span><br><span class="line">    Toast.makeText(DatePickerActivity.<span class="keyword">this</span>,str,Toast.LENGTH_SHORT).show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、TimePicker（时间选择器）"><a href="#2、TimePicker（时间选择器）" class="headerlink" title="2、TimePicker（时间选择器）"></a>2、TimePicker（时间选择器）</h4><p>显示时间，添加一个监听器。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//timepicker为时间选择器的id</span></span><br><span class="line">TimePicker tp = findViewById(R.id.timepicker);</span><br><span class="line">tp.setIs24HourView(<span class="keyword">true</span>);<span class="comment">//采用24小时支持</span></span><br><span class="line"><span class="comment">//时间改变的监听器</span></span><br><span class="line">tp.setOnTimeChangedListener(<span class="keyword">new</span> TimePicker.OnTimeChangedListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTimeChanged</span><span class="params">(TimePicker view, <span class="keyword">int</span> hourOfDay, <span class="keyword">int</span> minute)</span> </span>&#123;</span><br><span class="line">        String str = hourOfDay+<span class="string">"时"</span>+minute+<span class="string">"分"</span>;</span><br><span class="line">        Toast.makeText(TimePickerActivity.<span class="keyword">this</span>,str,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="3、Chronometer（计时器）"><a href="#3、Chronometer（计时器）" class="headerlink" title="3、Chronometer（计时器）"></a>3、Chronometer（计时器）</h4><p>属性通常设置 android:format=”已用时间：%s” 表示用时分秒的格式计时。</p><p>并通常需要为计时器设定四个方法。</p><p>① setBase()：设置计时器的起始时间</p><p>② setFormat()：设置显示时间的格式</p><p>③ start()：指定开始计时</p><p>④ stop()：指定结束计时</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Chronometer ch ;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_chronometer);</span><br><span class="line">    ch = findViewById(R.id.chromometer);</span><br><span class="line">    <span class="comment">//获取当前的系统时间</span></span><br><span class="line">    ch.setBase(SystemClock.elapsedRealtime());</span><br><span class="line">    <span class="comment">//设置时间格式</span></span><br><span class="line">    ch.setFormat(<span class="string">"%s"</span>);</span><br><span class="line">    <span class="comment">//开启计时器</span></span><br><span class="line">    ch.start();</span><br><span class="line">    <span class="comment">//添加监听器，计时器改变时触发</span></span><br><span class="line">    ch.setOnChronometerTickListener(<span class="keyword">new</span> Chronometer.OnChronometerTickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChronometerTick</span><span class="params">(Chronometer chronometer)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(SystemClock.elapsedRealtime()-ch.getBase()&gt;=<span class="number">60000</span>)&#123;<span class="comment">//如果大于60s，停止计时</span></span><br><span class="line">                ch.stop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>综上，第一部分总结。</p><hr><p>以下为第二部分总结。</p><h3 id="一、ProgressBar（进度条）"><a href="#一、ProgressBar（进度条）" class="headerlink" title="一、ProgressBar（进度条）"></a>一、ProgressBar（进度条）</h3><p>进度条有两种形式，圆形加载式和水平长条形状，可通过style属性设置（注意：前面没有android:）</p><p>列举几种：</p><p>　　?android:attr/progressBarStyleHorizontal　　　　细水平长度进度条</p><p>　　?android:attr/progressBarStyleSmall　　　　　　旋转画面的小圆形进度条</p><p>　　?android:attr/progressBarStyleLarge　　　　　　旋转画面的大圆形进度条</p><p>　　@android:style/Widget.ProgressBar.Horizontal　　粗水平长度进度条</p><p>　　@android:style/Widget.ProgressBar.Small　　　　旋转画面的小圆形进度条</p><p>　　@android:style/Widget.ProgressBar.Large　　　　旋转画面的大圆形进度条</p><p>android:max=”100” 　　　 　该属性设置进程的最大值<br>android:progress=”50”　　　表示初始的进程值</p><p><strong>实现动态进度条步骤：</strong></p><p>创建线程，判断耗时操作是否完成，若没有完成，调用进度条的setProgress()方法更新进度，然后循环操作，直到耗时操作完成，然后调用setVisibility()方法设置进度条不显示。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--    style确定进度条样式，max指定进度条值，便于后台判断    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/progressbar"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">"@android:style/Widget.ProgressBar.Horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginBottom</span>=<span class="string">"60dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:max</span>=<span class="string">"100"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>后台Java代码：</p><p>private ProgressBar progressBar;<br>    private int mProgress=0;<br>    private Handler mhandler;//消息处理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_progress_bar);</span><br><span class="line">    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,</span><br><span class="line">            WindowManager.LayoutParams.FLAG_FULLSCREEN);<span class="comment">//设置全屏显示</span></span><br><span class="line">    progressBar = findViewById(R.id.progressbar);</span><br><span class="line">    mhandler = <span class="keyword">new</span> Handler()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//判断线程是否完成，未完成则更新进度，完成则隐藏(通过线程模拟耗时操作)</span></span><br><span class="line">            <span class="keyword">if</span>(msg.what==<span class="number">0x111</span>)</span><br><span class="line">                progressBar.setProgress(mProgress);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Toast.makeText(ProgressBarActivity.<span class="keyword">this</span>,<span class="string">"耗时操作已完成"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                progressBar.setVisibility(View.GONE);<span class="comment">//设置进度条不显示</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                mProgress = doWork();<span class="comment">//耗时操作</span></span><br><span class="line">                Message message = <span class="keyword">new</span> Message();</span><br><span class="line">                <span class="keyword">if</span>(mProgress&lt;<span class="number">100</span>)&#123;<span class="comment">//耗时操作未完成</span></span><br><span class="line">                    message.what=<span class="number">0x111</span>;<span class="comment">//自定义消息代码,表示未完成</span></span><br><span class="line">                    mhandler.sendMessage(message);<span class="comment">//发送消息，更新进度</span></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    message.what=<span class="number">0x110</span>;<span class="comment">//表示已完成</span></span><br><span class="line">                    mhandler.sendMessage(message);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">doWork</span><span class="params">()</span></span>&#123;<span class="comment">//自定义doWork方法，模拟耗时</span></span><br><span class="line">            mProgress+=Math.random()*<span class="number">10</span>;<span class="comment">//利用随机数生成加载进度</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> mProgress;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、SeekBar（拖动条）"><a href="#二、SeekBar（拖动条）" class="headerlink" title="二、SeekBar（拖动条）"></a>二、SeekBar（拖动条）</h3><p>是ProgressBar的子类，有些相同之处。</p><p>属性：</p><p>与ProgressBar一样，有 max,progress属性。</p><p>android:thumb=”@drawable/pwd”属性设置进度条的按钮形状。</p><p>使用时，需要添加可以获取进度条改变的事件监听器，来改变当前显示的内容。</p><p>seekseekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {<br>            @Override<br>            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {//进度改变所执行的方法<br>                Toast.makeText(SeekBarActivity.this,”进度改变：”+progress,Toast.LENGTH_SHORT).show();<br>            }</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;<span class="comment">//开始触摸所执行的方法</span></span><br><span class="line">        Toast.makeText(SeekBarActivity.<span class="keyword">this</span>,<span class="string">"开始触摸"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(SeekBarActivity.<span class="keyword">this</span>,<span class="string">"停止触摸"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="三、RatingBar（星级评分条）"><a href="#三、RatingBar（星级评分条）" class="headerlink" title="三、RatingBar（星级评分条）"></a>三、RatingBar（星级评分条）</h3><p>属性：</p><p>android:numStars=”5” 代表有五颗星<br>android:rating=”4” 　　代表默认选择四颗<br>android:stepSize=”1”　选择的最小单位为一颗</p><p>android:isIndicator=”true” 代表不可改变</p><p><strong>注意：宽度不要设置为match_parent，否则会影响星星数量。</strong></p><p>package com.example.tiange_project;</p><p>import android.os.Bundle;<br>import android.view.View;<br>import android.widget.Button;<br>import android.widget.RatingBar;<br>import android.widget.Toast;</p><p>import androidx.appcompat.app.AppCompatActivity;</p><p>public class RatingBarActivity extends AppCompatActivity {</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> RatingBar ratingBar;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_rating_bar);</span><br><span class="line">    ratingBar = findViewById(R.id.ratingbar);</span><br><span class="line">    <span class="comment">//获取选中几颗星</span></span><br><span class="line">    String rating = String.valueOf(ratingBar.getRating());</span><br><span class="line">    Toast.makeText(RatingBarActivity.<span class="keyword">this</span>,<span class="string">"Rating:"</span>+rating,Toast.LENGTH_SHORT).show();</span><br><span class="line">    <span class="comment">//获取改变的星星数量</span></span><br><span class="line">    String stepSize = String.valueOf(ratingBar.getStepSize());</span><br><span class="line">    Toast.makeText(RatingBarActivity.<span class="keyword">this</span>,<span class="string">"StepSize:"</span>+stepSize,Toast.LENGTH_SHORT).show();</span><br><span class="line">    <span class="comment">//获取进度</span></span><br><span class="line">    String progress = String.valueOf(ratingBar.getProgress());</span><br><span class="line">    Toast.makeText(RatingBarActivity.<span class="keyword">this</span>,<span class="string">"Progress:"</span>+progress,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、添加单击事件，提交按钮</span></span><br><span class="line">    Button button = findViewById(R.id.rating_button);</span><br><span class="line">    button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">float</span> rating = ratingBar.getRating();</span><br><span class="line">            Toast.makeText(RatingBarActivity.<span class="keyword">this</span>,<span class="string">"你得到了"</span>+rating+<span class="string">"颗星！"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>}</p><h3 id="四、ImageSwitcher（图像切换器）"><a href="#四、ImageSwitcher（图像切换器）" class="headerlink" title="四、ImageSwitcher（图像切换器）"></a>四、ImageSwitcher（图像切换器）</h3><p>设置切换图片的淡入淡出效果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tiange_project;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.AnimationUtils;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageSwitcher;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ViewSwitcher;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageSwitcherActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ImageSwitcher imageSwitcher;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_image_switcher);</span><br><span class="line">    imageSwitcher = findViewById(R.id.imageswitcher);</span><br><span class="line">    <span class="comment">//设置淡出动画</span></span><br><span class="line">    imageSwitcher.setOutAnimation(AnimationUtils.loadAnimation(ImageSwitcherActivity.<span class="keyword">this</span>,android.R.anim.fade_out));</span><br><span class="line">    <span class="comment">//设置进入动画</span></span><br><span class="line">    imageSwitcher.setInAnimation(AnimationUtils.loadAnimation(ImageSwitcherActivity.<span class="keyword">this</span>,android.R.anim.fade_in));</span><br><span class="line"></span><br><span class="line">    imageSwitcher.setFactory(<span class="keyword">new</span> ViewSwitcher.ViewFactory() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> View <span class="title">makeView</span><span class="params">()</span> </span>&#123;<span class="comment">//为图像切换器指定视图工厂</span></span><br><span class="line">            ImageView imageView = <span class="keyword">new</span> ImageView(ImageSwitcherActivity.<span class="keyword">this</span>);</span><br><span class="line">            imageView.setImageResource(R.drawable.image01);</span><br><span class="line">            <span class="keyword">return</span> imageView;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    imageSwitcher.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            ((ImageSwitcher)v).setImageResource(R.drawable.image02);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>}</p><h3 id="五、GrideView（网格视图）"><a href="#五、GrideView（网格视图）" class="headerlink" title="五、GrideView（网格视图）"></a>五、GrideView（网格视图）</h3><p>属性：</p><p>android:numColumns=”3” 设定列数为3</p><p>适配器(Adapter)：连接后端数据与前端显示的接口，数据和UI组件的重要纽带。</p><img src="/2020/02/28/Android-UI/4.png" class><p> 通过适配器adapter实现数据源显示到GrideView上。</p><p>Android提供了四个适配器实现类，分别是</p><p>① ArrayAdapter：数组适配器。</p><p>② SimpleAdapter：简单适配器，功能强大。</p><p>③ SimpleCursorAdapter:简单数据库适配器。</p><p>④ BaseAdapter：对各个列表项进行限制。</p><p><strong>为GrideView添加适配器</strong></p><p>在Java代码中添加适配器，但在使用其时，一般先创捷一个布局文件cell.xml（在其内部添加ImageView组件，显示视图）。我们可在其中任意自定义资源文件，以显示不同的效果。</p><p>package com.example.tiange_project;</p><p>import android.os.Bundle;<br>import android.widget.GridView;<br>import android.widget.SimpleAdapter;</p><p>import androidx.appcompat.app.AppCompatActivity;</p><p>import java.util.ArrayList;<br>import java.util.HashMap;<br>import java.util.List;<br>import java.util.Map;</p><p>public class GrideViewActivity extends AppCompatActivity {<br>    //创建int数组，记录资源id<br>    private int[] picture = new int[]{R.drawable.img01,R.drawable.img02,R.drawable.img03,<br>                                      R.drawable.img04,R.drawable.img05,R.drawable.img06,<br>                                      R.drawable.img07,R.drawable.img08,R.drawable.img09};</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_gride_view);</span><br><span class="line">    GridView gridView = findViewById(R.id.grideview);</span><br><span class="line">    <span class="comment">//存储图片资源</span></span><br><span class="line">    List&lt;Map&lt;String,Object&gt;&gt; listitem = <span class="keyword">new</span> ArrayList&lt;Map&lt;String,Object&gt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;picture.length;i++)&#123;<span class="comment">//通过for循环添加对象</span></span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">        map.put(<span class="string">"image"</span>,picture[i]);</span><br><span class="line">        listitem.add(map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//建立适配器对象</span></span><br><span class="line">    SimpleAdapter simpleAdapter = <span class="keyword">new</span> SimpleAdapter(<span class="keyword">this</span>,listitem,R.layout.cell,<span class="keyword">new</span> String[]&#123;<span class="string">"image"</span>&#125;,<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;R.id.image&#125;);</span><br><span class="line">    <span class="comment">//设置适配器</span></span><br><span class="line">    gridView.setAdapter(simpleAdapter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>}</p><h3 id="六、Spinner（下拉列表）"><a href="#六、Spinner（下拉列表）" class="headerlink" title="六、Spinner（下拉列表）"></a>六、Spinner（下拉列表）</h3><p>属性：</p><p>entries=“” 是一个数组资源，表示下拉列表的内容选项。数据存储在values下自己新建的arrays目录。</p><img src="/2020/02/28/Android-UI/5.png" class><p> 在其中编写代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  使用item添加各个数组元素  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string-array</span> <span class="attr">name</span>=<span class="string">"ctype"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span>&gt;</span>图书<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span>&gt;</span>游戏<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">string-array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>即可正常显示出下拉列表。</p><h4 id="也可通过适配器设置下拉选项。"><a href="#也可通过适配器设置下拉选项。" class="headerlink" title="也可通过适配器设置下拉选项。"></a>也可通过适配器设置下拉选项。</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tiange_project;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.Spinner;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpinnerActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_spinner);</span><br><span class="line">        String[] ctype = <span class="keyword">new</span> String[]&#123;<span class="string">"全部"</span>,<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>&#125;;</span><br><span class="line">        <span class="comment">//数组适配器</span></span><br><span class="line">        ArrayAdapter&lt;String&gt; adapter = <span class="keyword">new</span> ArrayAdapter&lt;String&gt;(<span class="keyword">this</span>,android.R.layout.simple_spinner_item,ctype);</span><br><span class="line">        <span class="comment">//为适配器设置下拉的选择样式</span></span><br><span class="line">        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);</span><br><span class="line">        Spinner spinner = findViewById(R.id.spinner);</span><br><span class="line">        spinner.setAdapter(adapter);</span><br><span class="line">        <span class="comment">//获取选择的选项</span></span><br><span class="line">        String str = spinner.getSelectedItem().toString();</span><br><span class="line">        Toast.makeText(SpinnerActivity.<span class="keyword">this</span>,str,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七、ListView（列表视图）"><a href="#七、ListView（列表视图）" class="headerlink" title="七、ListView（列表视图）"></a>七、ListView（列表视图）</h3><p>和下拉列表基本一致。</p><h3 id="八、滚动视图"><a href="#八、滚动视图" class="headerlink" title="八、滚动视图"></a>八、滚动视图</h3><p><strong>分为 ScrollView（垂直滚动） 和 HorizontalScrollView（水平滚动）</strong></p><p>要注意的是，其中只能包含一个组件，若要包含多个，则需要用布局管理器将其包含起来。</p><h3 id="九、选项卡"><a href="#九、选项卡" class="headerlink" title="九、选项卡"></a>九、选项卡</h3><p>在Android中，没有固定的组件实现，一般通过以下四个步骤实现。</p><p>1、在布局文件中添加TabHost、TabWidget和TabContent组件</p><p>2、编写各标签页的xmi布局文件，即各个选项的显示页面。</p><p>3、获取并初始化TabHost组件</p><p>4、将TabHost添加到标签页中</p><p><strong>实例</strong></p><p>1、先创建固定格式的布局文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TabHost</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".TabActivity"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/tabhost"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabWidget</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@android:id/tabs"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabWidget</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@android:id/tabcontent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TabHost</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、编写后台Java代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.tiange_project;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.widget.TabHost;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TabActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_tab);</span><br><span class="line">        <span class="comment">//初始化TabHost组件</span></span><br><span class="line">        TabHost tabHost = findViewById(android.R.id.tabhost);</span><br><span class="line">        tabHost.setup();<span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line">        LayoutInflater inflater = LayoutInflater.from(<span class="keyword">this</span>);<span class="comment">//用这个对象加载两个标签页的布局文件</span></span><br><span class="line">        inflater.inflate(R.layout.tab1,tabHost.getTabContentView());<span class="comment">//1</span></span><br><span class="line">        inflater.inflate(R.layout.tab2,tabHost.getTabContentView());<span class="comment">//2</span></span><br><span class="line">        <span class="comment">//添加标签页</span></span><br><span class="line">        tabHost.addTab(tabHost.newTabSpec(<span class="string">"tab1"</span>).setIndicator(<span class="string">"精选表情"</span>).setContent(R.id.left));</span><br><span class="line">        tabHost.addTab(tabHost.newTabSpec(<span class="string">"tab2"</span>).setIndicator(<span class="string">"投稿表情"</span>).setContent(R.id.right));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，tab1和tab2都是自定义的xml布局文件，表示标签页显示的内容。</p><p>即可完成。</p><p>到此，基本的UI组件学习已经完成，当然每个组件都只是刚刚入门，想要精通还有很长一段路要走。</p><p>继续加油吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android UI的知识点总结，初入Android，做些总结。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://iceWind-R.github.io/categories/Android/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="Android" scheme="http://iceWind-R.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建总结(一)</title>
    <link href="http://icewind-r.github.io/2020/02/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/"/>
    <id>http://icewind-r.github.io/2020/02/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/</id>
    <published>2020-02-28T12:30:25.000Z</published>
    <updated>2020-03-17T05:45:41.010Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第三次尝试搭建Hexo博客"><a href="#第三次尝试搭建Hexo博客" class="headerlink" title="第三次尝试搭建Hexo博客"></a>第三次尝试搭建Hexo博客</h2><p>干掉 干掉！</p><p>多尝试几次，大不了干掉重来！</p><a id="more"></a><hr><p>这篇文章就作为搭建博客时出现的问题及解决方法的总结，整个搭建过程并不尽人意。多多总结，少走弯路。</p><h3 id="1、hexo-d命令时-的ERROR-Deployer-not-found-git错误提示"><a href="#1、hexo-d命令时-的ERROR-Deployer-not-found-git错误提示" class="headerlink" title="1、hexo d命令时 的ERROR Deployer not found: git错误提示"></a>1、hexo d命令时 的<code>ERROR Deployer not found: git</code>错误提示</h3><p>解决方法，执行命令 <code>cnpm install --save hexo-deployer-git</code>即可解决。</p><h3 id="2、hexo-d命令提交时取消弹出的输入GitHub账号密码框"><a href="#2、hexo-d命令提交时取消弹出的输入GitHub账号密码框" class="headerlink" title="2、hexo d命令提交时取消弹出的输入GitHub账号密码框"></a>2、hexo d命令提交时取消弹出的输入GitHub账号密码框</h3><p>GitHub不允许随意的提交，所以需要账号密码来确认操作。我们提交代码之前一定是需要某种授权的，而 GitHub 上一般都是基于 SSH 授权的。 </p><p><strong>那么什么是 SSH 呢？</strong> 简单点说，SSH是一种网络协议，用于计算机之间的加密登录。目前 </p><p>是每一台 Linux 电脑的标准配置。而大多数 Git 服务器都会选择使用 SSH 公钥来进行授权， </p><p>所以想要在 GitHub 提交代码的第一步就是要先添加 SSH key 配置。</p><p>首先在博客根目录下输入ssh确定安装了ssh，出现如下则代表安装成功。</p><img src="/2020/02/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/1.png" class><p>紧接着输入ssh-keygen -t rsa 命令，敲击回车。</p><img src="/2020/02/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/2.png" class><p>然后就会生成两个文件 id_rsa 和 id_rsa.pub ，而 id_rsa 是密钥，id_rsa.pub 就是公钥。</p><p>然后找到 C:\Users\Administrator\.ssh 路径下的id_rsa.pub文件记事本打开，并将其中内容复制，添加到GitHub上即可。</p><h3 id="3、图片加载不出来"><a href="#3、图片加载不出来" class="headerlink" title="3、图片加载不出来"></a>3、图片加载不出来</h3><p>参考博客 <a href="https://blog.csdn.net/xjm850552586/article/details/84101345" target="_blank" rel="noopener">https://blog.csdn.net/xjm850552586/article/details/84101345</a></p><p>需要注意的是，博客中引用图片通过命令  完成。例如 即可完成图片显示。</p><h3 id="4、将该站点配置到百度站点收录管理中"><a href="#4、将该站点配置到百度站点收录管理中" class="headerlink" title="4、将该站点配置到百度站点收录管理中"></a>4、将该站点配置到百度站点收录管理中</h3><p>需要将Hexo博客双线部署以实现百度收录。我们的博客部署在GitHub上百度是不能收录的，双线部署，可以选择码云等国内站点。</p><p>首先在码云上已经部署好，并且配置了Page的静态网站。</p><p>在百度上管理码云上该网站的地址域名，选择验证时用第二种方式HTML标签认证成功。</p><img src="/2020/02/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/3.png" class><ul><li><p>首先第一步，在next主题配置文件中添加下面这句，值就输入你content的值即可，配置里面可能没这个字段添加即可。</p><img src="/2020/02/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/4.png" class></li><li><p>第二步，我是在该路径下的head文件添加了百度的代码。</p><img src="/2020/02/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/5.png" class></li><li><p>然后Hexo生成发布博客即可。</p></li></ul><p>百度的收录需要一定的时间，现在百度的收录方式有所调整，注重高质量的网站，否则就算现在收录成功，以后的一段时间里也会收回。所以要保证网站内容的高质量化，只有一起努力，才能把自己的博客网站做到更好。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第三次尝试搭建Hexo博客&quot;&gt;&lt;a href=&quot;#第三次尝试搭建Hexo博客&quot; class=&quot;headerlink&quot; title=&quot;第三次尝试搭建Hexo博客&quot;&gt;&lt;/a&gt;第三次尝试搭建Hexo博客&lt;/h2&gt;&lt;p&gt;干掉 干掉！&lt;/p&gt;
&lt;p&gt;多尝试几次，大不了干掉重来！&lt;/p&gt;
    
    </summary>
    
    
      <category term="HEXO" scheme="http://iceWind-R.github.io/categories/HEXO/"/>
    
    
      <category term="experience" scheme="http://iceWind-R.github.io/tags/experience/"/>
    
      <category term="blog" scheme="http://iceWind-R.github.io/tags/blog/"/>
    
  </entry>
  
</feed>
