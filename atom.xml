<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thorine</title>
  
  <subtitle>生活很难，但请务必坚持</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://icewind-r.github.io/"/>
  <updated>2020-06-22T14:15:19.044Z</updated>
  <id>http://icewind-r.github.io/</id>
  
  <author>
    <name>大雪初晴丶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python入门总结（四）</title>
    <link href="http://icewind-r.github.io/2020/06/22/Python%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/06/22/Python%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-06-22T11:52:42.000Z</published>
    <updated>2020-06-22T14:15:19.044Z</updated>
    
    <content type="html"><![CDATA[<p>基于上次的<strong>列表</strong>和<strong>元组</strong>，这次总结<strong>字典</strong>和<strong>集合</strong>的基本操作</p><a id="more"></a><hr><h1 id="一、字典"><a href="#一、字典" class="headerlink" title="一、字典"></a>一、字典</h1><p>字典的数据是以键值对形式出现。</p><h2 id="1、创建字典"><a href="#1、创建字典" class="headerlink" title="1、创建字典"></a>1、创建字典</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">'name'</span>:<span class="string">'Tom'</span>,<span class="string">'age'</span>:<span class="number">20</span>,<span class="string">'gender'</span>:<span class="string">'男'</span>&#125; <span class="comment">#有数据字典</span></span><br><span class="line">dict2 = &#123;&#125; <span class="comment">#空字典</span></span><br><span class="line">dict3 = dict() <span class="comment">#空字典</span></span><br></pre></td></tr></table></figure><h2 id="2、字典常见操作"><a href="#2、字典常见操作" class="headerlink" title="2、字典常见操作"></a>2、字典常见操作</h2><h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h3><p>写法：<code>字典序列[key] = 值</code></p><blockquote><p>注意：如果key存在则修改这个key对应的值；如果key不存在则新增此键值对</p></blockquote><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ul><li>del() / del：删除字典或字典中指定键值对</li><li>clear()：清空字典</li></ul><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>字典序列[key] = 值</p><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><h4 id="key值查找"><a href="#key值查找" class="headerlink" title="key值查找"></a>key值查找</h4><p><code>dict1[&#39;name&#39;]</code></p><blockquote><p>如果key存在则返回相应值；否则报错</p></blockquote><h4 id="get"><a href="#get" class="headerlink" title="get()"></a>get()</h4><ul><li><p>语法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字典序列.get(key, 默认值)</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果当前查找的key不存在，则返回第二个参数，如果省略第二个参数，则返回None</p></blockquote></li></ul><h4 id="keys"><a href="#keys" class="headerlink" title="keys()"></a>keys()</h4><p>查找字典中所有的key，返回可迭代对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(dict1.keys()) <span class="comment"># dict_keys(['name','age','gender'])</span></span><br></pre></td></tr></table></figure><h4 id="values"><a href="#values" class="headerlink" title="values()"></a>values()</h4><p>查找字典中所有的value，返回可迭代对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(dict1.values()) <span class="comment"># dict_values(['Tom','20','男'])</span></span><br></pre></td></tr></table></figure><h4 id="items"><a href="#items" class="headerlink" title="items()"></a>items()</h4><p>查找字典中所有的键值对，返回可迭代对象，里面的数据是元组，元组数据1是key，2是value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(dict1.items()) <span class="comment"># dict_items([('name','Tom'),('age',20),('gender','男')])</span></span><br></pre></td></tr></table></figure><h2 id="3、字典的循环遍历"><a href="#3、字典的循环遍历" class="headerlink" title="3、字典的循环遍历"></a>3、字典的循环遍历</h2><h3 id="遍历字典的key"><a href="#遍历字典的key" class="headerlink" title="遍历字典的key"></a>遍历字典的key</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dict1.keys():</span><br><span class="line">    print(key)</span><br><span class="line"><span class="comment"># 结果：name age gender</span></span><br></pre></td></tr></table></figure><h3 id="遍历字典的value"><a href="#遍历字典的value" class="headerlink" title="遍历字典的value"></a>遍历字典的value</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> dict1.values():</span><br><span class="line">print(value)</span><br><span class="line"><span class="comment"># 结果 Tom 20 男</span></span><br></pre></td></tr></table></figure><h3 id="遍历字典的元素"><a href="#遍历字典的元素" class="headerlink" title="遍历字典的元素"></a>遍历字典的元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> dict1.items():</span><br><span class="line">    print(item)</span><br><span class="line">结果 (<span class="string">'name'</span>,<span class="string">'tom'</span>) (<span class="string">'age'</span>,<span class="number">20</span>) (<span class="string">'gender'</span>,<span class="string">'男'</span>)</span><br></pre></td></tr></table></figure><h3 id="遍历字典的键值对-拆包"><a href="#遍历字典的键值对-拆包" class="headerlink" title="遍历字典的键值对(拆包)"></a>遍历字典的键值对(拆包)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> dict1.items():</span><br><span class="line">    print(<span class="string">f'<span class="subst">&#123;key&#125;</span> = <span class="subst">&#123;value&#125;</span>'</span>)</span><br></pre></td></tr></table></figure><h1 id="二、集合"><a href="#二、集合" class="headerlink" title="二、集合"></a>二、集合</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于上次的&lt;strong&gt;列表&lt;/strong&gt;和&lt;strong&gt;元组&lt;/strong&gt;，这次总结&lt;strong&gt;字典&lt;/strong&gt;和&lt;strong&gt;集合&lt;/strong&gt;的基本操作&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://iceWind-R.github.io/categories/Python/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="Python" scheme="http://iceWind-R.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建总结（二）</title>
    <link href="http://icewind-r.github.io/2020/06/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/06/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-06-21T12:41:08.000Z</published>
    <updated>2020-06-22T04:36:31.841Z</updated>
    
    <content type="html"><![CDATA[<p>前文已经利用GitHub搭建了基本的博客， 此篇总结一些服务器，Linux的知识点，为之后的部署到服务器做好准备。</p><a id="more"></a><hr><p>1、静态博客：hexo,hugo等框架搭建起来的博客，内部生成固定的html页面代码，每个人访问的内容都完全一致。</p><p>2、动态博客：wordpress，halo，有着后台应用服务的博客，需要单独应用服务器的承载，比如登录功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前文已经利用GitHub搭建了基本的博客， 此篇总结一些服务器，Linux的知识点，为之后的部署到服务器做好准备。&lt;/p&gt;
    
    </summary>
    
    
      <category term="HEXO" scheme="http://iceWind-R.github.io/categories/HEXO/"/>
    
    
      <category term="experience" scheme="http://iceWind-R.github.io/tags/experience/"/>
    
      <category term="blog" scheme="http://iceWind-R.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Plan_01（6.21~6.28）</title>
    <link href="http://icewind-r.github.io/2020/06/21/Plan-01-%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <id>http://icewind-r.github.io/2020/06/21/Plan-01-%E7%AC%AC%E4%B8%80%E5%91%A8/</id>
    <published>2020-06-21T10:47:02.000Z</published>
    <updated>2020-06-22T04:47:04.319Z</updated>
    
    <content type="html"><![CDATA[<p>这是暑假的第一周，务必不要拖延，每天进步一点。</p><a id="more"></a><hr><p><strong>整体计划：</strong></p><ol><li>python</li><li>Android</li><li>服务器</li><li>英语</li><li>阅读</li><li>知乎收藏</li></ol><p><strong>周一（6.22）计划</strong></p><p>四个服务器的视频看完，服务器搭建博客完成</p><p>python第七天视频学习完成</p><p><strong>本周知乎总结：</strong></p><ol><li>为人处世<ol><li>不要让自己每天的时间分散，碎片化是效率的生死大敌，少刷朋友圈，少水群，因为这只会浪费你的时间。</li><li>改变自己最高效的方法，就是去做你害怕的事，不作为比失败更可怕。</li><li>能定期和父母联系是一项很棒的能力。</li><li>不喜欢当下的工作，马上换，每拖一分你勇气就少一分。你多学一点本事，将来就能少开口求人一次。</li><li>学会果断拒绝，而不是犹豫后拒绝。</li><li>最短的距离是从嘴到手，最长的距离是从说到做。</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是暑假的第一周，务必不要拖延，每天进步一点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Plan" scheme="http://iceWind-R.github.io/categories/Plan/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>没来得及好好过的大二</title>
    <link href="http://icewind-r.github.io/2020/06/17/%E6%B2%A1%E6%9D%A5%E5%BE%97%E5%8F%8A%E5%A5%BD%E5%A5%BD%E8%BF%87%E7%9A%84%E5%A4%A7%E4%BA%8C/"/>
    <id>http://icewind-r.github.io/2020/06/17/%E6%B2%A1%E6%9D%A5%E5%BE%97%E5%8F%8A%E5%A5%BD%E5%A5%BD%E8%BF%87%E7%9A%84%E5%A4%A7%E4%BA%8C/</id>
    <published>2020-06-17T02:56:38.000Z</published>
    <updated>2020-06-17T03:20:15.586Z</updated>
    
    <content type="html"><![CDATA[<p>转瞬即逝。</p><a id="more"></a><hr><p>结束才觉得一切都太快了</p><p>得好好规划暑假啊</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转瞬即逝。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>男儿有泪不轻弹？</title>
    <link href="http://icewind-r.github.io/2020/05/13/%E7%94%B7%E5%84%BF%E6%9C%89%E6%B3%AA%E4%B8%8D%E8%BD%BB%E5%BC%B9%EF%BC%9F/"/>
    <id>http://icewind-r.github.io/2020/05/13/%E7%94%B7%E5%84%BF%E6%9C%89%E6%B3%AA%E4%B8%8D%E8%BD%BB%E5%BC%B9%EF%BC%9F/</id>
    <published>2020-05-13T12:11:37.000Z</published>
    <updated>2020-05-13T12:26:14.835Z</updated>
    
    <content type="html"><![CDATA[<p> 你记得你上一次为什么而落泪吗？</p><a id="more"></a><hr><p>5.13 晚20：00</p><p>已不记得上次为什么而落泪，可能还是童年时和父母的一次赌气？和同学的一场争执？</p><p>十多年过去，即将20岁的我，却再一次落泪</p><p>我承认我的懦弱，但这次，我觉得不一样</p><p>真的没想到和父母的代沟能有这么大</p><p>第一次感受到心痛掩盖了身体的痛</p><p>家真的是游子的港湾吗？</p><p>可能是地理上的港湾，可能是身体上的给我丰衣足食的港湾</p><p>却再也难已是我心灵的港湾了</p><p>这次不为任何而哭</p><p>只是为自己的孤独而哭</p><p>更为自己的无能而哭</p><p>或许，这就是庸人最后的挣扎了吧</p><p>但毕竟心有不甘</p><p>那就继续挣扎吧</p><p>起码感动自己</p><p>你说，是吧？</p><br><p>哦对，今天崴脚了，打球这几年的第一次，得好好休养几天了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 你记得你上一次为什么而落泪吗？&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>闺女开学有感</title>
    <link href="http://icewind-r.github.io/2020/05/05/%E9%97%BA%E5%A5%B3%E5%BC%80%E5%AD%A6%E6%9C%89%E6%84%9F/"/>
    <id>http://icewind-r.github.io/2020/05/05/%E9%97%BA%E5%A5%B3%E5%BC%80%E5%AD%A6%E6%9C%89%E6%84%9F/</id>
    <published>2020-05-05T02:15:11.000Z</published>
    <updated>2020-05-05T14:43:40.480Z</updated>
    
    <content type="html"><![CDATA[<p>如题</p><a id="more"></a><hr><p>时间过得很快，认识的两个月已经流逝，相信这最后的两个月也不会让我等太久。</p><p>这次分离，只能高考后再见，下次相见就长大了啊。</p><p>第一次开始在乎QQ的小标识。</p><p>是啊，真的挺悲伤</p><br><p>时间就是这样</p><p>又想留住 又想度过</p><br><p>相信结果一定不会差</p><br><p>我期待着</p><p>高考结束的那一天</p><p>成绩下来的那一天</p><p>报考志愿的那一天</p><p>收到录取通知书的那一天</p><p>步入大学的那一天</p><br><p>相信一切都是上天最好的安排</p><br><img src="/2020/05/05/%E9%97%BA%E5%A5%B3%E5%BC%80%E5%AD%A6%E6%9C%89%E6%84%9F/1.PNG">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如题&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>电脑系统重装前的准备工作</title>
    <link href="http://icewind-r.github.io/2020/05/03/%E7%94%B5%E8%84%91%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/"/>
    <id>http://icewind-r.github.io/2020/05/03/%E7%94%B5%E8%84%91%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</id>
    <published>2020-05-03T07:12:07.000Z</published>
    <updated>2020-05-26T00:50:56.538Z</updated>
    
    <content type="html"><![CDATA[<p>总结下次电脑系统重装需要的环境软件和操作。</p><a id="more"></a><hr><h2 id="电脑初始化前的操作"><a href="#电脑初始化前的操作" class="headerlink" title="电脑初始化前的操作"></a>电脑初始化前的操作</h2><p>不能着急，需要把电脑中的资料提前保存，预计是百度网盘，记得开会员。要保存的资料有：</p><ul><li>MyBlog</li><li>每个编译器存放的代码</li><li>Wallpaper Engine下的壁纸</li><li>下载的音乐</li><li>D盘下的小工具</li><li>谷歌浏览助手</li><li>额滴小心肝</li><li>chrome中Tempermonkey的插件</li></ul><h2 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h2><p>首先是要给系统的磁盘分好类。</p><ol><li>D盘（软件盘）：一级目录为application、server、MyBlog。（把download文件夹移到E盘）</li><li>E盘（文档盘）：包括学习资料、我的工具，同时把桌面、document等等移到此盘下（先建一个大文件夹（我的文件：注意，文件名换个英文的），然后把每一项移动进来）。</li><li>F盘（游戏盘）：每个公司一个文件夹。Steam，Wegame，uplay等。</li></ol><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Java、PHP（php_study）</p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="学习类"><a href="#学习类" class="headerlink" title="学习类"></a>学习类</h3><h4 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h4><p>IDEA、PyCharm、PHPStorm、AS、CodeBlocks、Eclipse、VS、VSCode</p><p>（与Github绑定）</p><h4 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h4><p>HBulider、Notepad++、Sublime Text</p><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>MySQL、Redis、SQL server、Navicat For MySQL、SQLiteStudio</p><p>php_study中有MySQL，了解后使用</p><h4 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h4><p>VM、Genymotion</p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>Xftp、Xshell</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>MatLab、RegexBuddy、Cisco Packet Tracer</p><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><p>chrome、Firefox</p><p>WPS、Everything、印象笔记、bandzip、欧路翻译、</p><p>Iris（护眼）、百度网盘（使用微信登录）、</p><p>格式工厂、PS，PR、ScreenToGif、达芬奇、PotPlayer（百度网盘中下载，<a href="https://www.zhihu.com/question/20710497/answer/1076773103" target="_blank" rel="noopener">如何使用</a>）、小蝴蝶</p><h3 id="娱乐类"><a href="#娱乐类" class="headerlink" title="娱乐类"></a>娱乐类</h3><p>微信、TIM、QQ、网易云音乐、腾讯视频、</p><p>网易加速、雷神加速、Steam、WeGame、暴雪战网、Epic</p><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><p>VM中建立自己的Linux系统。</p><p>tomcat、</p><p>apache、MySQL、phpMyadmin、PHP等由phpstudy提供</p><p>配置虚拟主机</p><p>Maven的安装和IDEA中Maven的配置</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结下次电脑系统重装需要的环境软件和操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>PHP——数据库MySQL操作</title>
    <link href="http://icewind-r.github.io/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/"/>
    <id>http://icewind-r.github.io/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/</id>
    <published>2020-04-29T13:18:52.000Z</published>
    <updated>2020-05-02T07:17:00.320Z</updated>
    
    <content type="html"><![CDATA[<p>总结PHP中操作MySQL的相关方法与命令。</p><a id="more"></a><hr><h2 id="PHP连接MySQL"><a href="#PHP连接MySQL" class="headerlink" title="PHP连接MySQL"></a>PHP连接MySQL</h2><h3 id="PHP连接MySQL服务器"><a href="#PHP连接MySQL服务器" class="headerlink" title="PHP连接MySQL服务器"></a>PHP连接MySQL服务器</h3><h4 id="mysqli-connect"><a href="#mysqli-connect" class="headerlink" title="mysqli_connect()"></a>mysqli_connect()</h4><ul><li><p>描述：连接到MySQL服务器</p></li><li><p>语法：<code>$link = mysqli_connect([host],[username],[password],[dbName],[port])</code></p></li><li><p>返回值：连接成功，则返回MySQLi连接对象。如果失败，则返回FALSE。</p></li></ul><h4 id="运算符"><a href="#运算符" class="headerlink" title="@运算符"></a>@运算符</h4><ul><li>PHP支持错误抑制运算符@。</li><li>可以把它放在<strong>变量，函数、include调用</strong>和<strong>变量</strong>等前面。</li></ul><p>在连接数据库失败的时候，往往系统给出提示信息，会暴露电脑的相关配置，可能发生信息的不安全泄露，造成隐患。我们可以使用错误抑制符@来避免数据库连接失败的错误提示。</p><p>用法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$link = @ mysqli_connect([host],[username],[password],[dbName],[port]);</span><br></pre></td></tr></table></figure><h4 id="die-和exit"><a href="#die-和exit" class="headerlink" title="die()和exit()"></a>die()和exit()</h4><ul><li>输出一个消息并且退出当前脚本，作用等同。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$db_host = <span class="string">"localhost"</span>;<span class="comment">//主机号</span></span><br><span class="line">$db_port = <span class="string">"3306"</span>;   <span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">"root"</span>;   <span class="comment">//用户名</span></span><br><span class="line">$db_password = <span class="string">"root"</span>; <span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">"mydb"</span>;   <span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">"utf8"</span>;   <span class="comment">//字符集</span></span><br><span class="line"><span class="keyword">if</span>(!$link = @ mysqli_connect($db_host.<span class="string">":"</span>.$db_port,$db_user,$db_password))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"连接失败"</span>);<span class="comment">//中止程序向下运行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mysqli-connect-error"><a href="#mysqli-connect-error" class="headerlink" title="mysqli_connect_error()"></a>mysqli_connect_error()</h4><ul><li>返回连接失败的错误信息。</li></ul><h4 id="mysqli-close"><a href="#mysqli-close" class="headerlink" title="mysqli_close()"></a>mysqli_close()</h4><ul><li>关闭先前打开的数据库连接</li><li>语法：<code>bool mysqli_close(mysqli $link);</code></li></ul><h3 id="选择当前数据库"><a href="#选择当前数据库" class="headerlink" title="选择当前数据库"></a>选择当前数据库</h3><p>一个数据库服务器包含很多的数据库，通常需要针对某个具体的数据库操作。</p><p>语法：bool mysqli_select_db(mysqli $link,string $database)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!mysqli_select_db($link,$database))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"选择数据库$&#123;db_name&#125;失败"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置客户端字符集"><a href="#设置客户端字符集" class="headerlink" title="设置客户端字符集"></a>设置客户端字符集</h3><p>设置默认字符编码</p><p>语法：<code>bool mysqli_set_charset(mysqli $link,string $ charset)</code></p><h2 id="执行SQL语句"><a href="#执行SQL语句" class="headerlink" title="执行SQL语句"></a>执行SQL语句</h2><h4 id="mysqli-query"><a href="#mysqli-query" class="headerlink" title="mysqli_query()"></a>mysqli_query()</h4><ul><li>发送一条MySQL查询</li><li>语法：<code>resource mysqli_query(mysqli $link,string $query)</code></li><li>$query是查询的sql语句字符串</li></ul><p><strong>说明：</strong>mysqli_query()仅对SELECT，SHOW 或 DESCRIBE 语句返回一个mysqli_result结果集对象，如果查询不正确返回FALSE。对于其他类型的SQL语句，成功返回TRUE，失败返回FALSE。非FALSE的返回值意味着查询是合法的并能够被服务器执行。</p><p><strong>注意</strong>：查询字符串不应以分号结束，和命令行模式下有区别。</p><p>mysqli_result结果集对象：结果已经查到，但必须用特殊的方法才能取出数据。</p><h4 id="mysqli-free-result"><a href="#mysqli-free-result" class="headerlink" title="mysqli_free_result()"></a>mysqli_free_result()</h4><ul><li>释放与结果集相关联的内存</li><li>语法：<code>void mysqli_free_result(mysqli_result $result)</code></li></ul><p><strong>注意</strong>：是结果集对象mysqli_result，而不是bool。</p><h3 id="从结果集获取数据"><a href="#从结果集获取数据" class="headerlink" title="从结果集获取数据"></a>从结果集获取数据</h3><h4 id="mysqli-fetch-row"><a href="#mysqli-fetch-row" class="headerlink" title="mysqli_fetch_row()"></a>mysqli_fetch_row()</h4><ul><li><p>从结果集中取出一行作为枚举数组（下标为整型的是枚举数组，下标为字符串的是关联数组）</p></li><li><p>array mysqli_fetch_row(mysqli_result $result)</p></li><li><p>每调用一次，取出当前行，并把指针指向下一行，下次调用便是下一行的数据。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>($arr = mysqli_fetch_row($result))&#123;</span><br><span class="line">    print_r($arr);<span class="comment">//取出所有数组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mysqli-fetch-assoc"><a href="#mysqli-fetch-assoc" class="headerlink" title="mysqli_fetch_assoc()"></a>mysqli_fetch_assoc()</h4><ul><li><p>从结果集中取出一行作为关联数组</p></li><li><p>语法：<code>array mysqli_fetch_assoc(mysqli_result $result)</code></p></li><li><p>从结果集取得的行生成的关联数组，如果没有更多行则返回FALSE。</p></li></ul><p><strong>注意</strong>：此函数返回的字段名大小写敏感。</p><h4 id="mysqli-fetch-array"><a href="#mysqli-fetch-array" class="headerlink" title="mysqli_fetch_array()"></a>mysqli_fetch_array()</h4><ul><li><p>从结果集中取出一行作为关联数组或数字数组，或二者兼有。</p></li><li><p>语法：<code>array mysqli_fetch_array(mysqli_result $result [,int $result_type = MYSQLI_BOTH])</code></p></li><li><p>$result_type是一个常量，取值：MYSQLI_BOTH （二者兼有，默认），MYSQLI_ASSOC （关联索引），MYSQLI_NUM（数字索引） </p></li><li><p>从结果集取得的行生成的数组，如果没有更多行则返回FALSE。</p></li></ul><p><strong>注意</strong>：此函数返回的字段名大小写敏感。</p><p>二者兼有<strong>举例</strong>（一份数据在数组中存两遍，一遍枚举数组，一遍关联数组）：</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/1.png" class><h4 id="mysqli-fetch-all"><a href="#mysqli-fetch-all" class="headerlink" title="mysqli_fetch_all()"></a>mysqli_fetch_all()</h4><p>从结果集中取出所有行作为关联数组、枚举数组或二者兼有。</p><p>语法：<code>mixed mysqli_fetch_all(mysqli_result $result [,int $result_type = MYSQLI_NUM])</code></p><p>与之前不同的是，默认为枚举数组；即第一维永远为数字，表示第几条记录，第二维字段可以改变，数字、字符串或二者兼有。</p><h4 id="mysqli-error"><a href="#mysqli-error" class="headerlink" title="mysqli_error()"></a>mysqli_error()</h4><ul><li><p>显示执行sql语句失败的错误信息</p></li><li><p>语法：<code>mysqli_error(mysqli $link)</code></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"insert into test(id,name,age) values(null,'李四',25)"</span>;</span><br><span class="line">$result = mysqli_query($link,$sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"2、数据插入失败:"</span>.mysqli_error($link));</span><br></pre></td></tr></table></figure><h3 id="获取记录数"><a href="#获取记录数" class="headerlink" title="获取记录数"></a>获取记录数</h3><h4 id="mysqli-num-rows"><a href="#mysqli-num-rows" class="headerlink" title="mysqli_num_rows()"></a>mysqli_num_rows()</h4><p>取得结果集中行的数目</p><p>语法：<code>int mysqli_num_rows(mysqli_result $result)</code></p><p><strong>注意：</strong>此命令仅对SELECT语句有效。</p><h4 id="mysqli-affected-rows"><a href="#mysqli-affected-rows" class="headerlink" title="mysqli_affected_rows()"></a>mysqli_affected_rows()</h4><p>取得前一次MySQL操作所影响的记录行数，包括SELECT,UPDATE,INSERT或DELETE。</p><p>语法：<code>int mysqli_affected_rows(mysqli $link)</code></p><p><strong>注意：</strong>如果最近一次查询失败，函数返回-1。当使用UPDATE查询，MySQL不会将原值和新值一样的值更新，即此条记录不代表被修改。返回值不一定就是查询条件所符合的记录，只有修改过的记录数才会被返回。</p><p><strong>案例演示注意事项</strong></p><p>1、首先是表单的提交，在php中判断是否提交表单，可以在表单中设置隐藏域，值为一个随机值，判断这个随机且唯一的值是否正确即可判断表单是否提交，该方法可避免其他人提交表单修改自己数据库的不安全情况。</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/2.png" class><p>2、然后是复选框的提交，复选框提交时会出现覆盖现象，此时在name属性后添加<code>[]</code>来表明该属性为数组属性。</p><p>PHP会把<code>name=&quot;hobby[]&quot;</code>看成添加一个数组元素，而HTML会把它看成一个字符串。</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/3.png" class><p><strong>提示：</strong>将多个爱好连成一个值，并写入到数据库某个字段中，只需要一个字段来存储爱好，用到字符串的拼接。</p><img src="/2020/04/29/PHP%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E6%93%8D%E4%BD%9C/4.png" class>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结PHP中操作MySQL的相关方法与命令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>十天时光荒废总结</title>
    <link href="http://icewind-r.github.io/2020/04/16/%E5%8D%81%E5%A4%A9%E6%97%B6%E5%85%89%E8%8D%92%E5%BA%9F%E6%80%BB%E7%BB%93/"/>
    <id>http://icewind-r.github.io/2020/04/16/%E5%8D%81%E5%A4%A9%E6%97%B6%E5%85%89%E8%8D%92%E5%BA%9F%E6%80%BB%E7%BB%93/</id>
    <published>2020-04-16T14:07:24.000Z</published>
    <updated>2020-04-17T12:22:43.253Z</updated>
    
    <content type="html"><![CDATA[<p>十天时光已然逝去，但万事有弊就有利，相信浪费的时光也有其宝贵的价值。</p><a id="more"></a><hr><p>这十天真是浑浑噩噩的十天，难以想象，现在回头看看，竟不能细想出干了些什么事，怕是每天都是重复，毫无收获吧。</p><p>十天状态：</p><p>1、课不好好上，就是不听，玩手机，心安理得，不像以前带着愧疚感玩。</p><p>2、没有上进，毫无作为，什么都不想干。</p><p>3、混吃等死？破罐子破摔？真是可怕。</p><p>4、张武？每天就是这么没的。</p><p>真的觉得世界都黑暗了，不知道该干什么，什么都干不好。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;十天时光已然逝去，但万事有弊就有利，相信浪费的时光也有其宝贵的价值。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Android Jetpack架构组件（一）</title>
    <link href="http://icewind-r.github.io/2020/04/05/Android-1/"/>
    <id>http://icewind-r.github.io/2020/04/05/Android-1/</id>
    <published>2020-04-05T11:09:58.000Z</published>
    <updated>2020-04-07T04:39:58.174Z</updated>
    
    <content type="html"><![CDATA[<p>开始学习Android Jetpack相关知识。</p><a id="more"></a><hr><p>首先补充一点内容。</p><h3 id="设置app的横屏和竖屏"><a href="#设置app的横屏和竖屏" class="headerlink" title="设置app的横屏和竖屏"></a>设置app的横屏和竖屏</h3><p>设置app某个界面的横屏和竖屏的不同显示方式。</p><img src="/2020/04/05/Android-1/1.png" class><p>即可创建当前页面的一个横屏副本。</p><p>app页面的横屏和竖屏转换是一个Activity的杀死重创建的过程，即界面被刷新，如果当前界面的数据没保存，则会丢失。</p><p>如果需要临时保存当前页面的数据，使其在反转后数据不丢失，则需要以下操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先注意onCreate(Bundle savedInstanceState)的参数，为保存当前页面的临时数据，Bundle类为key:value形式。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        textView = findViewById(R.id.textView);</span><br><span class="line">        button = findViewById(R.id.button);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (savedInstanceState != <span class="keyword">null</span>)&#123;</span><br><span class="line">            String s = savedInstanceState.getString(<span class="string">"KEY"</span>);</span><br><span class="line">            textView.setText(s);</span><br><span class="line">        &#125;</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                textView.setText(R.string.button);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSaveInstanceState(outState);</span><br><span class="line">        outState.putString(<span class="string">"KEY"</span>, textView.getText().toString());<span class="comment">//存入Bundle对象，便于onCreate方法取出</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Android-Jetpack"><a href="#Android-Jetpack" class="headerlink" title="Android Jetpack"></a>Android Jetpack</h2><img src="/2020/04/05/Android-1/2.png" class><p><strong>ViewModel</strong>：对象为特定的界面组件（如 Fragment 或 Activity）提供数据，并包含数据处理业务逻辑，以与模型进行通信。例如，ViewModel 可以调用其他组件来加载数据，还可以转发用户请求来修改数据。ViewModel 不了解界面组件，因此不受配置更改（如在旋转设备时重新创建 Activity）的影响。</p><p><strong>LiveData</strong>：是一种可观察的数据存储器。应用中的其他组件可以使用此存储器监控对象的更改，而无需在它们之间创建明确且严格的依赖路径。LiveData 组件还遵循应用组件（如 Activity、Fragment 和 Service）的生命周期状态，并包括清理逻辑以防止对象泄漏和过多的内存消耗。</p><p><strong>DataBinding</strong>：声明性地将可观察数据绑定到UI元素，其目的在于是为了脱离Controller与View之间的引用联系，很类似Butterknife库，使用也比较相似。</p><p><strong>Navigation</strong>：允许用户在应用程序中浏览、进入和退出不同内容的Fragment。Navigation能够实现从简单的按钮单击到更复杂的模式，如应用程序栏和导航抽屉。导航组件还通过遵循一套既定的原则来确保一致和可预测的用户体验。</p><p><strong>Lifecycles</strong>：Lifecycles是一个生命周期感知组件，当Activity或者Fragment的生命周期发生改变的时会，Lifecycles也会做出相应的生命周期状态的改变，它保存关于组件生命周期状态的信息(比如活动或片段)，并允许其他对象观察这种状态。</p><h3 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a><strong>ViewModel</strong></h3><p>刚入门，做了一个简短的案例，通过ViewModel管理UI产生的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两个按钮，实现+1，+2操作</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="comment">//用的是ViewModelProviders，可能需要引入Gradle配置</span></span><br><span class="line">        myVideModel = ViewModelProviders.of(<span class="keyword">this</span>).get(MyVideModel<span class="class">.<span class="keyword">class</span>)</span>;<span class="comment">//创建ViewModel对象</span></span><br><span class="line">        textView = findViewById(R.id.textView);</span><br><span class="line">        textView.setText(String.valueOf(myVideModel.num));</span><br><span class="line">        button1 = findViewById(R.id.button);</span><br><span class="line">        button2 = findViewById(R.id.button2);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                myVideModel.num ++;</span><br><span class="line">                textView.setText(String.valueOf(myVideModel.num));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                myVideModel.num += <span class="number">2</span>;</span><br><span class="line">                textView.setText(String.valueOf(myVideModel.num));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//MyVideModel自定义的ViewModel类，需要继承自ViewModel类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyVideModel</span> <span class="keyword">extends</span> <span class="title">ViewModel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ViewModel的出现主要为了解决两个问题：<br>1.当Actvitiy销毁重建过程中的数据恢复问题，虽然原来可以使用<code>onSaveInstanceState()</code>来完成，但是只支持能被序列化的数据而且是小量数据，对于大量数据则显得有点无力。<br>2.UI控制器的工作繁忙，UI控制器主要用于处理显示，交互，其他的额外操作可以委托给其他类完成，将不应该分配给UI的任务分离出来是必要的。</p><h3 id="LiveData"><a href="#LiveData" class="headerlink" title="LiveData"></a>LiveData</h3><img src="/2020/04/05/Android-1/3.png" class><p>LiveData是配合ViewModel使用的</p><p><strong>案例：</strong>实现一个点赞和踩的统计功能</p><p>ViewModelWithLiveData.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.thorine.livedata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.MutableLiveData;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewModelWithLiveData</span> <span class="keyword">extends</span> <span class="title">ViewModel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> MutableLiveData&lt;Integer&gt; LikedNumber;<span class="comment">//创建LiveData的方式</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MutableLiveData&lt;Integer&gt; <span class="title">getLikedNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (LikedNumber == <span class="keyword">null</span>)&#123;</span><br><span class="line">            LikedNumber = <span class="keyword">new</span> MutableLiveData&lt;&gt;();</span><br><span class="line">            LikedNumber.setValue(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> LikedNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLikedNumber</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        LikedNumber.setValue(LikedNumber.getValue() + n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.thorine.livedata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Observer;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ViewModelWithLiveData viewModelWithLiveData;</span><br><span class="line">    TextView textView;</span><br><span class="line">    ImageButton imageButtonLike , imageButtonDislike;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        textView = findViewById(R.id.textView);</span><br><span class="line">        imageButtonLike = findViewById(R.id.imageButton);</span><br><span class="line">        imageButtonDislike = findViewById(R.id.imageButton2);</span><br><span class="line"></span><br><span class="line">        viewModelWithLiveData = <span class="keyword">new</span> ViewModelProvider(<span class="keyword">this</span>).get(ViewModelWithLiveData<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        viewModelWithLiveData.getLikedNumber().observe(<span class="keyword">this</span>, <span class="keyword">new</span> Observer&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChanged</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                textView.setText(String.valueOf(integer));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        imageButtonLike.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                viewModelWithLiveData.addLikedNumber(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        imageButtonDislike.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                viewModelWithLiveData.addLikedNumber(-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端</p><img src="/2020/04/05/Android-1/4.png" class><p>并使用了Android Studio中基本的矢量图创建方法。</p><img src="/2020/04/05/Android-1/5.png" class><h3 id="DataBinding"><a href="#DataBinding" class="headerlink" title="DataBinding"></a>DataBinding</h3><p>1、首先需要在gradle中添加DataBinding依赖，具体做法，在defaultConfig下添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataBinding &#123;</span><br><span class="line">            enabled <span class="keyword">true</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>2、在xml布局中引入DataBinding，点击首行代码的小灯泡即可。</p><p>3、在MainActivity.java中修改代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//setContentView(R.layout.activity_main);</span></span><br><span class="line">binding = DataBindingUtil.setContentView(<span class="keyword">this</span>,R.layout.activity_main);</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">binding.setData(myViewModel);</span><br><span class="line">binding.setLifecycleOwner(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><p>4、xml布局文件的<code>&lt;data&gt;</code>中添加</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;data&gt;</span><br><span class="line">&lt;variable</span><br><span class="line">name=<span class="string">"data"</span></span><br><span class="line">type=<span class="string">"com.thorine.databinding.MyViewModel"</span> /&gt;</span><br><span class="line">&lt;/data&gt;</span><br></pre></td></tr></table></figure><p>textView中获取数值：<code>android:text=&quot;@{String.valueOf(data.number)}&quot;</code></p><p>Button中绑定监听事件：<code>android:onClick=&quot;@{()-&gt;data.add()}&quot;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开始学习Android Jetpack相关知识。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://iceWind-R.github.io/categories/Android/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="Android" scheme="http://iceWind-R.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>自我改造计划（综述）</title>
    <link href="http://icewind-r.github.io/2020/04/04/%E8%87%AA%E6%88%91%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92%EF%BC%88%E7%BB%BC%E8%BF%B0%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/04/04/%E8%87%AA%E6%88%91%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92%EF%BC%88%E7%BB%BC%E8%BF%B0%EF%BC%89/</id>
    <published>2020-04-04T07:33:27.000Z</published>
    <updated>2020-04-04T10:25:04.485Z</updated>
    
    <content type="html"><![CDATA[<p>希望自己不再堕落，每天都有一点收获。</p><p>全文主旨：<strong>戒掉手机</strong>。</p><a id="more"></a><hr><p>每天什么都不想做，只想躺着呆着玩手机？</p><h2 id="提前透支自己的人生，体会过后的空虚"><a href="#提前透支自己的人生，体会过后的空虚" class="headerlink" title="提前透支自己的人生，体会过后的空虚"></a>提前透支自己的人生，体会过后的空虚</h2><blockquote><p>“大半的人在二十岁或三十岁上就死了。一过这个年龄，他们只变了自己的影子。以后的生命不过是用来模仿自己，把以前真正有人味儿的时代所说的，所做的，所想的，所喜欢的，一天天的重复，而且重复的方式越来越机械，越来越脱腔走板。”——《约翰·克里斯多夫》罗曼·罗兰</p></blockquote><h2 id="注意力被过度消散后的不专注"><a href="#注意力被过度消散后的不专注" class="headerlink" title="注意力被过度消散后的不专注"></a>注意力被过度消散后的不专注</h2><p>信息泛滥让人的专注度下降，但真正能够让你的大脑汲取到营养的，都是需要高度且长时间专注的事，比如读书。</p><p>一个简单的问题：<strong>你多久没有安下心来，好好的读一本书了？</strong></p><p>尝试先从简单的事情做起，比如听一听TED一些心理篇的演讲。</p><h2 id="快感刺激阈值被提高后的慵懒"><a href="#快感刺激阈值被提高后的慵懒" class="headerlink" title="快感刺激阈值被提高后的慵懒"></a>快感刺激阈值被提高后的慵懒</h2><p>我们用手机逃避自己的现状，我们也在利用玩手机来拖延、逃避眼前待解决的问题。</p><p>玩手机来饮鸠止渴，回光返照，越是Deadline，越玩的疯狂，恶性循环。</p><h2 id="耐心点去感受不同阶段的人生体会"><a href="#耐心点去感受不同阶段的人生体会" class="headerlink" title="耐心点去感受不同阶段的人生体会"></a>耐心点去感受不同阶段的人生体会</h2><p>短暂地关闭外界感知通道，离开手机，反而有助于你的思维变得更清晰，更透彻。</p><p>​    而且啊，其实你即使不去关注那些，也没什么影响的。</p><p>​    就算你每隔五秒打开一次微信，没事找你的人还是不会找你。</p><p>​    就算你每天都能刷出瀑布般的信息流，和你无关的事还是和你无关。</p><img src="/2020/04/04/%E8%87%AA%E6%88%91%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92%EF%BC%88%E7%BB%BC%E8%BF%B0%EF%BC%89/1.jpg" class><h2 id="直面空虚和抑郁，借助它们反思"><a href="#直面空虚和抑郁，借助它们反思" class="headerlink" title="直面空虚和抑郁，借助它们反思"></a>直面空虚和抑郁，借助它们反思</h2><blockquote><p>为什么别人能做好的事情我做不好？</p><p>为什么别人跟着建民慢慢成长，我却连队伍都跟不上？</p></blockquote><p>人只有在抑郁的时候，才愿意思考。</p><p>是真的，先借助负面情绪，才能摆脱掉负面情绪。</p><h2 id="逼自己去做点慢节奏的事"><a href="#逼自己去做点慢节奏的事" class="headerlink" title="逼自己去做点慢节奏的事"></a>逼自己去做点慢节奏的事</h2><p>不要觉得发呆是浪费时间，也不要觉得停下来就是不思进取。</p><p>很多时候，停下来，等一等，看看四周，反思下过往，思考下未来，你会有很多错过的新发现。</p><p>一个小时也没看进去两页书，这没啥不好意思的。相比起自暴自弃刷手机，往大脑里塞一个小时的抖音神曲和情绪垃圾，对着书页放空大脑都要好很多。允许自己慢慢来，你迟早可以一个小时看五页、十页、二十页……</p><p>关键在于，屏蔽掉外界的信息，好好感受自己思维和注意力的游荡。前期你可以不过多干涉，就让自己静静的观察，并重新审视那些不断黏着你注意力的事物，再问问自己：“它配吗？”</p><p><strong>找回注意力，就是找回对时间的掌控感。</strong></p><p><strong>把步调调慢后，其实生活中那种“疲于奔命”的感觉也消失了。</strong></p><p>因为只有停下来，时间的流动才变得格外明显。只有慢慢来，时间的报答才有空酝酿成熟。</p><p>毕竟，很多名人的slogan都是：“做时间的朋友。”</p><p><strong>从今天起，每天做好属于自己的事情，总结记录，每天反思，望坚持。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;希望自己不再堕落，每天都有一点收获。&lt;/p&gt;
&lt;p&gt;全文主旨：&lt;strong&gt;戒掉手机&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reinvent" scheme="http://iceWind-R.github.io/categories/Reinvent/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>清明</title>
    <link href="http://icewind-r.github.io/2020/04/04/%E6%B8%85%E6%98%8E/"/>
    <id>http://icewind-r.github.io/2020/04/04/%E6%B8%85%E6%98%8E/</id>
    <published>2020-04-04T02:00:32.000Z</published>
    <updated>2020-04-04T08:02:35.541Z</updated>
    
    <content type="html"><![CDATA[<p>记录已经过完的四分之一个2020年。</p><a id="more"></a><hr><p>又是一个清明时节，但这次显然多了一层不一样的含义</p><p>宅家三月，似乎还没有做些什么，2020年就过了四分之一</p><p>但这更是与死神抢人的三个月，国内疫情稍稍好转，国外疫情却大行其道</p><p>我想过见证历史，但没想到，我会见证这样的历史</p><p>全国默哀，举国悼念</p><p>数不清的天使为我们保驾护航</p><p>那有什么英雄，不过只是在死神手里抢人的一个个普通人罢了</p><br><p>窗外狂风怒号</p><p>号笛拉响</p><p>天地动容</p><br><p>人类的赞歌是勇气的赞歌</p><p>人类的伟大是勇气的伟大</p><br><blockquote><p>愿逝者安息</p><p>愿生者奋发</p><p>愿祖国昌盛</p></blockquote><br><p>消逝的星星，你们永远在我心中</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录已经过完的四分之一个2020年。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://iceWind-R.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="idea" scheme="http://iceWind-R.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础知识（五）</title>
    <link href="http://icewind-r.github.io/2020/03/30/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/30/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%94%EF%BC%89/</id>
    <published>2020-03-30T07:41:21.000Z</published>
    <updated>2020-03-31T14:07:52.055Z</updated>
    
    <content type="html"><![CDATA[<p>总结展开PHP中文件加载和错误处理的具体操作。</p><a id="more"></a><hr><h2 id="一、文件加载"><a href="#一、文件加载" class="headerlink" title="一、文件加载"></a>一、文件加载</h2><h3 id="1、文件加载的含义"><a href="#1、文件加载的含义" class="headerlink" title="1、文件加载的含义"></a>1、文件加载的含义</h3><p>将一个别的文件包含到当前文件中，成为当前文件运行过程中的一部分。通常，一些公共的代码，在多个页面都需要用到的时候，会做成一个独立的文件。然后在不同的页面需要用到的时候，直接载入进来就可以了。</p><h3 id="2、文件加载的四种方式"><a href="#2、文件加载的四种方式" class="headerlink" title="2、文件加载的四种方式"></a>2、文件加载的四种方式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">''</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">''</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">''</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">''</span>;</span><br><span class="line"><span class="comment">#其中的参数都是加载文件的路径（相对路径或绝对路径）</span></span><br></pre></td></tr></table></figure><p>获取物理路径（绝对路径）的方式：</p><p><code>__DIR__</code>：表示当前文件所在路径，由它可以构建出绝对路径。</p><p><code>getcwd()</code>：表示当前正访问的网页路径（当前工作目录），由它也可以构建绝对路径。</p><p><strong>四种载入方式</strong>：一般来说，如果被载入的文件内容，是后续代码运行的必备前提，则应该使用require载入；如果被载入的文件内容，只需要（或只允许）出现一次，则应该使用“xxx_once”载入。include错误级别低，不会阻止代码运行。</p><h2 id="二、错误处理"><a href="#二、错误处理" class="headerlink" title="二、错误处理"></a>二、错误处理</h2><h3 id="错误分类"><a href="#错误分类" class="headerlink" title="错误分类"></a>错误分类</h3><p>语法错误：运行前出错。</p><p>运行时错误：语法没错，执行过程中出错。</p><p>逻辑错误：运行结果出错。</p><h3 id="常见的错误代号"><a href="#常见的错误代号" class="headerlink" title="常见的错误代号"></a>常见的错误代号</h3><p>E_NOTICE: 提示性错误，轻微，继续执行后面程序。</p><p>E_WARNING:警告，稍微严重，后面的程序继续执行。</p><p>E_ERROR:严重错误/致命错误，后面程序不继续执行。</p><p>E_PARSE:语法错误，直接不运行程序。</p><p>E_USER_NOTICE，E_USER_WARNING，E_USER_ERROR:用户自定义的提示、警告和严重错误。</p><p>E_ALL：它是一个代表“所有”错误的代号。</p><p>这些代号都是系统常量。</p><h3 id="错误触发"><a href="#错误触发" class="headerlink" title="错误触发"></a>错误触发</h3><p>程序本身有错时，运行时会报错提示，但如果程序没错，而不符合预期结果，就可以主动触发一个错误，也就是说主动创建一个错误，E_USER_NOTICE，E_USER_WARNING，E_USER_ERROR等，那么如何触法用户错误呢？</p><p>自定义错误触发语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trigger_error(<span class="string">"自定义错误提示内容"</span>,自定义错误的代号);</span><br></pre></td></tr></table></figure><p><strong>案例演示</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reg_user</span><span class="params">($age)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($age &gt; <span class="number">120</span> || $age &lt;<span class="number">0</span>)&#123;</span><br><span class="line">        trigger_error(<span class="string">"年龄不符合规范"</span>,E_USER_NOTICE);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"用户资料审核通过！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">reg_user(<span class="number">150</span>);</span><br></pre></td></tr></table></figure><h3 id="错误显示"><a href="#错误显示" class="headerlink" title="错误显示"></a>错误显示</h3><p>如果有错误发生（触发了错误），默认情况下会被显示在页面（即输出的结果页面）。</p><ol><li><p>设置display_errors以决定是否显示错误</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'display_errors'</span>,<span class="number">1</span>或<span class="number">0</span>);<span class="comment">//1表示显示</span></span><br></pre></td></tr></table></figure></li><li><p>设置error_reporting以决定显示那些错误（错误代号：E_NOTICE…）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'error_reporting'</span>，错误代号<span class="number">1</span> | 错误代号<span class="number">2</span> ...)</span><br></pre></td></tr></table></figure></li></ol><h3 id="自定义错误处理"><a href="#自定义错误处理" class="headerlink" title="自定义错误处理"></a>自定义错误处理</h3><p>具体做法，分两步：</p><ol><li>声明错误发生时，由我们自己来处理——设定一个错误处理的函数名。</li><li>定义该函数，在函数中详细设定错误的处理情况：怎么显示，显示什么，怎么记录，记录什么。</li></ol><p><strong>注意：</strong>自定义错误只能处理“非致命错误”。</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义错误</span></span><br><span class="line"><span class="comment">//set_error_handler("自定义的处理错误的函数的名字");</span></span><br><span class="line">set_error_handler(<span class="string">"my_error_handler"</span>);</span><br><span class="line"><span class="comment">//定义该函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_error_handler</span><span class="params">($errCode,$errMsg,$errFile,$errLine)</span></span>&#123;</span><br><span class="line">    <span class="comment">//参数解释：errCode:错误代码，errMsg：错误信息，errFile：错误文件，errLine：错误行号</span></span><br><span class="line">    <span class="comment">//此形参顺序固定，而且是由系统自动调用并传入参数</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误代码：'</span>.$errCode.<span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误信息：'</span>.$errMsg.<span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误文件：'</span>.$errFile.<span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'错误行号：'</span>.$errLine.<span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"v1 = $v1"</span>;<span class="comment">//未定义的变量</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'./no-this-file.php'</span>;<span class="comment">//打开不存在的文件</span></span><br><span class="line">l1();<span class="comment">//调用未定义的函数</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结展开PHP中文件加载和错误处理的具体操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB课程总结（四）</title>
    <link href="http://icewind-r.github.io/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-03-27T08:23:58.000Z</published>
    <updated>2020-05-09T02:22:07.058Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章总结MATLAB程序设计，主要涉及代码文件方面。</p><a id="more"></a><hr><h2 id="程序的三个结构"><a href="#程序的三个结构" class="headerlink" title="程序的三个结构"></a>程序的三个结构</h2><h3 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h3><h4 id="1、数据的输入"><a href="#1、数据的输入" class="headerlink" title="1、数据的输入"></a>1、数据的输入</h4><p>从键盘输入数据，则可以使用input函数来进行，调用格式为：</p><p><code>A = input(提示信息，选项);</code></p><p>其中提示信息为一个字符串，用于提示用户输入数据。</p><h4 id="2、数据的输出"><a href="#2、数据的输出" class="headerlink" title="2、数据的输出"></a>2、数据的输出</h4><p>命令窗口输出函数主要有disp函数，其调用格式为：</p><p><code>disp(输出项）</code></p><p>其中输出项既可以为字符串，也可以为矩阵。</p><p>若输出多个数据，并显示提示信息，则需要：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">disp</span>([<span class="string">'提示信息'</span>,num2str(A)]); <span class="comment">%num2str函数将任何数值转换为字符</span></span><br></pre></td></tr></table></figure><p><strong>例题</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = input(<span class="string">'a=?'</span>);</span><br><span class="line">b = input(<span class="string">'b=?'</span>);</span><br><span class="line">c = input(<span class="string">'c=?'</span>);</span><br><span class="line">d = b*b<span class="number">-4</span>*a*c;</span><br><span class="line">x = [(-b+<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a),(-b-<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a)];</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">'x1='</span>,num2str(x(<span class="number">1</span>)),<span class="string">',x2='</span>,num2str(x(<span class="number">2</span>))]);</span><br><span class="line">程序输出为：</span><br><span class="line">a=?<span class="number">4</span></span><br><span class="line">b=?<span class="number">78</span></span><br><span class="line">c=?<span class="number">54</span></span><br><span class="line">x1=<span class="number">-0.7188</span>,x2=<span class="number">-18.7812</span><span class="comment">%注意disp函数的用法</span></span><br></pre></td></tr></table></figure><h4 id="3、程序的暂停"><a href="#3、程序的暂停" class="headerlink" title="3、程序的暂停"></a>3、程序的暂停</h4><p>程序执行过程中暂停，可用pause函数，其调用格式为：</p><p><code>pause（延迟描述）</code></p><p>如果省略延迟时间，直接使用pause，则将暂停程序，直到用户按任一键后程序继续执行。</p><p>若要强行中止程序的运行可按Ctrl+C键。</p><h3 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h3><h4 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span></span><br><span class="line">语句组 <span class="number">1</span></span><br><span class="line"><span class="keyword">elseif</span> 条件<span class="number">2</span></span><br><span class="line">语句组 <span class="number">2</span> …</span><br><span class="line"><span class="keyword">elseif</span> 条件m</span><br><span class="line">语句组 m</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句组n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> 表达式</span><br><span class="line"><span class="keyword">case</span> 表达式<span class="number">1</span></span><br><span class="line">语句组<span class="number">1</span></span><br><span class="line"><span class="keyword">case</span> 表达式<span class="number">2</span></span><br><span class="line">语句组<span class="number">2</span> …</span><br><span class="line"><span class="keyword">case</span> 表达式m</span><br><span class="line">语句组m</span><br><span class="line"><span class="keyword">otherwise</span></span><br><span class="line">语句组 n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>switch子句后面的表达式应为一个标量或一个字符串；case子句后面的表达式不仅可以为一个标量或一个字符</p><p>串，还可以为一个元胞矩阵。</p><h4 id="try"><a href="#try" class="headerlink" title="try"></a>try</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">语句组<span class="number">1</span></span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">语句组<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>try语句先试探性执行语句组1，如果在执行过程中出现错误，则将错误信息赋给保留的lasterr变量，并转去执行语句组2。</p><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 循环变量 =表达式<span class="number">1</span>：表达式<span class="number">2</span>：表达式<span class="number">3</span></span><br><span class="line">循环体语句</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其中表达式1的值为循环变量的初值，表达式2的值为步长，表达式3的值为循环变量的终值。步长为1时，表达式2可以省略。</p><p><strong>例题</strong>（注意这个例题的非循环方法）</p><img src="/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/4.png" class><h4 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>条件</span><br><span class="line">循环体语句</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="break语句和continue语句"><a href="#break语句和continue语句" class="headerlink" title="break语句和continue语句"></a>break语句和continue语句</h4><p>它们一般与if语句配合使用。</p><p>break语句用于终止循环的执行。</p><p>当在循环体内执行到该语句时，程序将跳出循环，继续执行循环语句的下一语句。</p><p>continue语句控制跳过循环体中的某些语句。</p><p>当在循环体内执行到该语句时，程序将跳过循环体中所有剩下的语句，继续下一次循环。</p><h2 id="M文件的分类"><a href="#M文件的分类" class="headerlink" title="M文件的分类"></a>M文件的分类</h2><p>除了在命令窗口直接操作，我们可以创建文件（M文件）来进行调用，使程序结构简单，编程效率高。</p><p>用Matlab语言编写的程序，称为M文件。</p><p>是由若干Matlab命令组合在一起构成的，它可以完成某些操作，也可以实现某种算法。</p><p>◼ M文件根据调用方式的不同分为两类：</p><p>​    命令文件（Script File）</p><p>​    函数文件（Function File） </p><p>◼ 它们的扩展名都是.m</p><h3 id="命令文件和函数文件的区别"><a href="#命令文件和函数文件的区别" class="headerlink" title="命令文件和函数文件的区别"></a><strong>命令文件和函数文件的区别</strong></h3><p>命令文件没有输入参数，也不返回输出参数；函数文件可以带输入参数，也可以返回输出参数。</p><p>◼ 命令文件对工作空间中的变量进行操作，文件中所有命令的执行结果也返回工作空间中；函数文件中定义的变</p><p>​    量为局部变量，当函数文件执行完毕时，这些变量也被清除。</p><p>◼ 命令文件可以直接运行；函数文件不能直接运行，要以函数调用的方式来调用它。</p><h3 id="函数文件"><a href="#函数文件" class="headerlink" title="函数文件"></a>函数文件</h3><p>函数文件是另一种形式的M文件，每一个函数文件都定义一个函数。Matlab提供的标准函数大部分是由函数文件定义的。</p><h4 id="函数文件的基本结构"><a href="#函数文件的基本结构" class="headerlink" title="函数文件的基本结构"></a><strong>函数文件的基本结构</strong></h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 输出形参表 = 函数名（输入形参表）</span></span><br><span class="line">注释说明部分</span><br><span class="line">函数体语句</span><br></pre></td></tr></table></figure><p>其中，以function开头的一行为引导行，表示该M文件是一个函数文件。当输出形参多于一个时，应该用<strong>方括号</strong>括起来。</p><p><strong>注意：</strong></p><ol><li><p>关于函数文件名</p><p>函数文件名通常由函数名再加上扩展名.m组成。</p><p>当函数文件名与函数名不同时，Matlab将忽略函数名而确认文件名，因此调用时<strong>使用函数文件名</strong>。</p></li><li><p>关于注释说明部分</p><p>  注释说明包括3部分：</p><p>  ① 紧随引导行之后以%开头的第一注释行。</p><p>  这一行一般包括大写的函数文件名和函数功能简要描述，供lookfor关键词查询和help在线帮助时使用。</p><p>  ② 第一注释行及之后连续的注释行。</p><p>  通常包括函数输入/输出参数的含义及调用格式说明等信息，构成全部在线帮</p><p>  ③ 与在线帮助文本相隔一空行的注释行。包括函数文件编写和修改的信息，如作者和版本等。</p></li><li><p>关于return语句<br>  如果在函数文件中插入了return语句，则执行到该语句就结束函数的执行，流程转至调用该函数的位置。通常也不使用return语句。</p></li></ol><p><strong>例题</strong>：编写函数文件，求半径为r的圆的面积和周长。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">函数文件如下：</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[s,p]</span> = <span class="title">fcircle</span><span class="params">(r)</span></span></span><br><span class="line"><span class="comment">% FCIRCLE calculate the area and perimeter of a circle of radii r</span></span><br><span class="line"><span class="comment">% r 圆半径</span></span><br><span class="line"><span class="comment">% s 圆面积</span></span><br><span class="line"><span class="comment">% p 圆周长</span></span><br><span class="line"><span class="comment">%2006年2月30日编</span></span><br><span class="line">s = <span class="built_in">pi</span>*r*r;</span><br><span class="line">p = <span class="number">2</span>*<span class="built_in">pi</span>*r;</span><br><span class="line"></span><br><span class="line">将以上函数文件以文件名fcircle.m保存，然后在命令窗口调用。</span><br><span class="line">[s,p] = fcircle(<span class="number">10</span>)</span><br><span class="line">输出结果是：</span><br><span class="line">s = </span><br><span class="line"><span class="number">314.1593</span></span><br><span class="line">p =</span><br><span class="line"><span class="number">62.8319</span></span><br><span class="line"></span><br><span class="line">采用help命令或lookfor命令可以显示出注释说明部分的内容。</span><br><span class="line">help fcircle</span><br><span class="line">屏幕显示</span><br><span class="line">FCIRCLE calculate the area and perimeter of a circle of radii r</span><br><span class="line">r 圆半径</span><br><span class="line">s 圆面积</span><br><span class="line">p 圆周长</span><br></pre></td></tr></table></figure><h4 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h4><p>函数调用的一般格式是：</p><p><strong>[输出实参表] = 函数名(输入实参表）</strong></p><p>注意：函数调用时，各实参出现的顺序、个数，应与函数定义时相同。</p><p>在Matlab中，函数可以嵌套调用，即一个函数可以调用别的函数。一个函数调用自身称为函数的递归调用。</p><h4 id="函数参数的可调性"><a href="#函数参数的可调性" class="headerlink" title="函数参数的可调性"></a>函数参数的可调性</h4><p>Matlab在函数调用上有一个与一般高级语言不同之处：</p><p>函数所传递参数数目的可调性，即参数的数量可以改变。</p><p>在调用函数时，Matlab用两个预定义变量<strong>nargin</strong>和<strong>nargout</strong>分别记录调用该函数时的输入实参和输出实参的个数。</p><p><strong>例子</strong></p><img src="/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/1.png" class><h4 id="全局变量与局部变量"><a href="#全局变量与局部变量" class="headerlink" title="全局变量与局部变量"></a><strong>全局变量与局部变量</strong></h4><p>Matlab中，函数文件中的变量是局部变量。</p><p>如在若干函数中，都把某一变量定义为全局变量，那么这些函数将共用这个变量。</p><p>全局变量的作用域是整个Matlab的工作空间，所有函数都可以对它进行存取和修改。</p><p>全局变量用<strong>global</strong>命令定义，格式为：</p><p><code>global 变量名</code></p><img src="/2020/03/27/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E5%9B%9B%EF%BC%89/2.png" class>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章总结MATLAB程序设计，主要涉及代码文件方面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/categories/MATLAB/"/>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/tags/MATLAB/"/>
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础知识（四）</title>
    <link href="http://icewind-r.github.io/2020/03/27/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/27/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-03-26T22:42:02.000Z</published>
    <updated>2020-05-20T00:30:20.240Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章总结php代码嵌套到html中所需的<strong>标签语法</strong>，还有php中<strong>函数</strong>的定义和使用。</p><a id="more"></a><hr><h2 id="标签语法"><a href="#标签语法" class="headerlink" title="标签语法"></a>标签语法</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><strong>标签语法</strong>，指当PHP代码嵌入到HTML中时，为了让PHP代码的结构更加符合HTML的规范而设定的语法结构。</p><ul><li><p>PHP标签语法不是所有的结构都存在。</p></li><li><p>PHP标签语法只提供了两种针对<code>{}</code>的解决方案。</p><ul><li>分支标签：即当分支语法出现时，可以使用标签语法代替。</li><li>循环标签：即当循环语法出现时，可以使用标签语法代替。</li></ul></li><li><p>标签语法规则</p><ul><li>当分支或循环的<code>{</code>出现时，使用冒号<code>:</code>代替。</li><li>当分支或循环的<code>}</code>出现时，使用相应的<code>end + 标记内容;</code>代替。</li></ul></li><li><p>PHP提供的标记语法</p><ul><li>IF分支</li><li>switch分支</li><li>while循环</li><li>for循环</li><li>foreach循环</li><li>语法格式：<ul><li>起始标记（if为例）：<code>if(条件表达式):</code></li><li>结束标记（if为例）：<code>endif;</code></li></ul></li></ul></li></ul><h3 id="案例（九九乘法表）"><a href="#案例（九九乘法表）" class="headerlink" title="案例（九九乘法表）"></a><strong>案例（九九乘法表）</strong></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;九九乘法表&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">for</span> ($i=<span class="number">1</span>; $i &lt;= <span class="number">9</span>; $i++):<span class="meta">?&gt;</span></span><br><span class="line">&lt;tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">for</span> ($j = <span class="number">1</span>; $j &lt; $i; $j++):<span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"$j * $i = "</span>.$j * $i;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endfor</span>;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endfor</span>;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>定义方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">(参数)</span></span>&#123;</span><br><span class="line">    函数体(代码块);</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法：<code>函数名()</code>，即可。</p><p>return可以返回任何类型的数据。</p><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><p>如果实际传入的参数没有提供，则会使用默认值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">($num1 = <span class="number">0</span>,$num2 = <span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量的引用传递"><a href="#变量的引用传递" class="headerlink" title="变量的引用传递"></a>变量的引用传递</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">($n1,&amp;$n2)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>函数允许使用时实参对于形参，只是不用而已，但实参不能少于形参。</p><p>下面介绍函数的一些高级用法。</p><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><h4 id="局部作用域（局部变量）"><a href="#局部作用域（局部变量）" class="headerlink" title="局部作用域（局部变量）"></a>局部作用域（局部变量）</h4><p>在其他结构（函数）内部定义的作用域。</p><h4 id="全局作用域（全局变量）"><a href="#全局作用域（全局变量）" class="headerlink" title="全局作用域（全局变量）"></a>全局作用域（全局变量）</h4><p>未在其他结构（函数）内部定义的作用域。</p><h4 id="超全局作用域（超全局变量）"><a href="#超全局作用域（超全局变量）" class="headerlink" title="超全局作用域（超全局变量）"></a>超全局作用域（超全局变量）</h4><p>即在脚本中的任意位置。</p><p>超全局变量：系统定义的预定义变量。</p><p>全局变量会自动吸纳到超全局``$GLOBALS`，可以利用超全局变量来保存数据，让数据不受作用域限制。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此时是给超全局变量增加一个var元素，相当于定义了一个全局变量。</span></span><br><span class="line">$GLOBALS[<span class="string">'var'</span>] = <span class="string">'hello world'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$v1 = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//echo $v1;报错</span></span><br><span class="line">    <span class="keyword">echo</span> $GLOBALS[<span class="string">'v1'</span>];<span class="comment">//在函数体内使用超全局变量</span></span><br><span class="line">&#125;</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p>$GLOBALS会自动包含全局变量，同时还有以下超全局变量。</p><ul><li>$_GET：自动接收GET提交的数据</li><li>$_POST：自动接收POST提交的数据</li><li>$_COOKIE：自动接收cookie数据</li><li>$_FILES：自动接收文件上传的数据</li><li>$GLOBALS：自己包含自己</li></ul><h4 id="一个特殊的关键字global"><a href="#一个特殊的关键字global" class="headerlink" title="一个特殊的关键字global"></a>一个特殊的关键字global</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$v1 = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $v1;</span><br><span class="line">    <span class="keyword">echo</span> $v1;</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p>其含义是在函数内定义一个局部变量，并且与全局变量同名，处于“引用关系”，可以直接使用。</p><p><strong>总结</strong>：$GLOBALS数组（变量）和global关键字都能实现：在局部作用域使用全局变量。</p><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>概念：在函数内部定义，可以在函数多次调用时共用的局部变量</p><ul><li>使用static关键字修饰</li><li>是在函数内部定义的局部变量</li><li>在函数加载时初始化（只初始化一次）</li><li>可以在同一个函数多次调用时共享数据的变化</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">#记录函数被调用了多少次</span></span><br><span class="line">    $count1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> $count2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">echo</span> ++$count1,++$count2,<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">display();<span class="comment">#11</span></span><br><span class="line">display();<span class="comment">#12</span></span><br></pre></td></tr></table></figure><p><strong>使用场景</strong></p><ul><li>数据需要函数多次共享</li><li>递归存储数据的时候</li></ul><h3 id="强制类型"><a href="#强制类型" class="headerlink" title="强制类型"></a>强制类型</h3><p>PHP可以利用强类型来规范函数的输入（参数）和输出（返回值）</p><ul><li>强类型参数</li><li>强类型返回值</li></ul><h4 id="强类型参数"><a href="#强类型参数" class="headerlink" title="强类型参数"></a>强类型参数</h4><p>在定义函数时给形参设定类型</p><ul><li><p>类型规范是PHP的8种类型</p></li><li><p>强类型的作用</p><ul><li>实参必须是形参规定类型</li><li>保护函数内部运行逻辑正确</li><li>省区函数内部判定逻辑</li><li>提升解析效率</li></ul></li><li><p>强类型语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">(类型 变量名)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(float $a,float $b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $a + $b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>强类型的选择</p><ul><li>PHP是弱类型语言，会自动转换类型，一般可以不用。    </li><li>不想在内部进行过多的逻辑判断，可以适用强类型参数进行限定。</li></ul></li></ul><h4 id="强类型返回值"><a href="#强类型返回值" class="headerlink" title="强类型返回值"></a>强类型返回值</h4><p>指在函数定义时就规定好函数的返回值类型</p><ul><li><p>强类型是PHP的8种类型</p></li><li><p>强类型规定后，函数内部的返回值必须是指定类型</p></li><li><p>想让强类型完全生效，需要提前声明</p><ul><li>declare(strict_types = 1)</li></ul></li><li><p>强类型返回值语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">()</span>:返回值类型</span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_int</span><span class="params">($n)</span>:<span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_integer($n))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><p>PHP提供了一种对于参数不固定的处理方式</p><ul><li>PHP在5.6以后提供了一种主动获取多余的实参的方式</li><li>可以使用<code>...</code>符号实现数组数据的拆分</li></ul><p><strong>实例：求两个（或多个）数的和</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义函数：多余的形参使用...$args保存</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_sum</span><span class="params">($a,$b,...$args)</span></span>&#123;</span><br><span class="line">    <span class="comment">#2、$args会接受多出的参数（$a和$b为固定参数）</span></span><br><span class="line">    <span class="comment">#3、在函数内部可以使用$args访问多出的实参</span></span><br><span class="line">    $sum = $a + $b;</span><br><span class="line">    <span class="keyword">foreach</span>($args <span class="keyword">as</span> $v)&#123;</span><br><span class="line">        $sum += $v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以将实参数组拆分构成多个数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_sub</span><span class="params">($a,$b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $a = $b;</span><br><span class="line">&#125;</span><br><span class="line">$arr = [<span class="number">10</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">echo</span> my_sub(...$arr);<span class="comment">#输出6</span></span><br></pre></td></tr></table></figure><p>获取所有参数的和</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $num = func_get_args();<span class="comment">//获取参数，是一个数组变量，保存在num中</span></span><br><span class="line">    $count = count($num);<span class="comment">//计算数组个数，即参数个数</span></span><br><span class="line">    <span class="comment">//$count = func_num_args();获取参数个数</span></span><br><span class="line">    $sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>;$i&lt;$count;$i++) &#123;</span><br><span class="line">        $sum+=$num[$i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $sum;</span><br><span class="line">&#125;</span><br><span class="line">$sum = sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'可变参数和：'</span>.$sum;</span><br></pre></td></tr></table></figure><h3 id="可变函数"><a href="#可变函数" class="headerlink" title="可变函数"></a>可变函数</h3><p>即一个变量所保存的值刚好是另外一个函数的名字，那么可以通过变量直接访问函数</p><ul><li>变量的值是一个函数名（字符串）</li><li>变量+()就可以当作函数名访问函数</li></ul><p><strong>示例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'hello world!'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$var = <span class="string">'display'</span>;<span class="comment">#变量名为一个函数的名字</span></span><br><span class="line"></span><br><span class="line">$var();<span class="comment">#即调用display()函数</span></span><br></pre></td></tr></table></figure><p>实际运用：通常我们是将自定义的函数作为系统函数或者其他位置的回调函数（callback）使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#取得一个数的绝对值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jdz</span><span class="params">($n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $n &lt; <span class="number">0</span> ? -$n : $n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#求两个数的绝对值的和</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum_jdz</span><span class="params">($a,$b,$func)</span></span>&#123;</span><br><span class="line">    <span class="comment">#利用外部的$func函数(回调函数)来实现$a和$b的绝对值求和</span></span><br><span class="line">    <span class="keyword">return</span> $func($a) + $func($b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> sum_jdz(<span class="number">-1</span>,<span class="number">-1</span>,<span class="string">'jdz'</span>);<span class="comment">#输出2</span></span><br></pre></td></tr></table></figure><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><ul><li>简单匿名函数</li><li>回调匿名函数</li><li>匿名函数闭包</li></ul><h4 id="简单匿名函数"><a href="#简单匿名函数" class="headerlink" title="简单匿名函数"></a>简单匿名函数</h4><p>即函数没有名字，使用变量保存函数的内存地址</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">变量 = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    函数体</span><br><span class="line">    <span class="keyword">return</span> 返回值</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line">变量();</span><br></pre></td></tr></table></figure><h4 id="回调匿名函数"><a href="#回调匿名函数" class="headerlink" title="回调匿名函数"></a>回调匿名函数</h4><p>指直接将匿名函数定义在函数的实参中，当作一个实参传递给形参</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#求数组元素的所有立方</span></span><br><span class="line">$arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="comment">#定义一个函数：能够取得数组的所有立方</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_cube</span><span class="params">($arr,$cube)</span></span>&#123;</span><br><span class="line">    $list = [];<span class="comment">#存储结果</span></span><br><span class="line">    <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $value)&#123;</span><br><span class="line">        $list[] = $cube($value);<span class="comment">#调用计算立方的函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $list;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#直接传一个匿名函数</span></span><br><span class="line">$res = my_cube($arr,<span class="function"><span class="keyword">function</span><span class="params">($num)</span></span>&#123;<span class="keyword">return</span> $num ** <span class="number">3</span>;&#125;);</span><br><span class="line">print_r($res);</span><br></pre></td></tr></table></figure><h4 id="匿名函数闭包"><a href="#匿名函数闭包" class="headerlink" title="匿名函数闭包"></a>匿名函数闭包</h4><p><strong>概念</strong></p><p>闭包是一个定义在函数内，能都读取其他函数内部变量的函数（闭包函数）</p><ul><li>函数定义在某个函数内部</li><li>内部函数是匿名函数</li><li>内部函数访问外部函数的局部变量<ul><li>不能直接访问，访问需要使用use关键字</li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $inner = <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $str;</span><br><span class="line">    &#125;;</span><br><span class="line">    $inner();</span><br><span class="line">&#125;</span><br><span class="line">outer(<span class="string">'hello world!'</span>);<span class="comment">#输出hello world!</span></span><br></pre></td></tr></table></figure><p>闭包函数可以返回给外部函数调用，这样可以使得闭包所占用的外部函数资源不被释放</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $inner = <span class="function"><span class="keyword">function</span><span class="params">($s)</span> <span class="title">use</span> <span class="params">($str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $str.$s;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> $inner;</span><br><span class="line">&#125;</span><br><span class="line">$res = outer(<span class="string">'hello'</span>);</span><br><span class="line">$res(<span class="string">'world'</span>);<span class="comment">#输出helloworld</span></span><br></pre></td></tr></table></figure><p><strong>原理</strong></p><ul><li>函数outer调用结束，没有释放内存</li><li>outer返回了一个内部闭包函数的引用，所以函数不会释放</li><li>$inner内部闭包函数引用了一个外部函数的局部变量，所以outer也不能释放$str</li><li>$res(‘world’)找到函数执行，并且应用了之前函数的局部变量$str，所以组合输出helloworld。</li></ul><h2 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h2><p><strong>常用的系统函数列表</strong></p><h3 id="1、常见输出类"><a href="#1、常见输出类" class="headerlink" title="1、常见输出类"></a>1、常见输出类</h3><ul><li>echo：不需要使用括号</li><li>print_r：输出变量的结构</li><li>var_dump：详细打印变量的结构和数据</li><li>exit/die：输出消息并终止脚本执行</li></ul><h3 id="2、常见日期类"><a href="#2、常见日期类" class="headerlink" title="2、常见日期类"></a>2、常见日期类</h3><ul><li><p>time：获取当前时间的时间戳（从格林威治时间1970年1月1日），精确到秒（一个整数）</p></li><li><p>date：按照指定格式输出时间，可以是当前时间也可以是指定时间戳</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> date(<span class="string">"当前时间：Y-m-d H:i:s"</span>);</span><br></pre></td></tr></table></figure></li><li><p>strtotime：将任何英文文本日期时间描述转换成时间戳</p></li><li><p>micotime：获取时间戳和微秒数（精度高），两个用法：</p><ul><li>micotime(true)：获取秒数，浮点型。</li><li>micotime(false)：获取秒数，字符串型。默认不写参数为false。</li></ul></li></ul><h3 id="3、数学类"><a href="#3、数学类" class="headerlink" title="3、数学类"></a>3、数学类</h3><ul><li>max：获取多个数中最大值（可以实数组）</li><li>min：最小值</li><li>floor：舍去法取整（向下取整），获取不大于当前数值的最大整数</li><li>cell：进一取整（向上取整），获取不小于当前数值的最小整数</li><li>mt_rand：获取指定区间或者0到最大数之间的一个随机整数</li><li>round：根据指定小数位进行四舍五入</li><li>abs：绝对值</li><li>sqrt：开方</li><li>pow：幂次方的运算</li><li>rand、mt_rand：获取两个数之间的随机整数</li></ul><h3 id="4、字符串类"><a href="#4、字符串类" class="headerlink" title="4、字符串类"></a>4、字符串类</h3><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>print：输出一个字符串</p><p>print_r：输出较为详细的信息</p><p>var_dump：输出完整信息</p><h4 id="字符串去除与填充"><a href="#字符串去除与填充" class="headerlink" title="字符串去除与填充"></a>字符串去除与填充</h4><p>trim：消除字符串两端的空白字符或指定字符</p><p>ltrim：左边</p><p>rtrim：右边</p><p>str_pad：将一个字符串使用指定的字符填充到指定的长度</p><h4 id="字符串连接与分割"><a href="#字符串连接与分割" class="headerlink" title="字符串连接与分割"></a>字符串连接与分割</h4><p>implode：将一个数组的值连接起来组成一个字符串，可以指定连接的符号</p><p>join：同上</p><p>explode：将一个字符串使用指定的字符分割为一个数组</p><p>str_split：将一个字符串按指定的长度分割为一个数组</p><h4 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h4><p>substr：获取一个字符串指定位置开始的指定长度的子串</p><p>strstr：获取一个字符串中某个指定字符首次出现的位置起，到最后结尾处的字符</p><p>strrchr：获取一个字符串中某个指定字符最后出现的位置起，到最后结尾处的字符</p><h4 id="字符串替换"><a href="#字符串替换" class="headerlink" title="字符串替换"></a>字符串替换</h4><p>str_replace：将一个字符串中的指定字符替换为新字符。</p><p>substr_replace：将一个字符串中指定位置开始的指定个数的字符，替换为给定的新字符。</p><h4 id="字符串长度与位置"><a href="#字符串长度与位置" class="headerlink" title="字符串长度与位置"></a>字符串长度与位置</h4><p>strlen：获取字符串的字节长度。</p><p>strpos：获取一个字符串中某个子串首次出现的位置。</p><p>strrpos：获取一个字符串中某个子串最后一次出现的位置。</p><h4 id="字符转换"><a href="#字符转换" class="headerlink" title="字符转换"></a>字符转换</h4><p>strtolower:转换为小写</p><p>strtoupper:转换为大写</p><p>lcfirst:首字母小写</p><p>ucfirst:首字母大写</p><p>ucwords:所有单词的首字母大写</p><h4 id="特殊字符处理"><a href="#特殊字符处理" class="headerlink" title="特殊字符处理"></a>特殊字符处理</h4><p>nl2br：将换行符转换为“&lt;br /&gt;”标签字符</p><p>addslashes：将一个字符串中的特数字符进行反斜杠转义。</p><p>htmlspecialchars：将html中的特殊字符转换为html实体字符。</p><p>htmlsecialchars_decode：将实体字符转换为原本的字符。</p><h3 id="5、数组类"><a href="#5、数组类" class="headerlink" title="5、数组类"></a>5、数组类</h3><p>max：获取数组中的最大值。</p><p>min：获取数组中的最小值。</p><p>count：获取数组的元素个数。</p><p>in_array：判断以恶数据是否在指定数组中。<code>$b = in_array(数组,数据);</code>结果为布尔。</p><p>range：生成某个范围的连续数组。例如range(3,6)得到数组array(3,4,5,6);</p><p>array_keys：取出所有键并放到一个索引数组中。</p><p>array_values：取出所有值并放到一个索引数组中。</p><p>array_push：将一个或多个数据放入一个数组的末端。</p><p>array_pop：将数组的最后一个单元删除，并返回该单元的值。</p><p>array_reverse：将数组反转。</p><h4 id="数组的排序"><a href="#数组的排序" class="headerlink" title="数组的排序"></a>数组的排序</h4><p>sort：由低到高、rsort：由高到低、asort、arsort等。</p><h4 id="数组的查找"><a href="#数组的查找" class="headerlink" title="数组的查找"></a>数组的查找</h4><p>in_array()：在一个数组中找是否存在某个数据。</p><p>array_search()：在数组中搜索给定的值，如果成功则返回相应的键名。</p><p>array_key_exists()：检查给定的键名或索引是否存在于数组中。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章总结php代码嵌套到html中所需的&lt;strong&gt;标签语法&lt;/strong&gt;，还有php中&lt;strong&gt;函数&lt;/strong&gt;的定义和使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://icewind-r.github.io/2020/03/25/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://icewind-r.github.io/2020/03/25/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2020-03-24T23:41:46.000Z</published>
    <updated>2020-03-25T12:09:37.007Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式在平常的应用十分广泛，今日正式学习语法，力求好好掌握，以后能熟练使用。</p><a id="more"></a><hr><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。</p><p>构造正则表达式的方法和创建数学表达式的方法一样。也就是用多种元字符与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符、字符集合、字符范围、字符间的选择或者所有这些组件的任意组合。</p><p>正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为”元字符”）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。</p><h3 id="普通字符"><a href="#普通字符" class="headerlink" title="普通字符"></a>普通字符</h3><p>普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</p><h4 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h4><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\cx</td><td align="left">匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td align="left">\f</td><td align="left">匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td align="left">\n</td><td align="left">匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td align="left">\r</td><td align="left">匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td align="left">\s</td><td align="left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意 Unicode 正则表达式会匹配全角空格符。</td></tr><tr><td align="left">\S</td><td align="left">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td align="left">\t</td><td align="left">匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td align="left">\v</td><td align="left">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr></tbody></table><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><p>所谓特殊字符，就是一些有特殊含义的字符，如上面说的 <strong>runoo*b</strong> 中的 <strong><strong>*，简单的说就是表示任何字符串的意思。如果要查找字符串中的 *</strong></strong> 符号，则需要对 <strong>*** 进行转义，即在其前加一个 *<em>\: runo\</em>ob</strong> 匹配 runo*ob。</p><p>许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符”转义”，即，将反斜杠字符<strong>\</strong> 放在它们前面。下表列出了正则表达式中的特殊字符：</p><table><thead><tr><th align="left">特别字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">$</td><td align="left">匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。</td></tr><tr><td align="left">( )</td><td align="left">标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td></tr><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td></tr><tr><td align="left">.</td><td align="left">匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。</td></tr><tr><td align="left">[</td><td align="left">标记一个中括号表达式的开始。要匹配 [，请使用 [。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td></tr><tr><td align="left">\</td><td align="left">将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “&quot;，而 ‘(‘ 则匹配 “(“。</td></tr><tr><td align="left">^</td><td align="left">匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 ^。</td></tr><tr><td align="left">{</td><td align="left">标记限定符表达式的开始。要匹配 {，请使用 {。</td></tr><tr><td align="left">|</td><td align="left">指明两项之间的一个选择。要匹配 |，请使用 |。</td></tr></tbody></table><h3 id="限定符-几种重复的模式"><a href="#限定符-几种重复的模式" class="headerlink" title="限定符(几种重复的模式)"></a>限定符(几种重复的模式)</h3><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 <strong>*** 或 **+</strong> 或 <strong>?</strong> 或 <strong>{n}</strong> 或 <strong>{n,}</strong> 或 <strong>{n,m}</strong> 共6种。</p><p>正则表达式的限定符有：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">匹配前面的子表达式<strong>零次或多次</strong>。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式<strong>一次或多次</strong>。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式<strong>零次或一次</strong>。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td></tr><tr><td align="left">{n}</td><td align="left">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">{n,}</td><td align="left">n 是一个非负整数。<strong>至少匹配n 次</strong>。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td align="left">{n,m}</td><td align="left">m 和 n 均为非负整数，其中n &lt;= m。<strong>最少匹配 n 次且最多匹配 m 次</strong>。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr></tbody></table><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><table><thead><tr><th align="center">元字符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">.</td><td align="center">匹配除了换行符以外的所有字符</td></tr><tr><td align="center">\w</td><td align="center">匹配字母、数字、下划线或汉字</td></tr><tr><td align="center">\s</td><td align="center">匹配空白符</td></tr><tr><td align="center">\d</td><td align="center">匹配数字</td></tr><tr><td align="center">\b</td><td align="center">匹配单词的开始或结束</td></tr><tr><td align="center">^</td><td align="center">匹配字符串的开始</td></tr><tr><td align="center">$</td><td align="center">匹配字符串的结束</td></tr></tbody></table><p><strong>注意：</strong>\b匹配单词，例如<code>\bgood\b</code>只会匹配good单词，而goodness则不会被匹配。</p><h3 id="反义"><a href="#反义" class="headerlink" title="反义"></a>反义</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">\W</td><td align="center">匹配不是字母、数字、下划线或汉字的字符</td></tr><tr><td align="center">\S</td><td align="center">匹配不是空白符的字符</td></tr><tr><td align="center">\D</td><td align="center">匹配不是数字的字符</td></tr><tr><td align="center">\B</td><td align="center">匹配不是单词开头或结束的位置</td></tr><tr><td align="center">[^x]</td><td align="center">匹配除了x意外的所有字符</td></tr><tr><td align="center">[^abcd]</td><td align="center">匹配除了abcd以外的任意字符</td></tr></tbody></table><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p><code>\.</code>、<code>\*</code>、<code>\?</code>  、<code>\(</code>、<code>\)</code>等</p><h3 id="分支条件"><a href="#分支条件" class="headerlink" title="分支条件"></a>分支条件</h3><ul><li>用<code>|</code>把不同的规则分隔开</li><li>从左到右的测试每个条件，如果满足了某个分支，就不再管其他的条件。</li><li><code>0\d{2}-\d{8}|0\d{3}-\d{7}</code></li></ul><h3 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h3><ul><li><p><code>[0-9] == \d</code></p></li><li><p><code>[a-z0-9A-Z] == \w</code></p></li><li><p><code>[&amp;?.]</code>：标点符号等。</p></li><li><p><code>[aeiou]</code></p></li><li><p><code>\(?0\d{2}[)-]?\d{8}</code></p></li></ul><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><ul><li><p>将子表达式做成子集</p></li><li><p>使用()进行分组</p></li><li><p>方便对match的字符串进行划分</p></li><li><p>分组的命名：<code>(?&lt;groupname&gt;exp)</code></p></li><li><p><code>(?:exp)</code>：exp表达式 ，匹配exp，不捕获匹配的文本，也不给此分组分配组号。</p></li></ul><h3 id="贪婪与懒惰"><a href="#贪婪与懒惰" class="headerlink" title="贪婪与懒惰"></a>贪婪与懒惰</h3><h4 id="贪婪（尽可能多）"><a href="#贪婪（尽可能多）" class="headerlink" title="贪婪（尽可能多）"></a>贪婪（尽可能多）</h4><p><code>a.*b(aabab)</code>-&gt;<code>aabab</code></p><h4 id="懒惰（尽可能少）"><a href="#懒惰（尽可能少）" class="headerlink" title="懒惰（尽可能少）"></a>懒惰（尽可能少）</h4><p><code>a.*?b(aabab)</code>-&gt;<code>aab</code>、<code>ab</code></p><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">*?</td><td align="center">重复任意次，但尽可能少</td></tr><tr><td align="center">+?</td><td align="center">重复一次或多次，但尽可能少</td></tr><tr><td align="center">??</td><td align="center">重复一次或0次，但尽可能少</td></tr><tr><td align="center">{n,m}?</td><td align="center">重复n到m次，但尽可能少</td></tr><tr><td align="center">{n,}?</td><td align="center">重复n次以上，但尽可能少</td></tr></tbody></table><h3 id="处理选项"><a href="#处理选项" class="headerlink" title="处理选项"></a>处理选项</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">IgnoreCase</td><td align="center">不区分大小写</td></tr><tr><td align="center">Multiline</td><td align="center">更改^和$的含义，使其在任意一行都可匹配。<br>$的含义是匹配\n之前的位置</td></tr><tr><td align="center">Singleline</td><td align="center">更改.的含义，与每个字符匹配（包括换行符\n）</td></tr><tr><td align="center">IgnorePatternWhitespace</td><td align="center">忽略表达式中的非转义空白并启用由#标记的注释</td></tr><tr><td align="center">ExplicitCapture</td><td align="center">仅捕获已被显式命名的组</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式在平常的应用十分广泛，今日正式学习语法，力求好好掌握，以后能熟练使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="正则表达式" scheme="http://iceWind-R.github.io/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="正则表达式" scheme="http://iceWind-R.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python入门小结（三）</title>
    <link href="http://icewind-r.github.io/2020/03/24/Python%E5%85%A5%E9%97%A8%E5%B0%8F%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/24/Python%E5%85%A5%E9%97%A8%E5%B0%8F%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-03-24T13:58:20.000Z</published>
    <updated>2020-06-22T03:38:08.786Z</updated>
    
    <content type="html"><![CDATA[<p>基于上次对选择循环结构，和字符串的基础知识介绍，这篇博客总结列表元组的使用。</p><a id="more"></a><hr><h1 id="一、列表"><a href="#一、列表" class="headerlink" title="一、列表"></a>一、列表</h1><p>列表用来一次性存储多个数据。</p><h2 id="1、列表格式"><a href="#1、列表格式" class="headerlink" title="1、列表格式"></a>1、列表格式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[数据<span class="number">1</span>, 数据<span class="number">2</span>, 数据<span class="number">3</span>, 数据<span class="number">4.</span>..];</span><br></pre></td></tr></table></figure><p>列表存储的多个数据可为不同类型，但为了相关操作，尽量存储相同数据类型的数据。</p><h2 id="2、列表的常用操作"><a href="#2、列表的常用操作" class="headerlink" title="2、列表的常用操作"></a>2、列表的常用操作</h2><p>对列表中的多个数据实现增、删、改、查等基本操作。</p><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><h4 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name_list = [<span class="string">'Tom'</span>,<span class="string">'Rose'</span>,<span class="string">'Lily'</span>];</span><br><span class="line">print(name_list[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul><li><p>index()：返回指定数据所在位置的下标</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表序列.index(数据,开始位置下标,结束位置下标) <span class="comment">#如果不写开始结束下标，则代表全部</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(name_list.index(<span class="string">'Lily'</span>,<span class="number">0</span>,<span class="number">2</span>)) <span class="comment">#2</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：如果找不到数据则会报错</p></blockquote></li><li><p>count()：统计指定数据在当前列表中出现的次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(name_list.count(<span class="string">'Lily'</span>)); <span class="comment">#1</span></span><br></pre></td></tr></table></figure></li><li><p>len()：访问列表长度，即列表中数据的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(len(name_list)); <span class="comment">#3</span></span><br></pre></td></tr></table></figure><blockquote><p>len()是一个公共函数，字符串、列表等都可以用该方法统计个数</p></blockquote></li></ul><h4 id="判断指定数据是否存在"><a href="#判断指定数据是否存在" class="headerlink" title="判断指定数据是否存在"></a>判断指定数据是否存在</h4><ul><li>in：判断指定数据存在于列表序列中，返回bool</li><li>not in：相反。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'Tom'</span> <span class="keyword">in</span> name_list); <span class="comment">#True</span></span><br></pre></td></tr></table></figure><h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h3><p>增加数据到列表中</p><ul><li><p>append()：列表结尾追加数据</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表序列.append(数据)</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name_list.append(<span class="string">'xiaoming'</span>);</span><br><span class="line">print(name_list) <span class="comment">#['Tom','Rose','Lily','xiaoming']</span></span><br></pre></td></tr></table></figure><blockquote><p>列表追加数据的时候，直接在原列表里面追加了指定数据，即修改了原列表，故列表为可变数据类型</p></blockquote></li><li><p>extend()：结尾追加数据，如果数据是一个序列，则将这个序列的数据逐一添加到列表中</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表序列.extend(数据)</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name_list.extend(<span class="string">'xiaoming'</span>); <span class="comment">#['Tom','Rose','Lily','x','i','a','o','m','i','n','g']</span></span><br><span class="line">name_list.extend([<span class="string">'xiaoming'</span>,<span class="string">'xiaoming'</span>]) <span class="comment">#['Tom','Rose','Lily','xiaoming','xiaoming']</span></span><br></pre></td></tr></table></figure></li><li><p>insert()：指定位置新增序列</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表序列.insert(位置下标,数据)</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name_list.insert(<span class="number">1</span>,<span class="string">'xiaoming'</span>) <span class="comment">#['Tom','xiaoming','Rose','Lily']</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ul><li><p>del</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> 目标</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除指定数据</span></span><br><span class="line"><span class="keyword">del</span> name_list[<span class="number">0</span>]</span><br><span class="line"><span class="comment">#删除列表</span></span><br><span class="line"><span class="keyword">del</span> name_list</span><br></pre></td></tr></table></figure></li><li><p>pop()：删除指定下标的数据（默认最后一个），并返回该数据。</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表序列.pop(下标)</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">del_name = name_list.pop(<span class="number">1</span>) <span class="comment">#Rose</span></span><br><span class="line">print(name_list) <span class="comment">#['Tom','Lily']</span></span><br></pre></td></tr></table></figure></li><li><p>remove()：移除列表中某个数据的第一个匹配项。</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表序列.remove(数据)</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name_list.remove(<span class="string">'Rose'</span>)  <span class="comment">#['Tom','Lily']</span></span><br></pre></td></tr></table></figure></li><li><p>clear()：清空列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name_list.clear()</span><br><span class="line">print(name_list) <span class="comment"># 结果：[]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><ul><li><p>修改指定下标数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name_list[<span class="number">0</span>] = <span class="string">'Test'</span> <span class="comment">#['Test','Rose','Lily']</span></span><br></pre></td></tr></table></figure></li><li><p>逆置：reverse()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num_list = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">num_list.reverse() <span class="comment">#[3,2,1]</span></span><br></pre></td></tr></table></figure></li><li><p>排序：sort()</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表序列.sort(key=<span class="literal">None</span>, reverse=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意：reverse表示排序规则，reverse = False 升序（默认），reverse = True 降序，</p></blockquote><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_list.sort(reverse=<span class="literal">True</span>) <span class="comment">#降序，[3,2,1]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><p>函数：copy()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list1 = name_list.copy()</span><br></pre></td></tr></table></figure><h2 id="3、列表的循环遍历"><a href="#3、列表的循环遍历" class="headerlink" title="3、列表的循环遍历"></a>3、列表的循环遍历</h2><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span> </span><br><span class="line"><span class="keyword">while</span> i &lt; len(name_list):</span><br><span class="line">    print(name_list[i])</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> name_list:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><h2 id="4、列表嵌套"><a href="#4、列表嵌套" class="headerlink" title="4、列表嵌套"></a>4、列表嵌套</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_list = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]];</span><br></pre></td></tr></table></figure><h1 id="二、元组"><a href="#二、元组" class="headerlink" title="二、元组"></a>二、元组</h1><p>一个元组可以存储多个数据，元组内的数据是不能修改的。</p><h2 id="1、定义"><a href="#1、定义" class="headerlink" title="1、定义"></a>1、定义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t1 = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) <span class="comment">#定义多个数据的元组</span></span><br><span class="line">t2 = (<span class="number">1</span>,) <span class="comment">#定义单个数据元组</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：一个数据的元组，后面最好跟上一个逗号，否则数据类型为唯一的。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t3 = (<span class="number">1</span>,) <span class="comment">#tuple</span></span><br><span class="line">t4 = (<span class="number">1</span>) <span class="comment">#int</span></span><br><span class="line">t5 = (<span class="string">'hello'</span>) <span class="comment">#str</span></span><br></pre></td></tr></table></figure><h2 id="2、元组的常见操作"><a href="#2、元组的常见操作" class="headerlink" title="2、元组的常见操作"></a>2、元组的常见操作</h2><p>元组数据不支持修改，只支持查找操作，具体如下：</p><ul><li>按下标查找数据</li><li>index()</li><li>count()</li><li>len()</li></ul><p>与上述介绍列表查找方法基本相同。</p><h2 id="3、元组数据的修改"><a href="#3、元组数据的修改" class="headerlink" title="3、元组数据的修改"></a>3、元组数据的修改</h2><ul><li><p>元组内的直接数据如果修改则报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tuple1 = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">tuple1[<span class="number">1</span>] = <span class="number">1</span>  <span class="comment">#报错</span></span><br></pre></td></tr></table></figure></li><li><p>如果元组内有列表，修改列表里的数据则是支持的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tuple2 = (<span class="number">1</span>,<span class="number">2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],<span class="number">4</span>)</span><br><span class="line">tuple2[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">0</span> <span class="comment">#支持</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>尽量不要修改元组内的数据</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于上次对选择循环结构，和字符串的基础知识介绍，这篇博客总结列表元组的使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://iceWind-R.github.io/categories/Python/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="Python" scheme="http://iceWind-R.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB课程总结（三）</title>
    <link href="http://icewind-r.github.io/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-03-24T00:37:32.000Z</published>
    <updated>2020-05-02T03:12:32.481Z</updated>
    
    <content type="html"><![CDATA[<p>这篇总结MATLAB的图形基础。</p><a id="more"></a><hr><h1 id="二维曲线绘图的基本操作"><a href="#二维曲线绘图的基本操作" class="headerlink" title="二维曲线绘图的基本操作"></a>二维曲线绘图的基本操作</h1><h2 id="plot指令的基本调用格式"><a href="#plot指令的基本调用格式" class="headerlink" title="plot指令的基本调用格式"></a>plot指令的基本调用格式</h2><h3 id="plot-x"><a href="#plot-x" class="headerlink" title="plot(x)"></a>plot(x)</h3><p>​    ◼ x为向量时，以该元素的下标为横坐标、元素值为纵坐标绘出曲线。</p><p>​    ◼ x为实数二维数组时，则按列绘制每列元素值相对其下标的曲线，曲线数</p><p>​        等于x数组的列数。</p><p>​    ◼ x为复数二维数组时，则按列分别以数组的实部和虚部为横、纵坐标绘制多条曲线</p><h3 id="plot-x-y"><a href="#plot-x-y" class="headerlink" title="plot(x, y)"></a>plot(x, y)</h3><p>​    ◼ x、y为同维数组时，绘制以x、y元素为横纵坐标的曲线</p><p>​    ◼ x为向量，y为二维数组、且其列数或行数等于x的元素数时，绘制多条不同颜色的曲线</p><p>​    ◼ x为二维数组，y为向量时，情况与上相同，只是y仍为纵坐标。</p><h3 id="plot-x1-y1-x2-y2-…"><a href="#plot-x1-y1-x2-y2-…" class="headerlink" title="plot(x1, y1, x2, y2, …)"></a>plot(x1, y1, x2, y2, …)</h3><p>​    ◼ 绘制以x1为横坐标、y1为纵坐标的曲线1，以x2为横坐标、y2为纵坐标的曲线2，等等。</p><p>​    ◼ 其中x为横坐标，y为纵坐标，绘制y=f(x)函数曲线。</p><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><h4 id="1、使用直角坐标系"><a href="#1、使用直角坐标系" class="headerlink" title="1、使用直角坐标系"></a>1、使用直角坐标系</h4><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/1.png" class><h4 id="2、使用参数方程绘制曲线"><a href="#2、使用参数方程绘制曲线" class="headerlink" title="2、使用参数方程绘制曲线"></a>2、使用参数方程绘制曲线</h4><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/2.png" class><h4 id="3、绘制复杂曲线"><a href="#3、绘制复杂曲线" class="headerlink" title="3、绘制复杂曲线"></a>3、绘制复杂曲线</h4><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/3.png" class><p>结果：</p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/4.png" class><h2 id="多次叠绘"><a href="#多次叠绘" class="headerlink" title="多次叠绘"></a>多次叠绘</h2><p>◼ 多次调用plot命令在一幅图上绘制多条曲线，需要hold指令的配合。</p><p>◼ hold on 保持当前坐标轴和图形，并可以接受下一次绘制。</p><p>◼ hold off 取消当前坐标轴和图形保持，这种状态下，调用plot绘制完全新的图形，不保留以前的坐标格式、曲</p><p>线。</p><h3 id="例题1"><a href="#例题1" class="headerlink" title="例题1"></a><strong>例题1</strong></h3><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/5.png" class><p><strong>结果</strong></p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/6.png" class><h3 id="例题2：利用hold绘制离散信号的波形"><a href="#例题2：利用hold绘制离散信号的波形" class="headerlink" title="例题2：利用hold绘制离散信号的波形"></a><strong>例题2：利用hold绘制离散信号的波形</strong></h3><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/7.png" class><h2 id="双纵坐标"><a href="#双纵坐标" class="headerlink" title="双纵坐标"></a>双纵坐标</h2><p>◼ plotyy指令调用格式：</p><p>plotyy(x1, y1, x2, y2)</p><p>x1-y1曲线y轴在左， x2-y2曲线y轴在右。</p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/8.png" class><h2 id="多子图"><a href="#多子图" class="headerlink" title="多子图"></a>多子图</h2><p> MATLAB允许在同一图形窗口布置几幅独立的子图。具体指令：</p><p>◼ subplot(m, n, k)使（mxn）幅子图中第k个子图成为当前图</p><p>◼ subplot(‘postion’, [left, bottom, width, height]) 在指定的位置上开辟子图，并成为当前图</p><p>说明：</p><p>➢ subplot(m, n, k)的含义：图形窗口包含（mxn）个子图，k为要指定的当前子图的编号。其编号原则： 左上方为第1子图，然后向右向下依次排序。该指令按缺省值分割子图区域。</p><p>➢ subplot(‘postion’, [left, bottom, width, height])用于手工指定子图位置，指定位置的四元组采用归一化的标称单位，即认为整个图形窗口绘图区域的高、宽的取值范围都是[0， 1]，而左下角为（0,0）坐标。</p><p>➢ 产生的子图彼此独立。所有的绘图指令均可以在子图中使用。</p><p><strong>示例</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="built_in">pi</span>*(<span class="number">0</span>:<span class="number">1000</span>)/<span class="number">1000</span>)';</span><br><span class="line">y1=<span class="built_in">sin</span>(t);y2=<span class="built_in">sin</span>(<span class="number">10</span>*t);y12=<span class="built_in">sin</span>(t).*<span class="built_in">sin</span>(<span class="number">10</span>*t);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>),<span class="built_in">plot</span>(t,y1);axis([<span class="number">0</span>,<span class="built_in">pi</span>,<span class="number">-1</span>,<span class="number">1</span>])</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>),<span class="built_in">plot</span>(t,y2);axis([<span class="number">0</span>,<span class="built_in">pi</span>,<span class="number">-1</span>,<span class="number">1</span>])</span><br><span class="line">subplot(<span class="string">'position'</span>,[<span class="number">0.2</span>,<span class="number">0.05</span>,<span class="number">0.6</span>,<span class="number">0.45</span>])</span><br><span class="line"><span class="built_in">plot</span>(t,y12,<span class="string">'b-'</span>,t,[y1,-y1],<span class="string">'r:'</span>);</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/9.png" class><h2 id="绘制曲线的辅助操作"><a href="#绘制曲线的辅助操作" class="headerlink" title="绘制曲线的辅助操作"></a>绘制曲线的辅助操作</h2><p><strong>曲线线形控制符</strong></p><table><thead><tr><th align="center">符号</th><th align="center">-</th><th align="center">：</th><th align="center">-.</th><th align="center">–</th></tr></thead><tbody><tr><td align="center">含义</td><td align="center">实线</td><td align="center">虚线</td><td align="center">点划线</td><td align="center">双划线</td></tr></tbody></table><p><strong>曲线颜色控制符</strong></p><table><thead><tr><th>符号</th><th>b</th><th>g</th><th>r</th><th>c</th><th>m</th><th>y</th><th>k</th><th>w</th></tr></thead><tbody><tr><td>含义</td><td>蓝</td><td>绿</td><td>红</td><td>青</td><td>品红</td><td>黄</td><td>黑</td><td>白</td></tr></tbody></table><p>；数据点型控制符</p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/10.png" class><p>➢曲线的线形控制符、颜色控制符、数据点形控制符可以组合使用</p><p>➢其先后次序不影响绘图结果</p><p>➢也可以单独使用</p><p><strong>例如</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="number">0</span>:<span class="number">15</span>)*<span class="number">2</span>*<span class="built_in">pi</span>/<span class="number">15</span>;</span><br><span class="line">y=<span class="built_in">sin</span>(t);</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>), <span class="built_in">plot</span>(t, y); title(<span class="string">'Lins style is default'</span>)</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>), <span class="built_in">plot</span>(t, y, <span class="string">'o'</span>); title(<span class="string">'Lins style is o'</span>)</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>), <span class="built_in">plot</span>(t, y, <span class="string">'k:'</span>); title(<span class="string">'Lins style is k:'</span>)</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>), <span class="built_in">plot</span>(t, y, <span class="string">'k:*'</span>); title(<span class="string">'Lins style is k:*'</span>)</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>), <span class="built_in">plot</span>(t, y, <span class="string">'m-d'</span>); title(<span class="string">'Lins style is m-d'</span>)</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>), <span class="built_in">plot</span>(t, y, <span class="string">'r-p'</span>); title(<span class="string">'Lins style is r-p'</span>)</span><br></pre></td></tr></table></figure><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/11.png" class><h2 id="坐标、刻度和分格线控制"><a href="#坐标、刻度和分格线控制" class="headerlink" title="坐标、刻度和分格线控制"></a><strong>坐标、刻度和分格线控制</strong></h2><h3 id="axis坐标控制指令"><a href="#axis坐标控制指令" class="headerlink" title="axis坐标控制指令"></a>axis坐标控制指令</h3><p><strong>案例演示</strong></p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/12.png" class><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">t=<span class="number">0</span>:<span class="number">2</span>*<span class="built_in">pi</span>/<span class="number">99</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">x=<span class="number">1.15</span>*<span class="built_in">cos</span>(t); y=<span class="number">3.25</span>*<span class="built_in">sin</span>(t); <span class="comment">% y为长轴，x为短轴</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>); <span class="built_in">plot</span>(x, y);</span><br><span class="line">axis off</span><br><span class="line">title(<span class="string">'axis off'</span>); </span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>); <span class="built_in">plot</span>(x,y);</span><br><span class="line">axis image;</span><br><span class="line">title(<span class="string">'axis image'</span>); </span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="built_in">plot</span>(x,y);</span><br><span class="line">axis equal;</span><br><span class="line">title(<span class="string">'axis Equal'</span>); </span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>); <span class="built_in">plot</span>(x,y);</span><br><span class="line">axis square;</span><br><span class="line">title(<span class="string">'axis Square'</span>);</span><br></pre></td></tr></table></figure><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/13.png" class><h3 id="刻度、分格线和坐标框"><a href="#刻度、分格线和坐标框" class="headerlink" title="刻度、分格线和坐标框"></a>刻度、分格线和坐标框</h3><h4 id="刻度设置"><a href="#刻度设置" class="headerlink" title="刻度设置"></a>刻度设置</h4><ul><li><p><strong>指令及格式：</strong><code>set(gca, ‘xtick’, xs, ‘ytick’, ys)</code></p></li><li><p>xs、ys可以使任何合法的实数向量，用于分别设置x、y轴的刻度。</p></li></ul><h4 id="分格线"><a href="#分格线" class="headerlink" title="分格线"></a>分格线</h4><p>使用grid指令</p><ul><li>grid on /grid off：画出/不画出分格线</li><li>MATLAB的缺省设置是不画分格线；分格线的疏密取决于坐标刻度（改变坐标刻度，可改变分格线的疏密）。</li></ul><p>坐标框</p><ul><li>box on：控制加边框线</li><li>box off：控制不加边框线</li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">t=<span class="number">6</span>*<span class="built_in">pi</span>*(<span class="number">0</span>:<span class="number">100</span>)/<span class="number">100</span>;</span><br><span class="line">y=<span class="number">1</span>-<span class="built_in">exp</span>(<span class="number">-0.3</span>*t).*<span class="built_in">cos</span>(<span class="number">0.7</span>*t);</span><br><span class="line">tt=t(<span class="built_in">find</span>(<span class="built_in">abs</span>(y<span class="number">-1</span>)&gt;<span class="number">0.05</span>)); </span><br><span class="line">ts=<span class="built_in">max</span>(tt); </span><br><span class="line"><span class="built_in">plot</span>(t,y,<span class="string">'r-'</span>);</span><br><span class="line">grid on; </span><br><span class="line">axis([<span class="number">0</span>,<span class="number">6</span>*<span class="built_in">pi</span>,<span class="number">0.6</span>,<span class="built_in">max</span>(y)]); </span><br><span class="line">title(<span class="string">'y=1-exp(-\alpha*t)*cos(\omega*t)'</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(ts,<span class="number">0.95</span>,<span class="string">'bo'</span>);</span><br><span class="line"><span class="built_in">hold</span> off; </span><br><span class="line">set(gca,<span class="string">'xtick'</span>,[<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">4</span>*<span class="built_in">pi</span>,<span class="number">6</span>*<span class="built_in">pi</span>],<span class="string">'ytick'</span>,[<span class="number">0.95</span>,<span class="number">1</span>,<span class="number">1.05</span>,<span class="built_in">max</span>(y)]); </span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/14.png" class><h2 id="图形标识"><a href="#图形标识" class="headerlink" title="图形标识"></a>图形标识</h2><h3 id="图形标识包括"><a href="#图形标识包括" class="headerlink" title="图形标识包括"></a>图形标识包括</h3><ul><li><p>图名（title）</p></li><li><p>坐标轴名（xlabel、ylabel）</p></li><li><p>图形文本注释（text）</p></li><li><p>图例（legend）</p></li></ul><h3 id="简捷使用格式"><a href="#简捷使用格式" class="headerlink" title="简捷使用格式"></a>简捷使用格式</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title(s),xlabel(s),ylabel(s),text(s),<span class="built_in">legend</span>(s) <span class="comment">% s为字符串</span></span><br><span class="line">text(x,y,s) <span class="comment">% 指定坐标（x, y）处加注文字</span></span><br></pre></td></tr></table></figure><h3 id="精细指令形式"><a href="#精细指令形式" class="headerlink" title="精细指令形式"></a>精细指令形式</h3><p><strong>字体样式设置：</strong></p><p><code>\fontname{arg} \arg \fontsize {arg} string</code>，其中，String为要输出的字符串，其前面的均为属性控制，使用方法见下表。</p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/15.png" class> <img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/16.png" class><h3 id="案例：在正弦曲线上标注特殊值"><a href="#案例：在正弦曲线上标注特殊值" class="headerlink" title="案例：在正弦曲线上标注特殊值"></a>案例：在正弦曲线上标注特殊值</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="number">0</span>:<span class="number">100</span>)/<span class="number">100</span>*<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">y=<span class="built_in">sin</span>(t);</span><br><span class="line"><span class="built_in">plot</span>(t, y)</span><br><span class="line">text(<span class="number">3</span>*<span class="built_in">pi</span>/<span class="number">4</span>,<span class="built_in">sin</span>(<span class="number">3</span>*<span class="built_in">pi</span>/<span class="number">4</span>), <span class="string">'\fontsize&#123;16&#125;\leftarrowsin(t) = .707 '</span>)</span><br><span class="line">text(<span class="built_in">pi</span>, <span class="built_in">sin</span>(<span class="built_in">pi</span>), <span class="string">'\fontsize&#123;16&#125;\leftarrowsin(t) = 0 '</span>)</span><br><span class="line">text(<span class="number">5</span>*<span class="built_in">pi</span>/<span class="number">4</span>, <span class="built_in">sin</span>(<span class="number">5</span>*<span class="built_in">pi</span>/<span class="number">4</span>), <span class="string">'\fontsize&#123;16&#125;sin(t) = -.707\rightarrow'</span>,...</span><br><span class="line"><span class="string">'HorizontalAlignment'</span>,<span class="string">'right'</span>)</span><br></pre></td></tr></table></figure><p>其中，‘HorizontalAlignment’, ‘right’设置图形标识为水平右对齐.</p> <img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/17.png" class><h2 id="极坐标图"><a href="#极坐标图" class="headerlink" title="极坐标图"></a>极坐标图</h2><p>polar函数用来绘制极坐标图，其调用格式为：</p><p><code>polar(theta,rho,选项)</code></p><h3 id="例：绘制ρ-sin-2θ-cos-2θ-的图形"><a href="#例：绘制ρ-sin-2θ-cos-2θ-的图形" class="headerlink" title="例：绘制ρ=sin(2θ)cos(2θ)的图形"></a>例：绘制ρ=sin(2θ)cos(2θ)的图形</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">theta = <span class="number">0</span>:<span class="number">0.01</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">rho = <span class="built_in">sin</span>(<span class="number">2</span>*theta).*<span class="built_in">cos</span>(<span class="number">2</span>*theta);</span><br><span class="line">polar(theta,rho,<span class="string">'k'</span>);</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p> <img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/18.png" class><h2 id="其他形式的线性直角坐标图"><a href="#其他形式的线性直角坐标图" class="headerlink" title="其他形式的线性直角坐标图"></a>其他形式的线性直角坐标图</h2><p>在线性直角坐标中，其他形式的图形有条形图、阶梯图、杆图和填充图等，所采用的函数分别为：</p><p>bar（x，y，选项）   选项在单引号中</p><p>stairs（x，y，选项）</p><p>stem（x，y，选项）</p><p>fill（x1，y1，选项1，x2，y2，选项2，…）</p><p>前三个函数和plot的用法相似，只是没有多输入变量形式。fill函数按向量元素下标渐增次序依次用直线段连接x，y对应元素定义的数据点。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">0</span>:<span class="number">0.35</span>:<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">y=<span class="number">2</span>*<span class="built_in">exp</span>(<span class="number">-0.5</span>*x);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);bar(x,y,<span class="string">'g'</span>);</span><br><span class="line"></span><br><span class="line">title(<span class="string">'bar(x,y,''g'')'</span>);axis([<span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span> ,<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);fill(x,y,<span class="string">'r'</span>);</span><br><span class="line"></span><br><span class="line">title(<span class="string">'fill(x,y,''r'')'</span>);axis([<span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span> ,<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);stairs(x,y,<span class="string">'b'</span>);</span><br><span class="line"></span><br><span class="line">title(<span class="string">'stairs(x,y,''b'')'</span>);axis([<span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span> ,<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);stem(x,y,<span class="string">'k'</span>);</span><br><span class="line"></span><br><span class="line">title(<span class="string">'stem(x,y,''k'')'</span>);axis([<span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span> ,<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p> <img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/18.png" class><h2 id="折线图、柱状图、饼图"><a href="#折线图、柱状图、饼图" class="headerlink" title="折线图、柱状图、饼图"></a>折线图、柱状图、饼图</h2><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span>:<span class="number">1</span>:<span class="number">5</span>;<span class="comment">%x轴上的数据，第一个值代表数据开始，第二个值代表间隔，第三个值代表终止</span></span><br><span class="line"> a=[<span class="number">203.024</span>,<span class="number">113.857</span>,<span class="number">256.259</span>,<span class="number">244.888</span>,<span class="number">293.376</span>]; <span class="comment">%a数据y值</span></span><br><span class="line"> b=[<span class="number">334.4</span>,<span class="number">143.2</span>,<span class="number">297.4</span>,<span class="number">487.2</span>,<span class="number">596.2</span>]; <span class="comment">%b数据y值</span></span><br><span class="line"> <span class="built_in">plot</span>(x,a,<span class="string">'-*b'</span>,x,b,<span class="string">'-or'</span>); <span class="comment">%线性，颜色，标记</span></span><br><span class="line">axis([<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">700</span>])  <span class="comment">%确定x轴与y轴框图大小</span></span><br><span class="line">set(gca,<span class="string">'XTick'</span>,[<span class="number">0</span>:<span class="number">1</span>:<span class="number">6</span>]) <span class="comment">%x轴范围1-6，间隔1</span></span><br><span class="line">set(gca,<span class="string">'YTick'</span>,[<span class="number">0</span>:<span class="number">100</span>:<span class="number">700</span>]) <span class="comment">%y轴范围0-700，间隔100</span></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'Neo4j'</span>,<span class="string">'MongoDB'</span>);   <span class="comment">%右上角标注</span></span><br><span class="line">xlabel(<span class="string">'深度'</span>)  <span class="comment">%x轴坐标描述</span></span><br><span class="line">ylabel(<span class="string">'时间（ms）'</span>) <span class="comment">%y轴坐标描述</span></span><br></pre></td></tr></table></figure><p><strong>结果</strong></p> <img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/22.png" class><h3 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%图12：各模式分期收益  </span></span><br><span class="line">Y = [<span class="number">9.05</span> <span class="number">14.12</span> <span class="number">26.69</span>;<span class="number">15.29</span> <span class="number">20.32</span> <span class="number">32.40</span>;<span class="number">12.14</span> <span class="number">17.56</span> <span class="number">29.27</span>; <span class="number">10.59</span> <span class="number">15.94</span> <span class="number">28.81</span>];<span class="comment">% 二维数组，每一维有三个数，所以显示三种颜色，三列</span></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line">bh=bar(Y);<span class="comment">% 画柱状图</span></span><br><span class="line">set(gca,<span class="string">'XTickLabel'</span>,&#123;<span class="string">'现状模式'</span>,<span class="string">'模式一'</span>,<span class="string">'模式二'</span>,<span class="string">'模式三'</span>&#125;);<span class="comment">% 设置x轴各个柱所表示的名字</span></span><br><span class="line">ylim([<span class="number">0</span>,<span class="built_in">max</span>(<span class="built_in">max</span>(Y)+<span class="number">1</span>)]);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'前期'</span>,<span class="string">'中期'</span>,<span class="string">'后期'</span>);<span class="comment">% 区分一下不同颜色分别代表什么</span></span><br><span class="line">title(<span class="string">'各模式分期收益（单位：亿元）'</span>);<span class="comment">% 标题</span></span><br><span class="line">xlabel(<span class="string">'模式'</span>);<span class="comment">% 设置x轴名称</span></span><br><span class="line">ylabel(<span class="string">'收益（亿元）'</span>);<span class="comment">% 设置y轴名称</span></span><br></pre></td></tr></table></figure> <img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/23.png" class><h3 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h3><p>主要是使用pie命令，pie(Y)等。</p><h1 id="三维绘图的基本操作"><a href="#三维绘图的基本操作" class="headerlink" title="三维绘图的基本操作"></a>三维绘图的基本操作</h1><h2 id="三维线图指令plot3"><a href="#三维线图指令plot3" class="headerlink" title="三维线图指令plot3"></a>三维线图指令plot3</h2><p>三维绘图指令中，plot3最易于理解，它的使用格式与plot十分相似，只是对应第3 维空间的参量。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="number">0</span>:<span class="number">0.02</span>:<span class="number">2</span>)*<span class="built_in">pi</span>;</span><br><span class="line">x=<span class="built_in">sin</span>(t);</span><br><span class="line">y=<span class="built_in">cos</span>(t);</span><br><span class="line">z=<span class="built_in">cos</span>(<span class="number">2</span>*t);</span><br><span class="line"><span class="built_in">plot3</span>(x,y,z,<span class="string">'b-'</span>,x,y,z,<span class="string">'bd'</span>);</span><br><span class="line">view([<span class="number">-82</span>,<span class="number">58</span>]);</span><br><span class="line">box on</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'链'</span>,<span class="string">'宝石'</span>)</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p> <img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/21.png" class><h2 id="三维网线图（mesh）和曲面图（surf）"><a href="#三维网线图（mesh）和曲面图（surf）" class="headerlink" title="三维网线图（mesh）和曲面图（surf）"></a>三维网线图（mesh）和曲面图（surf）</h2><p>画函数z=f(x,y)所代表的三维空间曲面，需要做以下的数据准备工作：</p><p>◼ 确定自变量的取值范围和取值间隔。</p><p>➢ x=x1:dx:x2;</p><p>➢ y=y1:dy:y2;</p><p>◼ 构成x-y平面上的自变量采样“格点”矩阵。</p><p>➢ 利用MATLAB指令meshgrid产生“格点”矩阵</p><p>➢ [xa, ya]=meshgrid(x,y) ; </p><p>◼ 计算函数在自变量采样“格点”上的函数值，即z=f(x,y)<strong>。</strong></p><p><strong>示例</strong>：绘制函数z=x^2^+y^2^的曲面</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">-4</span>:<span class="number">4</span>;y=x;</span><br><span class="line">[x,y]=<span class="built_in">meshgrid</span>(x,y); <span class="comment">%生成 x-y 坐标“格点”矩阵</span></span><br><span class="line">z=x.^<span class="number">2</span>+y.^<span class="number">2</span>; <span class="comment">%计算格点上的函数值</span></span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>), mesh(x,y,z); <span class="comment">%三维网格图</span></span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>), surf(x,y,z); <span class="comment">%三维曲面图</span></span><br><span class="line">colormap(hot);</span><br></pre></td></tr></table></figure><p><strong>结果</strong> </p><img src="/2020/03/24/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89/20.png" class>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇总结MATLAB的图形基础。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/categories/MATLAB/"/>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/tags/MATLAB/"/>
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础知识（三）</title>
    <link href="http://icewind-r.github.io/2020/03/23/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/23/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-03-23T05:42:59.000Z</published>
    <updated>2020-03-31T03:04:55.278Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章主要介绍PHP的各种运算符，和流程控制。</p><a id="more"></a><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><hr><p>PHP中的运算符有很多种：</p><ul><li><p>赋值运算符：赋值操作</p></li><li><p>算术运算符：算数计算</p></li><li><p>错误抑制符：抑制错误</p></li><li><p>比较运算符：数据对比</p></li><li><p>合并运算符：真伪判定给出不同结果</p></li><li><p>逻辑运算符：逻辑结果判定</p></li><li><p>连接运算符：字符串连接</p></li><li><p>三目运算符：真伪判断给出不同结果</p></li><li><p>自操作运算符：简化操作</p></li></ul><h3 id="一、赋值运算符"><a href="#一、赋值运算符" class="headerlink" title="一、赋值运算符"></a>一、赋值运算符</h3><p>有以下几种：</p><ul><li><code>=</code>：普通赋值。</li><li><code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code>：复合赋值运算（是将左侧和右侧的整体结果进行计算）。</li><li><code>.=</code>：先将左边的符号的结果与右边的结果进行字符串连接（<code>.</code>是字符串连接），然后赋给左边。</li></ul><h3 id="二、算数运算符"><a href="#二、算数运算符" class="headerlink" title="二、算数运算符"></a>二、算数运算符</h3><p>除了简单的加减乘除取余等，还有其他需要格外注意的运算符。</p><ul><li><code>**</code>：幂运算，底数的指数次运算。</li></ul><h3 id="三、错误抑制符"><a href="#三、错误抑制符" class="headerlink" title="三、错误抑制符"></a>三、错误抑制符</h3><p><strong>错误抑制</strong>：在可能出现错误的代码前使用错误抑制符，让错误不会报出来。</p><ul><li><p>只需要在可能出现的错误表达式之前使用即可。</p></li><li><p>错误抑制符只有一个：<code>@</code></p></li><li><p>错误抑制符只针对就近的目标，如果是针对结果，需要使用<code>()</code>。</p></li><li><p>只能抑制简单的错误（如notice，warning）。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#正常处理</span></span><br><span class="line">$r = <span class="number">10</span>/<span class="number">0</span>;<span class="comment">#报错，除数为0</span></span><br><span class="line"><span class="comment">#错误抑制处理</span></span><br><span class="line">$r = @<span class="number">10</span>/<span class="number">0</span>; <span class="comment">#报错，出错的位置是10/0这个过程，抑制的位置是10，无意义</span></span><br><span class="line"><span class="comment">#正确处理</span></span><br><span class="line">$r = @(<span class="number">10</span>/<span class="number">0</span>); <span class="comment">#不报错，因为是过程出错</span></span><br></pre></td></tr></table></figure><h3 id="四、比较运算符"><a href="#四、比较运算符" class="headerlink" title="四、比较运算符"></a>四、比较运算符</h3><p>除了熟悉的<code>&gt;,&lt;,&gt;=,&lt;=,==,!=</code>等运算符，格外介绍下面的特殊运算符。</p><ul><li>&lt;=&gt;：左边大于右边返回1，相等返回0，小于右边返回-1</li><li>===：左边等于右边，且两边数据类型一致，返回true。</li><li>!==：左边等于右边，且两边数据类型一致，返回false。</li></ul><p><strong>注意</strong>：在PHP中比较运算比较特殊，通常系统会自动将类型转换成相同的然后进行比较，所以在使用<strong>==</strong>和<strong>===</strong>比较的时候，如果不够确定可以参考PHP操作手册中的类型比较表。</p><img src="/2020/03/23/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/1.png" class><img src="/2020/03/23/PHP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/2.png" class><h3 id="五、合并运算"><a href="#五、合并运算" class="headerlink" title="五、合并运算"></a>五、合并运算</h3><p><strong>概念：</strong>用于简单的数据存在型判定，不存在时给出一个设定值。</p><ul><li>合并运算需要一个判定：目标。</li><li>合并运算需要一个设定值：目标不存在时的值。</li><li>合并运算符：$a ?? B<ul><li>$a存在，整个表达式返回$a的值。</li><li>$a不存在，整个表达式返回B值。</li></ul></li><li>合并运算是保证代码的逻辑完整性：即总是有一个结果（不会不存在）</li></ul><h3 id="六、连接运算"><a href="#六、连接运算" class="headerlink" title="六、连接运算"></a>六、连接运算</h3><p><strong>概念：</strong>专门为字符串连接操作设定的运算符。</p><ul><li>连接运算需要两个数据的参与。</li><li>连接运算符只有一个：<code>.</code>  英文点。</li><li>连接运算是将两个字符串连接成一个字符串。<ul><li>如果数据不是字符串，系统会自动转变为字符串。</li></ul></li></ul><p><strong>示例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">'hello'</span>;</span><br><span class="line">$b = <span class="string">'world'</span>;</span><br><span class="line"><span class="keyword">echo</span>($a.<span class="string">' '</span>.$b); <span class="comment">#结果：hello world</span></span><br></pre></td></tr></table></figure><h3 id="七、三目运算"><a href="#七、三目运算" class="headerlink" title="七、三目运算"></a>七、三目运算</h3><p>和基本的编程语言一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表达式1?表达式2:表达式3</span><br></pre></td></tr></table></figure><h3 id="八、逻辑运算"><a href="#八、逻辑运算" class="headerlink" title="八、逻辑运算"></a>八、逻辑运算</h3><p>逻辑与或非 。</p><p>&amp;&amp;，||，！。</p><h3 id="九、自操作运算"><a href="#九、自操作运算" class="headerlink" title="九、自操作运算"></a>九、自操作运算</h3><p>自增自减。</p><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h3><h4 id="If分支"><a href="#If分支" class="headerlink" title="If分支"></a>If分支</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($a &gt; $b) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'a &gt; b'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> ($a == $b) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'a = b'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($a &lt; $b) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'a &lt; b'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意一点elseif和else if的一点细微区别，参见博客。<a href="https://blog.csdn.net/qq_31659985/article/details/82807153" target="_blank" rel="noopener">https://blog.csdn.net/qq_31659985/article/details/82807153</a></p><h4 id="Switch分支"><a href="#Switch分支" class="headerlink" title="Switch分支"></a>Switch分支</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(条件变量)&#123;</span><br><span class="line">    <span class="keyword">case</span> 值:</span><br><span class="line">        代码;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件表达式)&#123;</span><br><span class="line">    循环体;</span><br><span class="line">    循环条件变更;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    循环体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="foreach循环"><a href="#foreach循环" class="headerlink" title="foreach循环"></a>foreach循环</h4><p>PHP中专门进行数组遍历的循环</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(数组变量 <span class="keyword">as</span> [下标变量=&gt;] 值变量)&#123;</span><br><span class="line">    通过下标读取数组中每个元素的下标(可以没有)</span><br><span class="line">        通过值变量读取数组中每个元素的值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$info = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'tom'</span>,</span><br><span class="line">    <span class="string">'skill'</span> =&gt; <span class="string">'study'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="string">'20'</span></span><br><span class="line">];</span><br><span class="line"><span class="keyword">foreach</span>($info <span class="keyword">as</span> $k =&gt; $v)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $k . <span class="string">"\t"</span> . $v . <span class="string">"\n"</span>;<span class="comment">#即可依次遍历;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><p>foreach是根据数据指针所在的位置挨个取出元素的</p><ul><li>重置指针：执行一次。</li><li>判断指针有效性<ul><li>指针有效：取出数组元素<ul><li>下标赋值给下标变量（如果提供了下标变量）</li><li>值赋值给值变量</li><li>指针下移</li></ul></li><li>指针无效：循环结束</li></ul></li><li>进入循环体</li></ul><p>foreach可以不获取数组元素的下标</p><h4 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do-while循环"></a>do-while循环</h4><p>语法基本一致。</p><h4 id="break，continue"><a href="#break，continue" class="headerlink" title="break，continue"></a>break，continue</h4><p>语法基本一致。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要介绍PHP的各种运算符，和流程控制。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://iceWind-R.github.io/categories/PHP/"/>
    
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
      <category term="PHP" scheme="http://iceWind-R.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB课程总结（二）</title>
    <link href="http://icewind-r.github.io/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://icewind-r.github.io/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-03-20T12:39:11.000Z</published>
    <updated>2020-05-22T09:54:43.579Z</updated>
    
    <content type="html"><![CDATA[<p>本篇基于上篇文章基础，谈谈Matlab的<strong>数值运算</strong>，包括基本运算，与向量与矩阵处理的相关函数（最大值最小值，平均值，排序等）、多项式的相关函数（求根，加减乘除，导数等）等。</p><a id="more"></a><p>在Matlab中，一切数据均以矩阵的形式出现。相比其他语言，MATLAB在矩阵运算方面具有强大的功能，它提供了多种运算和函数对矩阵进行操作。MATLAB的数值运算包括两种：一种是针对整个矩阵的数学运算，称之为<strong>矩阵运算</strong>；另一种是针对矩阵的每一个元素进行运算的函数，称之为<strong>矩阵元素的运算</strong>。</p><hr><h2 id="一、基本运算功能"><a href="#一、基本运算功能" class="headerlink" title="一、基本运算功能"></a>一、基本运算功能</h2><h3 id="1、算术运算"><a href="#1、算术运算" class="headerlink" title="1、算术运算"></a>1、算术运算</h3><ul><li><p>MATLAB数组支持线性代数中所有的矩阵运算。</p></li><li><p>建立特有的数组运算符，如：“.*”、“./”等。</p></li></ul><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/1.png" class><h3 id="2、逻辑运算"><a href="#2、逻辑运算" class="headerlink" title="2、逻辑运算"></a>2、逻辑运算</h3><p> Matlab提供了3种逻辑运算符：&amp;（与）、|（或）、~（非）。</p><p><strong>逻辑运算符的运算法则：</strong></p><ol><li><p>在逻辑运算中，确认非零元素为真（1），零元素为假（0）。  </p></li><li><p>当两个维数相等的矩阵进行比较时，其相应位置的元素按标量关系进行比较，并给出结果，形成一个维数与原来相同的0、1矩阵；</p></li><li><p>当一个标量与一个矩阵比较时，该标量与矩阵的各元素进行比较，结果形成一个与矩阵维数相等的0、1矩阵；</p></li><li><p>算术运算优先级最高，逻辑运算优先级最低。</p></li></ol><h3 id="3、关系运算"><a href="#3、关系运算" class="headerlink" title="3、关系运算"></a>3、关系运算</h3><p>Matlab提供了6种关系运算符：&lt;、&gt;、&lt;=、&gt;=、==、~=（不等于）。</p><p><strong>关系运算符的运算法则：</strong></p><ol><li><p>当两个标量进行比较时，直接比较两数大小。若关系成立，结果为1，否则为0。</p></li><li><p>当两个维数相等的矩阵进行比较时，其相应位置的元素按标量关系进行比较，并给出结果，形成一个维数与原来相同的0、1矩阵。</p></li><li><p>当一个标量与一个矩阵比较时，该标量与矩阵的各元素进行比较，结果形成一个与矩阵维数相等的0、1矩阵。</p></li></ol><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/2.png" class><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/3.png" class><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/4.png" class><h2 id="二、向量与矩阵处理相关函数"><a href="#二、向量与矩阵处理相关函数" class="headerlink" title="二、向量与矩阵处理相关函数"></a>二、向量与矩阵处理相关函数</h2><h2 id="矩阵分析与处理"><a href="#矩阵分析与处理" class="headerlink" title="矩阵分析与处理"></a>矩阵分析与处理</h2><h3 id="特殊矩阵"><a href="#特殊矩阵" class="headerlink" title="特殊矩阵"></a>特殊矩阵</h3><p>常见的特殊矩阵有零矩阵、幺矩阵、单位矩阵等，这类特殊矩阵在应用中具有通用性。</p><p>1、通用的特殊矩阵<br>常用的产生通用特殊矩阵的函数有：</p><ul><li><p>zeros：产生全0矩阵（零矩阵）。</p></li><li><p>ones： 产生全1矩阵（幺矩阵）。</p></li><li><p>eye： 产生单位矩阵。</p></li><li><p>rand：产生0~1间均匀分布的随机矩阵。</p></li><li><p>randn：产生均值为0，方差为1的标准正态分布随机矩阵。</p><ul><li><p>产生(0,1)区间均匀分布随机矩阵使用rand函数</p></li><li><p>产生均值为0，方差为1的标准正态分布随机矩阵使用randn函数</p></li></ul></li></ul><p><strong>例如：</strong><code>ones(5)</code>产生5*5的单位矩阵。</p><h3 id="1、矩阵变换函数"><a href="#1、矩阵变换函数" class="headerlink" title="1、矩阵变换函数"></a>1、矩阵变换函数</h3><p>包括矩阵重排、矩阵抽取以及矩阵转向等。</p><ol><li><p>矩阵重排函数：<br>reshape(A,m,n)：把矩阵A中所有元素重新排列为m*n的矩阵，矩阵总元素数必须相等。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line">&gt;&gt; <span class="built_in">reshape</span>(a,<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">8</span></span><br></pre></td></tr></table></figure></li><li><p>矩阵抽取函数：<br>diag(A, k)：A为矩阵时，抽取矩阵A的第k条对角线。k可以为正整数也可以为负整数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ; <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line">A =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">&gt;&gt; <span class="built_in">diag</span>(A)        <span class="comment">% 提取A的主对角线元素</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">&gt;&gt; <span class="built_in">diag</span>(A,<span class="number">1</span>)        <span class="comment">% 提取A的第一条对角线的元素（对角线从0计数）</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span></span><br><span class="line">  <span class="number">6</span></span><br></pre></td></tr></table></figure><p><strong>同时该函数还可构造对角矩阵</strong></p><p>如果V是一个m个元素的向量，diag(V)将产生一个m×m对角矩阵，其主对角线元素即为向量V的元素。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">diag</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">-1</span>,<span class="number">4</span>])</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">1</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"><span class="number">0</span>  <span class="number">2</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"><span class="number">0</span>  <span class="number">0</span> <span class="number">-1</span>  <span class="number">0</span></span><br><span class="line"><span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">4</span></span><br><span class="line"><span class="built_in">diag</span>(<span class="number">1</span>:<span class="number">3</span>,<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>矩阵转向函数：<br>transpose(A)：求矩阵A的转置。可以用单引号（’）直接代替transpose函数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>; <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>; <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">A =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; transpose(A)        <span class="comment">% 求A的转置</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="2、矩阵求值函数"><a href="#2、矩阵求值函数" class="headerlink" title="2、矩阵求值函数"></a>2、矩阵求值函数</h3><ul><li>inv(A)：求可逆矩阵A的逆。</li><li>det(A)：求方阵A所对应的行列式的值。</li><li>rank(A)：求矩阵A的秩。</li><li>trace(A)：求矩阵A的迹。</li><li>eig(A)：求矩阵A的特征值和特征向量。</li></ul><h3 id="3、数据统计与分析中的矩阵函数："><a href="#3、数据统计与分析中的矩阵函数：" class="headerlink" title="3、数据统计与分析中的矩阵函数："></a><strong>3、数据统计与分析中的矩阵函数</strong>：</h3><h4 id="1）最大值和最小值"><a href="#1）最大值和最小值" class="headerlink" title="1）最大值和最小值"></a>1）最大值和最小值</h4><p>​      MATLAB提供的求数据序列的最大值和最小值的函数分别为max和min，两个函数的调用格式和操作过程类似。</p><p><strong>1、求向量的最大值和最小值</strong></p><p>求一个向量X的最大值的函数有两种调用格式，分别是：</p><p>(1) y=max(X)：返回向量X的最大值存入y，如果X中包含复数元素，则按模取最大值；</p><p>(2)[y,I]=max(X)：返回向量X的最大值存入y，最大值的序号存入I，如果X中包含复数元素，则按模取最大值。</p><p>求向量X的最小值的函数是min(X)，用法和max(X)完全相同。</p>  <figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;x=[<span class="number">-43</span>,<span class="number">72</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">23</span>,<span class="number">47</span>];</span><br><span class="line">&gt;&gt;y=<span class="built_in">max</span>(x)     <span class="comment">%求向量x中的最大值</span></span><br><span class="line">&gt;&gt;y =</span><br><span class="line">&gt;&gt;<span class="number">72</span></span><br><span class="line">&gt;&gt;[y,l]=<span class="built_in">max</span>(x) <span class="comment">%求向量x中的最大值及其该元素的位置</span></span><br><span class="line">&gt;&gt;y =</span><br><span class="line">&gt;&gt;<span class="number">72</span></span><br><span class="line">&gt;&gt;l =</span><br><span class="line">&gt;&gt;<span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>2、求矩阵的最大值和最小值</strong></p><p>求矩阵A的最大值的函数有3种调用格式，分别是：</p><p>(1) max(A)：返回一个行向量，向量的第i个元素是矩阵A的第i列上的最大值；</p><p>(2) [Y,U]=max(A)：返回行向量Y和U，Y向量记录A的每列的最大值，U向量记录每列最大值的行号；</p><p>(3) max(A,[],dim)：dim取1或2。dim取1时，该函数和max(A)完全相同；dim取2时，该函数返回一个列向量，其</p><p>第i个元素是A矩阵的第i行上的最大值。</p><p>求最小值的函数是min，其用法和max完全相同。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;x=[<span class="number">-43</span>,<span class="number">72</span>,<span class="number">9</span>; <span class="number">16</span>,<span class="number">23</span>,<span class="number">47</span>];</span><br><span class="line">&gt;&gt;y=<span class="built_in">max</span>(x)     <span class="comment">%求矩阵x中每列的最大值</span></span><br><span class="line">y =</span><br><span class="line">     <span class="number">16</span>  <span class="number">72</span>  <span class="number">47</span></span><br><span class="line">&gt;&gt;[y,l]=<span class="built_in">max</span>(x) <span class="comment">%求矩阵x中每列的最大值及其该元素的位置</span></span><br><span class="line">y =</span><br><span class="line">    <span class="number">16</span>  <span class="number">72</span>  <span class="number">47</span></span><br><span class="line">l =</span><br><span class="line">     <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span></span><br><span class="line">&gt;&gt;<span class="built_in">max</span>(x, [],<span class="number">1</span>), <span class="built_in">max</span>(x, [],<span class="number">2</span>) <span class="comment">%求矩阵中每行的最大值</span></span><br></pre></td></tr></table></figure><h4 id="2）求和与求积"><a href="#2）求和与求积" class="headerlink" title="2）求和与求积"></a>2）求和与求积</h4><ul><li><p>sum(X)：返回向量X各元素的和。</p></li><li><p>prod(X)：返回向量X各元素的乘积。</p></li><li><p>sum(A)：返回一个行向量，其第i个元素是A的第i列的元素和。</p></li><li><p>prod(A)：返回一个行向量，其第i个元素是A的第i列的元素乘积。</p></li><li><p>sum(A,dim)：当dim为1时，该函数等同于sum(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行</p><p>的各元素之和。</p></li><li><p>prod(A,dim)：当dim为1时，该函数等同于prod(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行的各元素乘积。</p></li></ul><h4 id="3）平均值与中值"><a href="#3）平均值与中值" class="headerlink" title="3）平均值与中值"></a>3）平均值与中值</h4><p>求数据序列平均值的函数是mean，求数据序列中值的函数是median。两个函数的调用格式为：</p><ul><li>mean(X)：返回向量X的算术平均值。</li><li>median(X)：返回向量X的中值。</li><li>mean(A)：返回一个行向量，其第i个元素是A的第i列的算术平均值。</li><li>median(A)：返回一个行向量，其第i个元素是A的第i列的中值。</li><li>mean(A,dim)：当dim为1时，该函数等同于mean(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行的算术平均值。</li><li>median(A,dim)：当dim为1时，该函数等同于median(A)；当dim为2时，返回一个列向量，其第i个元素是A的第i行的中值。</li></ul><h3 id="4、元素排序"><a href="#4、元素排序" class="headerlink" title="4、元素排序"></a>4、元素排序</h3><p> Matlab中对向量X排序的函数是sort(X), 函数返回一个对X中的元素按升序排列的新向量。</p><p>   sort函数也可以对矩阵A的各列（或行）重新排序，其调用格式为：</p><p>   <code>[Y,I] = sort(A,dim)</code></p><p>   dim=1,按列排序；dim=2,按行排序，Y是排序后的矩阵，I记录Y中的元素在A中的位置。</p><p>命令如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">-8</span>,<span class="number">5</span>;<span class="number">4</span>,<span class="number">12</span>,<span class="number">6</span>;<span class="number">13</span>,<span class="number">7</span>,<span class="number">-13</span>];</span><br><span class="line"> <span class="built_in">sort</span>(A)</span><br><span class="line"> <span class="built_in">ans</span> =</span><br><span class="line"> <span class="number">1</span>    <span class="number">-8</span>   <span class="number">-13</span></span><br><span class="line"> <span class="number">4</span>     <span class="number">7</span>     <span class="number">5</span></span><br><span class="line"><span class="number">13</span>    <span class="number">12</span>     <span class="number">6</span></span><br><span class="line">-<span class="built_in">sort</span>(-A,<span class="number">2</span>)  <span class="comment">%对A的每行按降序排列</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">5</span>       <span class="number">1</span>    <span class="number">-8</span></span><br><span class="line"><span class="number">12</span>     <span class="number">6</span>     <span class="number">4</span></span><br><span class="line"><span class="number">13</span>     <span class="number">7</span>   <span class="number">-13</span></span><br></pre></td></tr></table></figure><h3 id="5、数据插值"><a href="#5、数据插值" class="headerlink" title="5、数据插值"></a>5、数据插值</h3><p>在工程测量和科学实验中，所得到的数据通常是离散的，要得到这些离散点以外的其他点的数值，就需要根据已知的数据进行插值。</p><p>插值函数一般由<strong>线性函数</strong>、<strong>多项式</strong>、<strong>样条函数</strong>或这些函数的<strong>分段</strong>函数充当。</p><p><strong>一维数据插值：被插值函数有一个单变量。</strong></p><p>采用的方法有：线性方法、最近方法、三次样条和三次插值。</p><p>在Matlab中实现这些插值的函数是interp1，其调用格式如下：</p><p><code>Y1 = interp1(X,Y,X1,method)</code></p><p>函数根据X，Y的值，计算函数在X1处的值。</p><ul><li><p>X,Y是两个等长的已知向量，分别描述采样点和样本值；</p></li><li><p>X1是一个向量或标量，描述欲插值的点；</p></li><li><p>Y1是一个与X1等长的插值结果。</p></li><li><p>method是插值方法，允许的取值为：</p><p>（1）‘linear’：线性插值。默认的插值方式。它是把插值点靠近的两个数据点用直线连接，然后在直线上选取</p><p>对应插值点的数据。</p><p>（2）‘nearest’：最近点插值。根据已知插值点与已知数据点的远近程度进行插值。插值点优先选择较近的数</p><p>据点进行插值。</p><p>（3）‘cubic’：3次多项式插值。根据已知数据求出一个3次多项式，然后根据该多项式进行插值。</p><p>（4）‘spline’：3次样条插值。指在每个分段内构造一个3次多项式，使其满足插值条件外，在各节点处具有光</p><p>滑的条件。</p></li></ul><h2 id="三、多项式"><a href="#三、多项式" class="headerlink" title="三、多项式"></a>三、多项式</h2><h3 id="1、多项式的MATLAB表达"><a href="#1、多项式的MATLAB表达" class="headerlink" title="1、多项式的MATLAB表达"></a><strong>1、多项式的MATLAB表达</strong></h3><p>多项式由一个行向量表示：</p><ul><li>该向量元素是该多项式的系数</li><li>且按降幂次序排列  </li></ul><p>如：多项式x4－12x3＋25x＋116由行向量：</p><p>​      <code>p=[1  -12  0  25  116]</code>表示。</p><p><strong>注意，必须包括具有零系数的项。</strong></p><h3 id="2、求解多项式的根？"><a href="#2、求解多项式的根？" class="headerlink" title="2、求解多项式的根？"></a><strong>2、求解多项式的根？</strong></h3><p>roots指令。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;p=[<span class="number">1</span>  <span class="number">-12</span>  <span class="number">0</span>  <span class="number">25</span>  <span class="number">116</span>]</span><br><span class="line">p =</span><br><span class="line">     <span class="number">1</span>   <span class="number">-12</span>     <span class="number">0</span>    <span class="number">25</span>   <span class="number">116</span></span><br><span class="line">&gt;&gt;r=roots(p)</span><br><span class="line">r =</span><br><span class="line">  <span class="number">11.7473</span>          </span><br><span class="line">   <span class="number">2.7028</span>          </span><br><span class="line">  <span class="number">-1.2251</span> + <span class="number">1.4672</span><span class="built_in">i</span></span><br><span class="line">  <span class="number">-1.2251</span> - <span class="number">1.4672</span><span class="built_in">i</span></span><br></pre></td></tr></table></figure><p>MATLAB按惯例规定，多项式是行向量，根是列向量。</p><h3 id="3、已知多项式的根，求解多项式-？"><a href="#3、已知多项式的根，求解多项式-？" class="headerlink" title="3、已知多项式的根，求解多项式 ？"></a><strong>3、已知多项式的根，求解多项式 ？</strong></h3><p>使用ploy指令。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; pp=poly(r)</span><br><span class="line">pp =</span><br><span class="line">    <span class="number">1.0000</span>  <span class="number">-12.0000</span>   <span class="number">-0.0000</span>   <span class="number">25.0000</span>  <span class="number">116.0000</span></span><br></pre></td></tr></table></figure><p>即：x4－12x3＋25x＋116。</p><h3 id="4、多项式的乘法-conv指令"><a href="#4、多项式的乘法-conv指令" class="headerlink" title="4、多项式的乘法(conv指令)"></a><strong>4、多项式的乘法(conv指令)</strong></h3><p>举例：多项式 a(x)=x3＋2x2＋3x＋4 和 b(x)= x3＋4x2＋9x＋16 的乘积。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>] ;  b=[<span class="number">1</span>  <span class="number">4</span>  <span class="number">9</span>  <span class="number">16</span>];</span><br><span class="line">c=conv(a, b)</span><br><span class="line">c =</span><br><span class="line">     <span class="number">1</span>     <span class="number">6</span>    <span class="number">20</span>    <span class="number">50</span>    <span class="number">75</span>    <span class="number">84</span>    <span class="number">64</span></span><br></pre></td></tr></table></figure><p>两个以上的多项式的乘法需要重复使用conv. </p><h3 id="5、多项式加法"><a href="#5、多项式加法" class="headerlink" title="5、多项式加法"></a><strong>5、多项式加法</strong></h3><p>MATLAB没有提供进行加法运算的函数。</p><p>1）如果两个多项式向量大小相同，标准的数组加法有效。把多项式a(x)与上面给出的b(x)相加。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; d=a+b</span><br><span class="line">d =</span><br><span class="line">     <span class="number">2</span>     <span class="number">6</span>    <span class="number">12</span>    <span class="number">20</span></span><br></pre></td></tr></table></figure><p>结果: d(x)= 2x3＋6x2＋12x＋20<br>2）当两个多项式阶次不同，低阶的多项式必须用首零填补，使其与高阶多项式有同样的阶次。<br>考虑上面多项式c和d相加：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;  e=c+[<span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  d]</span><br><span class="line">e =</span><br><span class="line">     <span class="number">1</span>     <span class="number">6</span>    <span class="number">20</span>    <span class="number">52</span>    <span class="number">81</span>    <span class="number">96</span>    <span class="number">84</span></span><br></pre></td></tr></table></figure><p>结果: e(x)= x6+6x5+20x4+52x3+81x2+96x+84</p><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a><strong>案例</strong></h4><p>问题：编写一个多项式加法运算的函数文件。</p><p>明确需求：</p><p>定义一个函数，需要有两个输入参数（比如：p1、p2），一个输出参数p_out。</p><p>p1、p2表示两个待计算的多项式。</p><p>p_out表示两个多项式的求和结果。</p><p>函数的内部处理：</p><ul><li><p>若p1、p2两参数大小相等，则直接相加: p_out=p1+p2</p></li><li><p>若p1、p2两参数大小不等：</p><ul><li><p>If length(p1)&gt;length(p2)</p><p>P2前面要补0元素，使p1、p2两参数大小相等</p></li><li><p>否则</p><p>P1前面要补0元素，使p1、p2两参数大小相等</p></li></ul></li></ul><p>函数文件的编写：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">p_out</span>=<span class="title">poly_sum</span><span class="params">(p1, p2)</span></span></span><br><span class="line"><span class="comment">% calculate the sum of two polynomials </span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> <span class="built_in">length</span>(p1)==<span class="built_in">length</span>(p2)</span><br><span class="line">    p_out=p1+p2;</span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">length</span>(p1)&gt;<span class="built_in">length</span>(p2)</span><br><span class="line">    p2=[<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(p1)-<span class="built_in">length</span>(p2)), p2];</span><br><span class="line">    p_out=p1+p2;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    p1=[<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(p2)-<span class="built_in">length</span>(p1)), p1];</span><br><span class="line">    p_out=p1+p2;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="6、多项式的除法-deconv"><a href="#6、多项式的除法-deconv" class="headerlink" title="6、多项式的除法(deconv)"></a>6、多项式的除法(deconv)</h3><p>举例说明：</p><p>c(x)=x6＋6x5＋20x4＋50x3＋75x2＋84x＋64 除以 b(x)= x3＋4x2＋9x＋16</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; c=[<span class="number">1</span>     <span class="number">6</span>    <span class="number">20</span>    <span class="number">50</span>    <span class="number">75</span>    <span class="number">84</span>    <span class="number">64</span>];</span><br><span class="line">&gt;&gt; b=[<span class="number">1</span>  <span class="number">4</span>  <span class="number">9</span>  <span class="number">16</span>];</span><br><span class="line">&gt;&gt;  [q , r]=deconv(c , b)</span><br><span class="line">q =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">r =</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="7、多项式的导数-polyder"><a href="#7、多项式的导数-polyder" class="headerlink" title="7、多项式的导数 (polyder)"></a>7、多项式的导数 (polyder)</h3><p>举例：求b(x)= x3＋4x2＋9x＋16的导数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; b=[<span class="number">1</span>     <span class="number">4</span>     <span class="number">9</span>    <span class="number">16</span>];</span><br><span class="line">&gt;&gt; d=polyder(b)</span><br><span class="line">d =</span><br><span class="line">     <span class="number">3</span>     <span class="number">8</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure><p>结果为： 3x2＋8x＋9。另外两种形式为：</p><ul><li>p = polyder(P,Q)：求P*Q的导函数</li><li>[p,q] = polyder(P,Q)：求P/Q的导函数，导数分子存入p,分母存入q</li></ul><h3 id="8、多项式的估值-polyval"><a href="#8、多项式的估值-polyval" class="headerlink" title="8、多项式的估值(polyval)"></a>8、多项式的估值(polyval)</h3><p>举例：绘制p(x) = x3＋4x2－7x－10在[-1, 3]段上的曲线。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">linspace</span>(<span class="number">-1</span>, <span class="number">3</span>);  <span class="comment">% choose 100 data points between -1and 3.</span></span><br><span class="line">p=[<span class="number">1</span>  <span class="number">4</span>  <span class="number">-7</span>  <span class="number">-10</span>]; </span><br><span class="line">v=polyval(p, x);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">plot</span>(x, v);</span><br><span class="line">title(<span class="string">'x^&#123;3&#125;+4x^&#123;2&#125;-7x-10'</span>);</span><br><span class="line">xlabel(<span class="string">'x'</span>)</span><br></pre></td></tr></table></figure><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/5.png" class><h3 id="9、函数的数值导数"><a href="#9、函数的数值导数" class="headerlink" title="9、函数的数值导数"></a>9、函数的数值导数</h3><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/8.png" class><p>MATLAB中没有直接提供数值导数的函数，只有计算向前差分的函数<strong>diff</strong>，其调用格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DX = diff(X) <span class="comment">%计算向量X的向前差分</span></span><br><span class="line">DX = diff(X，n) <span class="comment">%计算向量X的n阶向前差分</span></span><br></pre></td></tr></table></figure><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/9.png" class><h3 id="10、数值积分"><a href="#10、数值积分" class="headerlink" title="10、数值积分"></a>10、数值积分</h3><p>一元函数的数值积分<br>◼ 常用积分指令：<strong>quad</strong>和<strong>quadl</strong>。 ◼ 具体调用格式如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">q = quadl(fun,a,b)</span><br><span class="line">q = quadl(fun,a,b,tol)</span><br><span class="line">q = quadl(fun,a,b,tol,trace)</span><br><span class="line">[q,fcnt] = quadl(fun,a,b,...)</span><br></pre></td></tr></table></figure><p>➢ 输入量fun为被积函数的句柄。<br>➢ 输入量a, b分别是积分的下限、和上限，都必须是确定的数值;<br>➢ 前3个输入参数是调用积分指令所必须的，其他可以缺省;<br>➢ 输入量tol是一个标量，控制绝对误差;<br>➢ 输入量trace为非0值时，将随积分的进程逐点画出被积分函数;<br>➢ 输出参数fcnt返回函数的执行次数。<br>Note：quad的调用格式与quadl相同。</p><p><strong>案例</strong></p><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/10.png" class><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/11.png" class><h2 id="四、矩阵求逆与线性方程组求解"><a href="#四、矩阵求逆与线性方程组求解" class="headerlink" title="四、矩阵求逆与线性方程组求解"></a>四、矩阵求逆与线性方程组求解</h2><h3 id="1、矩阵的逆"><a href="#1、矩阵的逆" class="headerlink" title="1、矩阵的逆"></a>1、矩阵的逆</h3><p>对于一个方阵A，如果存在一个与其同阶的方阵B，使得：A·B=B·A=I  (I为单位矩阵）。</p><p>则称B为A的逆矩阵，当然，A也是B的逆矩阵。求方阵A的逆矩阵可调用函数inv(A)。</p><p>例5.18 求方阵A的逆矩阵，且验证。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span>;<span class="number">5</span>,<span class="number">-4</span>,<span class="number">3</span>;<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>];</span><br><span class="line">B = inv(A);</span><br><span class="line">A*B</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">1.0000</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">  <span class="number">-0.0000</span>    <span class="number">1.0000</span>         <span class="number">0</span></span><br><span class="line">  <span class="number">-0.0000</span>         <span class="number">0</span>    <span class="number">1.0000</span></span><br></pre></td></tr></table></figure><h3 id="2、用矩阵求逆方法求解线性方程组"><a href="#2、用矩阵求逆方法求解线性方程组" class="headerlink" title="2、用矩阵求逆方法求解线性方程组"></a>2、用矩阵求逆方法求解线性方程组</h3><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/6.png" class><p><strong>例题：</strong></p><img src="/2020/03/20/MATLAB%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/7.png" class><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>;<span class="number">1</span>,<span class="number">8</span>,<span class="number">27</span>];</span><br><span class="line">b = [<span class="number">5</span>,<span class="number">-2</span>,<span class="number">6</span>]’;</span><br><span class="line">x = inv(A)*b   <span class="comment">%x = A\b</span></span><br><span class="line">x =</span><br><span class="line">  <span class="number">23.0000</span></span><br><span class="line"> <span class="number">-14.5000</span></span><br><span class="line">   <span class="number">3.6667</span></span><br></pre></td></tr></table></figure><p>也可以运用左除运算符求解。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇基于上篇文章基础，谈谈Matlab的&lt;strong&gt;数值运算&lt;/strong&gt;，包括基本运算，与向量与矩阵处理的相关函数（最大值最小值，平均值，排序等）、多项式的相关函数（求根，加减乘除，导数等）等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/categories/MATLAB/"/>
    
    
      <category term="MATLAB" scheme="http://iceWind-R.github.io/tags/MATLAB/"/>
    
      <category term="Learning" scheme="http://iceWind-R.github.io/tags/Learning/"/>
    
  </entry>
  
</feed>
